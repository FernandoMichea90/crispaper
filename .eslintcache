[{"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/index.js":"1","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/App.js":"2","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/reportWebVitals.js":"3","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/UsuarioContext.jsx":"4","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provider/TemaConfig.js":"5","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Login.jsx":"6","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetastres.jsx":"7","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdmEtiquetas.jsx":"8","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Nosotros.jsx":"9","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearPaper.jsx":"10","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetascuatro.jsx":"11","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearCuenta.jsx":"12","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/inicio.jsx":"13","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/appbar.jsx":"14","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/useAutenticado.jsx":"15","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/firebase.js":"16","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/PaperDoc.js":"17","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Papertres.jsx":"18","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AutoCompletarTres.jsx":"19","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Etiquetas.jsx":"20","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paper.jsx":"21","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Caja.jsx":"22","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/BotonFlotante.jsx":"23","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/config.js":"24","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/Funciones.js":"25","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Search.jsx":"26","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/CajaBusqueda.jsx":"27","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Usuarios.jsx":"28","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/FuncionesFirebase.js":"29","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/index.js":"30","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/context.js":"31","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/ListarComentarios.jsx":"32","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Comentario.jsx":"33","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdministrarNosotros.jsx":"34","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/TextoEditor.jsx":"35","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Colaboraciones.jsx":"36","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Eligeetiqueta.jsx":"37","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Progreso.jsx":"38","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tarjeta/BotonMenu.jsx":"39","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Info.jsx":"40","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Info/Formulario.jsx":"41","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Info/Imagen.jsx":"42","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Verinfo.jsx":"43","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Cargando.jsx":"44","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Estilos.jsx":"45","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Estructura.jsx":"46","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Formulario.jsx":"47","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Imagen.jsx":"48","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Botones.jsx":"49","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Helmet/Helmet.jsx":"50","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Populares.jsx":"51","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Recientes.jsx":"52","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/WhyPag.jsx":"53","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Why/Componentes.jsx":"54","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Why/Why.jsx":"55","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/WhyPagAdmin.jsx":"56","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/AdminComponentes.jsx":"57","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/Dialogo.jsx":"58","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Titulo/Titulo.jsx":"59","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Titulo/Titulo.jsx":"60","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Buscador.jsx":"61","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Buscador.jsx":"62","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Select.jsx":"63","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Tabla.jsx":"64","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/Navegacion.jsx":"65","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/MenuNav.jsx":"66","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/AdmInformacion.jsx":"67","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/AdmRegion.jsx":"68","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/Formulario.jsx":"69","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/Tabla.jsx":"70","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Mostrar.jsx":"71","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AdministrarEtiqueta/adminEtiqueta.jsx":"72","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/CrearPaper/SliderNota.jsx":"73","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AdministrarEtiqueta/VentanaEmergente.jsx":"74"},{"size":608,"mtime":1615496437395,"results":"75","hashOfConfig":"76"},{"size":6232,"mtime":1634699673462,"results":"77","hashOfConfig":"76"},{"size":362,"mtime":1611457257907,"results":"78","hashOfConfig":"76"},{"size":374,"mtime":1615487440284,"results":"79","hashOfConfig":"76"},{"size":711,"mtime":1634068300863,"results":"80","hashOfConfig":"76"},{"size":9553,"mtime":1634068300844,"results":"81","hashOfConfig":"76"},{"size":20863,"mtime":1634068300839,"results":"82","hashOfConfig":"76"},{"size":30078,"mtime":1636696365795,"results":"83","hashOfConfig":"76"},{"size":2720,"mtime":1634068300845,"results":"84","hashOfConfig":"76"},{"size":35517,"mtime":1636555599326,"results":"85","hashOfConfig":"76"},{"size":8849,"mtime":1636566312596,"results":"86","hashOfConfig":"76"},{"size":8688,"mtime":1634068300829,"results":"87","hashOfConfig":"76"},{"size":1262,"mtime":1634068300859,"results":"88","hashOfConfig":"76"},{"size":22425,"mtime":1636698030300,"results":"89","hashOfConfig":"76"},{"size":2599,"mtime":1634068300861,"results":"90","hashOfConfig":"76"},{"size":1669,"mtime":1634068300869,"results":"91","hashOfConfig":"76"},{"size":2153,"mtime":1621674997219,"results":"92","hashOfConfig":"76"},{"size":28086,"mtime":1634068300810,"results":"93","hashOfConfig":"76"},{"size":3502,"mtime":1636361866466,"results":"94","hashOfConfig":"76"},{"size":1368,"mtime":1615771018382,"results":"95","hashOfConfig":"76"},{"size":9536,"mtime":1619022171417,"results":"96","hashOfConfig":"76"},{"size":46333,"mtime":1634068300795,"results":"97","hashOfConfig":"76"},{"size":947,"mtime":1634068300794,"results":"98","hashOfConfig":"76"},{"size":830,"mtime":1634068300866,"results":"99","hashOfConfig":"76"},{"size":688,"mtime":1634068300823,"results":"100","hashOfConfig":"76"},{"size":1637,"mtime":1634068300850,"results":"101","hashOfConfig":"76"},{"size":45716,"mtime":1634068300796,"results":"102","hashOfConfig":"76"},{"size":9742,"mtime":1634068300850,"results":"103","hashOfConfig":"76"},{"size":12183,"mtime":1635867711022,"results":"104","hashOfConfig":"76"},{"size":125,"mtime":1597375456000,"results":"105","hashOfConfig":"76"},{"size":112,"mtime":1612113969878,"results":"106","hashOfConfig":"76"},{"size":4918,"mtime":1634068300842,"results":"107","hashOfConfig":"76"},{"size":3101,"mtime":1634068300799,"results":"108","hashOfConfig":"76"},{"size":5948,"mtime":1634068300827,"results":"109","hashOfConfig":"76"},{"size":1131,"mtime":1634068300814,"results":"110","hashOfConfig":"76"},{"size":4925,"mtime":1634068300828,"results":"111","hashOfConfig":"76"},{"size":6613,"mtime":1636658837226,"results":"112","hashOfConfig":"76"},{"size":554,"mtime":1634068300812,"results":"113","hashOfConfig":"76"},{"size":2542,"mtime":1634068300812,"results":"114","hashOfConfig":"76"},{"size":8104,"mtime":1634068300841,"results":"115","hashOfConfig":"76"},{"size":4095,"mtime":1634068300801,"results":"116","hashOfConfig":"76"},{"size":2781,"mtime":1634068300802,"results":"117","hashOfConfig":"76"},{"size":1735,"mtime":1634068300851,"results":"118","hashOfConfig":"76"},{"size":356,"mtime":1634068300798,"results":"119","hashOfConfig":"76"},{"size":4053,"mtime":1636698332308,"results":"120","hashOfConfig":"76"},{"size":927,"mtime":1634068300819,"results":"121","hashOfConfig":"76"},{"size":1433,"mtime":1634068300820,"results":"122","hashOfConfig":"76"},{"size":2599,"mtime":1634068300820,"results":"123","hashOfConfig":"76"},{"size":2631,"mtime":1634068300817,"results":"124","hashOfConfig":"76"},{"size":2290,"mtime":1634068300800,"results":"125","hashOfConfig":"76"},{"size":46459,"mtime":1634068300846,"results":"126","hashOfConfig":"76"},{"size":46487,"mtime":1634068300848,"results":"127","hashOfConfig":"76"},{"size":1529,"mtime":1634068300852,"results":"128","hashOfConfig":"76"},{"size":871,"mtime":1634068300821,"results":"129","hashOfConfig":"76"},{"size":591,"mtime":1634068300822,"results":"130","hashOfConfig":"76"},{"size":3936,"mtime":1634068300857,"results":"131","hashOfConfig":"76"},{"size":4891,"mtime":1634068300854,"results":"132","hashOfConfig":"76"},{"size":5469,"mtime":1634068300804,"results":"133","hashOfConfig":"76"},{"size":1046,"mtime":1634068300815,"results":"134","hashOfConfig":"76"},{"size":2840,"mtime":1634068300856,"results":"135","hashOfConfig":"76"},{"size":4510,"mtime":1636518556023,"results":"136","hashOfConfig":"76"},{"size":3619,"mtime":1636688543027,"results":"137","hashOfConfig":"76"},{"size":1046,"mtime":1636659895854,"results":"138","hashOfConfig":"76"},{"size":5879,"mtime":1636570924485,"results":"139","hashOfConfig":"76"},{"size":782,"mtime":1634703729452,"results":"140","hashOfConfig":"76"},{"size":1862,"mtime":1636694737070,"results":"141","hashOfConfig":"76"},{"size":4813,"mtime":1635265159889,"results":"142","hashOfConfig":"76"},{"size":4534,"mtime":1635265174470,"results":"143","hashOfConfig":"76"},{"size":1779,"mtime":1635264811938,"results":"144","hashOfConfig":"76"},{"size":1878,"mtime":1635265964206,"results":"145","hashOfConfig":"76"},{"size":2867,"mtime":1635927648007,"results":"146","hashOfConfig":"76"},{"size":863,"mtime":1636034349989,"results":"147","hashOfConfig":"76"},{"size":1014,"mtime":1636555634308,"results":"148","hashOfConfig":"76"},{"size":1996,"mtime":1636603570241,"results":"149","hashOfConfig":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},"ipoow4",{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"152"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"152"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":"167","usedDeprecatedRules":"152"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"152"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"152"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"152"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":1,"source":"185","usedDeprecatedRules":"152"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"152"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"152"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"152"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"152"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"152"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":1,"source":"207","usedDeprecatedRules":"152"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"152"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"152"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":1,"source":"220","usedDeprecatedRules":"152"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"223","usedDeprecatedRules":"152"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"152"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"234","usedDeprecatedRules":"152"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"152"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"152"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"152"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"246","usedDeprecatedRules":"152"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"152"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"152"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"152"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"152"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"152"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"152"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"152"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"152"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"152"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"152"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":1,"source":"287","usedDeprecatedRules":"152"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":1,"source":"290","usedDeprecatedRules":"152"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"152"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"152"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"152"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"152"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"152"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"152"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"152"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"152"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"152"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"152"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"152"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"152"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"152"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"152"},"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/index.js",[],["349","350"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/App.js",["351","352","353","354","355","356"],"import React ,{useState,useContext,useEffect}from 'react'\nimport Login from '../src/Paginas/Login'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Inicio from './Paginas/inicio'\nimport {ThemeProvider, makeStyles} from  \"@material-ui/core/styles\"\nimport theme  from \"./Provider/TemaConfig\"\nimport {UsuarioContext,UsuarioProvider } from \"./Provedores/UsuarioContext\"\nimport  Navegador  from './Componetes/Navegador/appbar'\nimport CrearPaper from './Paginas/CrearPaper'\nimport Etiquetas from './Paginas/Etiquetastres'\nimport EtiquetasDos from './Paginas/Etiquetascuatro'\nimport {useHistory} from 'react-router-dom'\nimport AdmEtiquetas from './Paginas/AdmEtiquetas'\nimport CrearCuenta from './Paginas/CrearCuenta'\nimport Nosotros from '../src/Paginas/Nosotros'\nimport Search from '../src/Paginas/Search'\nimport Usuarios from '../src/Paginas/Usuarios'\nimport ListarComentarios from './Paginas/ListarComentarios'\nimport AdministrarNosotros from \"../src/Paginas/AdministrarNosotros\"\nimport Colaboraciones  from \"../src/Paginas/Colaboraciones\"\nimport Eligeetiqueta from './Paginas/Eligeetiqueta'\nimport Info from './Paginas/Info'\nimport Verinfo from './Paginas/Verinfo'\nimport Populares from './Paginas/Populares'\nimport Recientes from './Paginas/Recientes'\nimport WhyPag from './Paginas/WhyPag'\nimport WhyPagAdmin from './Paginas/admin/WhyPagAdmin'\nimport Titulo from './Paginas/admin/Titulo/Titulo'\nimport NavegacionEtiquetas from './Paginas/admin/Etiquetas/Navegacion'\n\nconst estilos =makeStyles((theme)=>({\n\nroot:{\n\n  \"& body\":{\n    backgroundColor:\"#ffffff\"\n  }\n  ,\n  \"& .swal2-textarea\": {\n    fontFamily:\"Nunito !important\",\n    color:\"#21cbce\",\n },\n \n}\n\n\n}))\n\n\n\nconst App = (props) => {\n\n  const clases=estilos()\n  const history=useHistory()\nconst [recientes, setrecientes] = useState(true)\nconst [valorados, setvalorados] = useState(false)\nconst [match, setmatch] = useState()  \nconst usuario=useContext(UsuarioContext)\n//  agregar  un texto general  \nconst [textoGeneral, setTextoGeneral]=useState(\"The Latest\")\n\n const reciente=()=>{\n\n\n\n//   if(recientes)\n//   {\n\n//   setvalorados(false)\n//   setrecientes(false)\n// }else\n//   {\n//     setvalorados(false)\n//     setrecientes(true)\n\n//   }\n\n        setTextoGeneral(\"The Latest\")\n        setvalorados(false)\n        setrecientes(true)\n\n      \n\n\n}\n\n\n\nconst mejorvalorados=()=>{\n\n      // if(valorados){\n\n      //   setvalorados(false)\n      //   setrecientes(false)\n      // }else\n      //   {\n      //     setvalorados(true)\n      //     setrecientes(false)\n      \n      //   } \n        setTextoGeneral(\"Popular\")\n        setvalorados(true)\n        setrecientes(false)\n      \n}\n\nuseEffect(() => {\n\n  console.log(\"aleta\")\n\n  // alert(history.location.pathname)\n \n}, [])\n\n  \n  return (\n    <Router>\n  \n    <ThemeProvider theme={theme}>\n   \n         \n\n                <div className={clases.root}>\n                  <Navegador  mejorvalorados={mejorvalorados} recientes={recientes} valorados={valorados} reciente ={reciente} ></Navegador>\n\n                <Switch>\n                <Route  path=\"/crearcuenta\" component={CrearCuenta}></Route>\n                <Route  path=\"/nuevopaper\"        render={(props)=>(< CrearPaper {...props}   />)} ></Route>\n                <Route  path=\"/editarpaper/:id\" component={CrearPaper}></Route>\n                <Route  path=\"/etiquetas\"  render={(props)=>(<Etiquetas {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n                <Route  path=\"/tag/:valor\"  render={(props)=>(<EtiquetasDos {...props}  valorados={valorados} recientes={recientes} />)}></Route>\n                <Route  path=\"/buscar/:papermatch\"  render={(props)=>(<Inicio {...props}  valorados={valorados}  recientes={recientes} />)} ></Route> \n                <Route  path=\"/search\"  render={(props)=>(<Search {...props}  valorados={valorados}  recientes={recientes} />)} ></Route> \n                <Route  path=\"/adminetiquetas\"  render={(props)=>(<NavegacionEtiquetas {...props}   />)} ></Route>\n                <Route  path=\"/admin\" render={(props)=>(<Login {...props}  />)} ></Route>\n                <Route  path=\"/about\" component={Nosotros}></Route>\n                <Route  path=\"/listusuarios\" component={Usuarios}></Route>\n                <Route  path=\"/listacomentarios\" component={ListarComentarios}></Route>\n                <Route  path=\"/colaborate\" component={Colaboraciones}></Route>\n                <Route  path=\"/administrarnosotros\"  component={AdministrarNosotros} ></Route>\n                <Route  path=\"/info/:id\"  render={(props)=>(< Info {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n                <Route  path=\"/information/:id\"  render={(props)=>(<Verinfo {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n                <Route exac path=\"/popular\"  render={(props)=>(<Populares {...props}  textoGeneral={textoGeneral}  valorados={valorados} recientes={recientes} />)} ></Route> \n                <Route exac path=\"/latest\"  render={(props)=>(<Recientes {...props}  textoGeneral={textoGeneral}  valorados={valorados} recientes={recientes} />)} ></Route> \n                <Route exac path=\"/why\"  render={(props)=>(<WhyPag {...props}  textoGeneral={textoGeneral}  valorados={valorados} recientes={recientes} />)} ></Route> \n                <Route exac path=\"/adminwhy\"  render={(props)=>(<WhyPagAdmin {...props}  textoGeneral={textoGeneral}  valorados={valorados} recientes={recientes} />)} ></Route> \n\n                {/* /<Route exac path=\"/\"  render={(props)=>(<Inicio {...props}  textoGeneral={textoGeneral}  valorados={valorados} recientes={recientes} />)} ></Route>  */}\n                <Route  path=\"/information/:id?fbclid\"  render={(props)=>(<Eligeetiqueta {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n                <Route  path=\"/admintitulo\"  render={(props)=>(<Titulo  {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n                <Route  path=\"/\"  render={(props)=>(<Eligeetiqueta {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n\n          </Switch>\n        </div>\n        \n                \n      \n     </ThemeProvider>\n  \n       </Router>\n  )\n}\n\nexport default App\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/reportWebVitals.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/UsuarioContext.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provider/TemaConfig.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Login.jsx",["357","358","359","360","361","362","363","364","365","366","367","368"],"import React,{useState,useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Firebase from \"../firebase/firebase\"\nimport Google from '../../src/google.png'\nimport Swal from 'sweetalert2'\n\n\nfunction Copyright() {\n\n\n    \n\n\n\n\n\n\n\n\n\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" >\n      Planetcolab\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '92vh',\n\n  \"& body\":{\n    backgroundColor:\"#ffffff\"\n  },\n   \n\n    \" & .submit\": {\n      margin: theme.spacing(5, 0, 2),\n      background:\"#ffffff\",\n      color:\"#000000\"\n    },\n    \" & .MuiButton-containedPrimary:hover\" :{\n      backgroundColor: \"#303f9f00\",\n      color:\"#5fcccf\",\n      border:\"1px solid\"\n  },\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\"#ffffff\",\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(1, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  botonGoogle:{\n    background:\"#ffffff\",\n    color:\"#000000\"\n  },\n  imagenGoogle:{\n    margin:\"12px\"\n  }\n\n}));\n\nexport default function SignInSide(props) {\n\n\n\n\n  const [recuerdame, setrecuerdame] = useState({\n    recuerdame:false\n  })\n\n  const [user, setuser] = useState({\n    email:\"\",\n   password:\"\" \n\n  })\n  const [errores, seterrores] = useState({\n    email:null,\n    password:null\n\n  })\n\n  const classes = useStyles();\n\n\n\n  const handleChangeCheck=(e)=>{\n   \n\n        if(e.target.checked==false){\n\n          localStorage.clear()\n        }\n\n\n      setrecuerdame({\n        [e.target.name]:e.target.checked\n\n      })\n\n\n}\n\n\n\n\n  const handleChange=e=>{\n      e.preventDefault()\n        setuser({\n          ...user,[e.target.name]:e.target.value\n\n        })\n\n\n  }\n\n\n  const validar=()=>{\n\n      let err={}\n\n      if(user.email==\"\"){\n          err.email=\"debes ingresar un usuario\"\n      }else{ \n      \n            if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(user.email) ) {\n              err.email= \"Email no válido\"\n            }\n        }\n      if(user.password==\"\"){\n        err.password=\"debes ingresar una contraseña\"\n      }\n\n\n        return err\n\n  }\n\n  const iniciarCorreoGmail=()=>{\n       // alert(\"paso por el boton\")\n       Firebase.registrarCorreo()\n       props.history.push(\"/\")\n      \n       \n   }\n\n\n\n  const iniciarSesion=async()=>{\n    let err=validar()\n    seterrores(err)\n\n    if(Object.keys(err).length){\n\n       \n\n    }else{\n\n      try{\n      await Firebase.login(user)\n       recordar()\n        props.history.push(\"/\")\n\n      }catch(error){\n\n        console.log(error.code)\n\n        if(error.code==\"auth/wrong-password\"){\n\n          Swal.fire({\n            title:\"Error\",\n            text:\"contraseña invalida\",\n            icon:\"error\",\n            confirmButtonColor:'#21cbce',\n        })\n  \n  \n        }\n  \n\n\n        if(error.code==\"auth/user-not-found\"){\n\n          Swal.fire({\n            title:\"La cuenta no existe\",\n            icon:\"error\"\n        })\n\n        }\n      }\n    \n    \n\n    }\n\n\n  }\n\n  const recordar =()=>{\n\n      if(recuerdame.recuerdame==true){\n\n           localStorage.user=user.email\n           localStorage.password=user.password\n           localStorage.recuerdame=recuerdame.recuerdame\n\n\n      }else{\n\n        localStorage.clear()\n      }\n\n  }\n\nconst recuperarContrasena=async()=>{\n\n   await Swal.fire({\n    title: 'Recuperar contraseña',\n    input: 'text',\n    confirmButtonColor: '#21cbce',\n    \n    inputPlaceholder: 'Ingrese su  correo',\n    preConfirm: async(login) => {\n      \n      try {\n\n        if(login==\"\"){\n       \n          Swal.showValidationMessage(\n            `Debe ingresar un correo`\n          )\n  \n       \n      }else{ \n        \n        if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(login) ) {\n          Swal.showValidationMessage(\n            `Correo invalido`\n          )\n  \n        }else{\n              console.log(\"hola mundo\")\n          await Firebase.auth.sendPasswordResetEmail(login).then((prueba)=>{\n                  console.log(prueba)\n                  return {\n                    resultado:\"correoenviado\"\n                  }\n\n          }).catch(error=>{ \n            console.log(error)\n          })\n        }\n\n\n\n        }\n        \n      } catch (error) {\n        console.log(error)\n      }\n     \n  \n  \n  \n  },\n    allowOutsideClick: () => !Swal.isLoading()\n  }).then((result) => {\n    \n\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: `correo enviado`,\n        icon:  `success`\n      })\n    }\n  \n  })\n   \n  \n\n\n}\n\n\n useEffect(() => {\n            let prueba={\n              email:\"\",\n              password:\"\"\n            }\n      \n         if(localStorage.user!=undefined){\n       \n                  prueba.email=localStorage.user\n           \n         }\n         if(localStorage.password!=undefined){\n          \n              prueba.password=localStorage.password\n         }\n\n          if(localStorage.recuerdame!=undefined){\n          setrecuerdame({recuerdame:localStorage.recuerdame})\n       }\n     \n       \n\n\n\n      \n        setuser(prueba)\n\n\n \n }, [])\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n         \n        <Avatar className={classes.avatar}>\n            <LockOutlinedIcon color=\"secondary\" />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n          </Typography>\n          <div className={classes.form} >\n\n\n            {errores.email?\n            \n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n           \n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              autoComplete=\"email\"\n           \n              error\n              id=\"standard-error\" \n              helperText={errores.email}\n            />:\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={handleChange}\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email address\"\n            name=\"email\"\n            autoComplete=\"email\"\n          \n            value={user.email}\n          />\n            }\n\n\n\n\n            {errores.password?\n\n<TextField\nvariant=\"outlined\"\nmargin=\"normal\"\nrequired\nfullWidth\nname=\"password\"\nlabel=\"Password\"\ntype=\"password\"\nid=\"password\"\nautoComplete=\"current-password\"\nerror\nid=\"standard-error\" \nonChange={handleChange}\nhelperText={errores.password}\n/>\n            \n          :\n          <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          onChange={handleChange}\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={user.password}\n        />\n\n\n\n          \n          }\n          \n            <FormControlLabel\n              control={<Checkbox  checked={recuerdame.recuerdame} name=\"recuerdame\" onChange={handleChangeCheck} value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={()=>iniciarSesion()}\n            >\n              Sign In\n            </Button>\n\n            <Button\n             \n             fullWidth\n             variant=\"contained\"\n             \n             className=\"submit\"\n             onClick={()=>iniciarCorreoGmail()}\n\n\n           >\n\n             <img className={classes.imagenGoogle} src ={Google} height=\"25\" />\n             login with google\n           </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link onClick={()=> recuperarContrasena()} variant=\"body2\">\n                  Forgot you password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link  href=\"/crearcuenta\"  variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </div>\n           \n        \n           \n        \n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetastres.jsx",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, { useEffect,useState ,useContext} from 'react'\nimport Firebase from '../firebase/firebase'\nimport { Typography,makeStyles,Grid,CircularProgress,Button } from '@material-ui/core'\nimport Paper from \"../Componetes/Paper\"\nimport EtiquetasIcon from '@material-ui/icons/LocalOffer';\nimport { useHistory } from 'react-router-dom';\nimport Paperdos from \"../Componetes/Papertres\"\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport {actualizarPaper,ActualizarPaperEnEtiquetas} from '../Funciones/PaperDoc'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Pajaro from '../../src/pajaro.svg'\n\n\n\nconst estilos=makeStyles((theme)=>({\n    \n    root:{\n\n        \"& .botonEtiqueta\":{\n            background:\"#ffffff\",\n            color:\"#212121 !important\",\n            marginTop:\"10px\",\n            fontSize:\"27px\",\n            fontFamily:\"nunito\",\n            \"&:hover\": {\n                background:\"#36cbce\",\n                color:\"#ffffff!important\",\n             },\n        \n        },\n        \"& .botonEtiqueta .MuiSvgIcon-root\":{\n            color:\"#36cbce\"\n        },\n        \n        \"& .botonEtiqueta:hover .MuiSvgIcon-root\":{\n            color:\"#ffffff\"\n        },\n        \n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n    },\n    \n    texto:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n    \n\n\n    },\n\n    divEtiqueta: {\n\n        height:\"100%\",\n        margin:\"auto\"\n    },\n    \n    \n    \n    textoDos:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n        textTransform:\"uppercase\"\n\n\n    },\n    divTag:{\n\n        padding:\"50px 0px\"\n    },\n    divEtiqueta:{\n\n        margin:\"29px auto\",\n        width:\"75vw\"\n\n    },\n    divReg:{\n\n        margin:\"45px auto\",\n        width:\"75vw\"\n\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        }\n\n        ,textNoDisponible:{\n\n\n            fontFamily:\"Nunito\",\n            color:\"#808080\"\n        } }\n))\n\n\n\nconst Etiquetas = (props) => {\n \nconst clases=estilos()    \nconst history=useHistory()\n\nconst usuario =useContext(UsuarioContext)\n// guardar el valor \nconst [elvalor, setelvalor] = useState()\n// state etiquet para pedir mas \nconst [etiquetarray, setetiquetarray] = useState([])\nconst [etiquetas, setetiquetas] = useState([])\nconst [pedirmas, setpedirmas] = useState(false)\nconst [paper, setpaper] = useState([])\nconst [cargando, setcargando] = useState(false)\nconst [ultimo, setultimo] = useState(0)\nconst [changeLike, setChangeLike] = useState({\n    cambio:false,\n    idEtiqueta:null,\n    paper:null\n\n\n})\nconst recientes=props.recientes\nconst valorados=props.valorados\n//  crear nuevo state para el  el nuevo arreglo \nconst [paperArray, setpaperArray] = useState([])\n// buscar etiquetas \nconst buscaretiquetas=async()=>{\n setcargando(true)   \n \n  const lista  =await Firebase.db.collection(\"etiquetas\").get()\n\n  const listados = await Promise.all(lista.docs.map(async(doc)=>{\n            //console.log(doc.data())\n            // etiqueta \n             let etiqueta= {id:doc.id,\n                 ...doc.data()}\n            console.log(etiqueta)  \n            //mapear etiqueta \n             let listatres=[] \n             \n                    if (valorados){\n                        listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"likes\",\"desc\").limit(2).get()\n                    }else{\n\n                                if(recientes){\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(2).get()\n\n\n                                }else{\n\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").limit(2).get()\n                                } \n                    }\n\n             \n             const listacuatro= listatres.docs.map(doc=>{\n                    return {\n                        id:doc.id,\n                        ...doc.data(),\n                        click:false,\n                    }  \n             }\n             )       \n             console.log(listacuatro)\n             return{\n                etiquetas:etiqueta,\n                paper:listacuatro\n\n            }\n                // return {\n                //     id:doc.id,\n                //     ...doc.data()\n                // }\n            }))  \n                         \n  console.log(listados)        \n  setpaperArray(listados)  \n  setcargando(false)\n\n\n}\n\n\nfunction manejarSnapshot(snapshot){\n\n    const lista =snapshot.docs.map(doc=>{\n\n        return {\n\n            id:doc.id,\n            ...doc.data()\n        }\n\n\n    })\n\n setetiquetas(lista)\n setcargando(false)\n //armarpaper(lista)\n //segunda lista return true \n\n}\n\n\nconst armarconsultrecientes=(lista)=>{\n    lista.sort((a,b)=>(a.subida<b.subida)?1:-1)\n    return lista \n}\nconst armarconsultvalorados=(lista)=>{\n\n    lista.sort((a,b)=>(a.likes<b.likes)?1:-1)\n    return lista \n\n}\nconst megusta=(valor)=>{\n        console.log(valor)\n        megustacuatro(valor)\n}\n// Éste va a ser el me gusta sin validar usuario\nconst megustaSinValidarUsuario=(paperNuevo)=>{\n\n    // recorrer arreglo en donde esta etiqueta y paper 'paperArray'\n    //crear nueva constante del paper\n    const nuevoPaperArray=paperArray.map(paperMap=>{\n\n                    //recorrer solo arreglo paper \n                    //paperMap = paper[]\n                    console.log(paperArray)\n                     let paper=paperMap.paper.map((paperNew)=>{\n                                //validar que los paper coincidan \n                                if(paperNew.id==paperNuevo.id){\n                                    console.log(paperMap.etiquetas.id)\n\n                                        //\n\n                                    return paperNuevo\n                                } else{\n                                    return paperNew\n                                }       \n                        })                \n                // crear nuevo objeto con  la etiqueta y el paper \n                let nuevoObjeto={\n                    etiquetas:paperMap.etiquetas,\n                    paper:paper   \n                }\n                //retornar objeto  \n                return nuevoObjeto\n    })\n// insertar  paperArray\n  setpaperArray(nuevoPaperArray)\n\n    \n}\n\n\nconst pedirMore=()=>{\n    listaconid(elvalor,true)    \n}\n\n\n\nconst megustacuatro=async(valor)=>{ \n    setcargando(true)\n    if(usuario==null) {\n            return history.push(\"/login\")\n    }\n    // prueba de las funciones \n    //const valorRenovado=  await RetornarPaper(valor.id)\n    //valor=valorRenovado\n    if(valor.haVotado==undefined){                    \n            var antiguoHaVotado=[]\n    }else{\n            var antiguoHaVotado=valor.haVotado\n    }                      \n    // nuevo paper \n    let newPaper={}\n    let nuevaLista=[]\n    if(antiguoHaVotado.includes(usuario.uid)){ \n            antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                    return obj!==usuario.uid\n            })\n            let megusta=valor.likes-1 \n             newPaper={\n                    ...valor,\n                     likes:megusta,\n                    haVotado:antiguoHaVotado\n            }\n             //listaPaperdos(newPaper,megusta,antiguoHaVotado)\n            //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n            //RenovarPaperMapEtiqueta(nuevoPaper)\n            // \n            nuevaLista= megustacinco(newPaper,megusta,antiguoHaVotado)\n    console.log(newPaper)\n }else{ \n    // alert(\"no incluido\")\n const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n console.log(nuevoHaVotado)\n let megusta=valor.likes+1   \n \n\n // crear variable de paper \n\n newPaper={\n    ...valor,\n     likes:megusta,\n    haVotado:nuevoHaVotado\n}\nnuevaLista=megustacinco(newPaper,megusta,nuevoHaVotado)\nconsole.log(newPaper,megusta,nuevoHaVotado)\n//listaPaperdos(newPaper,megusta,nuevoHaVotado)\n//await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n\n//RenovarPaperMapEtiqueta(nuevoPaper)\n\n\n\n    //        let arreglo=paper \n    //        setpaper([])\n\n    // const nuevoPaper=arreglo.map(papel=>{\n    //    if(valor.id==papel.id){\n\n\n\n             \n    //         return{\n    //                 ...papel,\n    //                 likes:1\n    //         }\n\n    //    }\n\n    //    return papel\n\n    // })\n\n    // setpaper(nuevoPaper)\n\n}\n\nconsole.log(nuevaLista)\nsetpaperArray(nuevaLista)\nsetcargando(false)\n actualizarPaper(newPaper)\n ActualizarPaperEnEtiquetas(newPaper)\n// buscaretiquetas()\n// props.setChangeLike({\n//         cambio:true,\n//         idEtiqueta:props.id,\n//         paper:newPaper\n//     })\n\n\n         \n\n\n\n\n}\n\n\n\nconst  megustacinco=(valor,megusta,nuevosvotos)=>{\n\n  const nuevaLista =paperArray.map(doc=>{\n\n                console.log(doc)\n                  const nuevaListaDos=doc.paper.map(doc=>{\n                        console.log(doc)\n                                if(valor.id==doc.id){\n\n                               \n                                    return {\n                                        ...valor,\n                                        likes:megusta,\n                                        haVotado:nuevosvotos       \n                                    }\n                            }\n\n\n\n                            return doc\n\n\n                    })\n\n\n                   return {\n                       etiquetas:doc.etiquetas,\n                       paper:nuevaListaDos\n                   }\n\n  })\n\n  return nuevaLista\n\n\n}\n\n\n\n\nconst listaconid=async(valor,ruta)=>{\n\n    setcargando(true)\n        setetiquetas(valor)\n        setpedirmas(true)\n          \n\n    if(ruta){\n        \n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimo).limit(5).get()\n\n\n    }else{\n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get()\n        }\n\n    var consult=consulta.docs.map(doc=>{\n \n         return {\n \n             id:doc.id,\n             ...doc.data()\n         }\n \n    \n     })\n\n     console.log(consult)\n\n     // guardar en el state la etiqueta \n     \n     setetiquetarray(antiguo=>[...antiguo,...consult])\n\n\n     if(consult.length){\n        let nuevoultimo=consult[consult.length-1].id\n                 console.log(nuevoultimo)\n                if(nuevoultimo!=undefined){\n                    setultimo(consult[consult.length-1].id)\n                    \n                }\n\n    }\n     \n\n// console.log(consult)\n\n// armar consulta del nuevo arreglo \n\nconst etiquet = await Firebase.db.collection(\"etiquetas\").doc(valor).get().then((doc)=>{\n    // console.log(doc.id)\n    // console.log(doc.data())\n    return{\n        id:doc.id,\n        ...doc.data()\n\n    }\n\n})\n\nconsole.log(etiquet)\n\n\n// armar el objeto \n\nconst nuevoObjeto={\n    etiquetas:etiquet,\n    paper:consult\n}\n\nconsole.log(nuevoObjeto)\n\nlet prueba=[]\nprueba.push(nuevoObjeto)\nsetpaperArray(prueba)\nsetcargando(false)\n\n//  if(recientes){\n//          alert(\"prueba\")\n//         var consult =  armarconsultrecientes(consult)\n// }\n// if(valorados){\n\n     \n    //     var consult =  armarconsultvalorados(consult)\n    // }\n\n\n    //      var res={\n    //         tag:valor,\n    //         lista:consult,\n    //         cantidad:consult.length\n    //      }\n        \n    //      setpaper([res])\n        \n    //      setcargando(false)\n            \n\n    }\n\n    \n    useEffect(async() => {\n    \n        const {valor}=props.match.params\n\n\n\n    \n\n        if(valor){\n            setelvalor(valor)\n            listaconid(valor,false)\n        \n        }else{ \n        //alert(\"prueba\")\n        buscaretiquetas()\n        setpedirmas(false)\n        }\n\n\n    }, [props])\n\n\n        return (\n\n\n\n        \n            <div className={clases.root}  >\n\n\n                \n        \n                <div className={clases.divTag} >\n                        <Typography variant=\"h3\" align=\"center\"\n                                className={clases.texto}\n                        >\n                            \n                            Environmental Topics\n                            </Typography> \n\n\n                </div>  \n\n                {\n                    !cargando?\n                    <div>\n                            {paperArray.length!=0?\n                                    <div>\n                                        {\n                                        paperArray.map(paper=>(\n                                    <div  >\n                                        <div id=\"etiqueta\" className={clases.divEtiqueta} >\n                            \n                                         \n                                      \n                                                    {/* <EtiquetasIcon color=\"primary\"/> */}\n\n\n                                                <Grid container>\n                                                <Grid xs={1}>\n                                                        \n                                                            <img height=\"100\" src={Pajaro}></img>\n                                                       \n                                                </Grid>\n                                                <Grid xs={11}>\n                                                <div className={clases.divEtiqueta}>\n                                                        <Typography   className={clases.textoDos} variant=\"h4\" align=\"left\">\n                                                            {paper.etiquetas !=undefined&&\n                                                            \n                                                            paper.etiquetas.descripcion}\n                        \n                                                        </Typography> \n                                                 </div>\n                                                    </Grid>\n                                                </Grid>\n\n\n\n                                            {/* <Button id=\"etiqueta\" size=\"large\"\n\n                                            className=\"botonEtiqueta\"\n                                            startIcon={<EtiquetasIcon/>}\n                                            >\n                                            {paper.etiquetas !=undefined&&\n                                        \n                                        paper.etiquetas.descripcion}\n                                        </Button> */}\n\n                                  \n                                      </div>     \n                                      <div>\n\n\n\n                                         \n                                   \n                                                <div  >\n                                                    \n                                                    {paper.etiquetas !=undefined&&\n                                                    paper.paper.length!=0?\n                                                               paper.paper.map(doc=>(\n                                                             <div>\n                                                                <Paperdos  paper={doc}  buscaretiquetas={buscaretiquetas}   length={paper.paper.length}   changeLike={changeLike} setChangeLike={setChangeLike}   megusta={megusta} cambiarLike={megustaSinValidarUsuario}  ></Paperdos>\n                                                                         \n                                                            \n                                                            \n                                                             </div>   \n                                                \n                                                            ))\n\n                                                            \n\n                                                                \n\n\n\n               \n                                                               \n\n\n                                                :\n                                                \n                                                <Typography className={clases.\n                                                    textNoDisponible\n                                                     } align=\"center\" variant=\"h5\">\n                                                              No hay registros\n                                                    </Typography>          \n\n\n                                                }\n\n                                                </div>\n\n\n\n\n                                                { \n                                                    pedirmas?\n                                                \n                                                    <Typography align=\"center\">\n                                                    <Button \n                                                            endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                            variant =\"contained\"\n                                                            className=\"botonVerMas\"\n                                                           onClick={()=>pedirMore()}\n                                                       \n                                                    \n                                                    >\n                                                    see more\n                                                            </Button> \n                                                 </Typography>\n                                                    :\n                                                paper.etiquetas.contar >2&&\n                                                \n                                                <Typography align=\"center\">\n                                                                <Button \n                                                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                                        variant =\"contained\"\n                                                                        className=\"botonVerMas\"\n                                                                        href= {`/tag/${paper.etiquetas.id}`}\n                                                                   \n                                                                \n                                                                >\n                                                                see more\n                                                                        </Button> \n                                                </Typography>   }             \n\n\n                                                \n                                                    {/* <div>\n                                                        <Paperdos id={tag.id}  changeLike={changeLike} setChangeLike={setChangeLike}   etiquetas={tag} buscaretiquetas={buscaretiquetas}   ></Paperdos>\n                                                    </div>   */}\n                                               \n                        \n                                                    \n                                                    \n                                        \n                                      </div>  \n                                      </div>\n    \n                                )\n                                )\n                                \n                                \n\n\n\n\n                                \n                                \n                                }\n\n\n\n\n\n\n\n                                </div>\n                        \n                    :\n                    <div style={{width:\"inherit\"}}>\n                    <Typography className={clases.\n                        textNoDisponible\n                         }  align=\"center\" variant=\"h4\">\n                                  No ahi registros\n                        </Typography>          \n                        </div>\n                    }\n\n\n                </div>:\n\n                         <div>\n                                <div className={clases.divCircular} >\n                                        <CircularProgress className={clases.circular}></CircularProgress>\n                                    </div>\n                        </div>\n\n            }\n\n\n                  \n            \n        </div>\n    )\n}\n\nexport default Etiquetas\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdmEtiquetas.jsx",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Nosotros.jsx",["426","427","428","429","430","431","432"],"import React,{useEffect,useState} from 'react'\nimport { makeStyles,Typography,Grid,CircularProgress } from '@material-ui/core'\nimport { convertToRaw } from 'draft-js';\nimport {  ContentState, convertFromHTML } from 'draft-js'\nimport Firebase from \"../../src/firebase/firebase\"\nimport { EditorState } from 'draft-js';\n\nconst estilos=makeStyles((theme)=>({\n\n    root:{\n            fontFamily:\"Lato\",\n            fontWeight:\"500\",\n\n           \"& .MuiTypography-body1\":{\n                marginBottom:\"1rem\",\n                fontFamily:\"Lato\"            \n\n    }, \n\n    \"& .MuiTypography-h3\":{\n        marginBottom:\"1rem\",\n        fontFamily:\"Lato\",\n        fontWeight:\"600fff\"          \n\n}, \n\n\n},\ndivCircular:{\n    marginTop:\"100px\"\n\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n}))\n\nconst Nosotros = () => {\n     const  clases=estilos()\n\n     const [titulo, settitulo] = useState()\n     const [cargando,setcargando]=useState(false)\n     const [editorState, setEditorState] = useState()\n \n\n\n\n\n     // funcion extraida \n     \n\n     useEffect(async() => {\n\n        setcargando(true)\n        const retornarObjeto=await Firebase.db.collection(\"administrarnosotros\").doc(\"configuracion\").get().then((respuesta)=>{\n            console.log(respuesta.data())\n\n            return respuesta.data()\n        })\n\n        if(retornarObjeto!=undefined){\n            \n            settitulo(retornarObjeto.title)\n            console.log(retornarObjeto.contenido)\n\n            // aca esta el problema \n            setEditorState(retornarObjeto.contenido)\n\n        }\n\n        console.log(editorState)\n        setcargando(false)\n   \n     }, [])\n    return (\n        <div  className={clases.root} style={{marginTop:\"100px\"}}>\n\n            <Grid container>\n\n\n                <Grid xs=\"2\"></Grid>\n\n                <Grid xs=\"8\">\n\n                            <Typography variant=\"h3\">\n                                {titulo}\n                            </Typography>\n\n                             {cargando?\n                                    <div className={clases.divCircular} >\n                                            <CircularProgress className={clases.circular}></CircularProgress>\n                                        </div>\n\n                                    :\n\n                                    <div dangerouslySetInnerHTML={{__html:editorState}}>\n                                    \n                                    </div>\n                             }\n                          \n\n                            \n                </Grid>\n                <Grid xs=\"2\"></Grid>\n            </Grid>\n\n\n       \n        </div>\n    )\n}\n\nexport default Nosotros\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearPaper.jsx",["433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetascuatro.jsx",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearCuenta.jsx",["484","485","486","487","488","489","490"],"import React,{useState} from 'react'\nimport { makeStyles,IconButton, Grid, TextField, Button, Typography,CircularProgress} from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Firebase from \"../firebase/firebase\"\nimport Swal from \"sweetalert2\"\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles=makeStyles((theme)=>({\n\n\n    root:{\n\n        marginTop:\"60px\",\n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n    }            \n,\n    textField:{\n        margin:\"15px 0px\",\n        width:\"95%\"\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },\n    \n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n\n    boton:{\n\n    /* margin: 5px; */\n    margin: \"25px 25px 80px auto\",\n    display: \"block\",\n    width:\"300px\",\n    [theme.breakpoints.down(\"xs\")]:{\n        margin: \"25px auto 80px auto\",\n        width:\"290px\"\n    }\n\n        },\n\n    alerta:{\n            margin:\"0px 0px\",\n            width:\"90%\"\n\n    },\n    titulo:{\n\n        marginBottom:\"60px\"\n    }\n    \n\n\n\n\n}))\n\n\n\n\nconst CrearCuenta = (props) => {\n    const clases=useStyles()\n\n    const [cuenta, setcuenta] = useState({\n        nombre:\"\",\n        correo:\"\",\n        password:\"\",\n        confirmar:\"\"\n    })\n\n  const [errores, seterrores] = useState({\n        nombre:null,\n        correo:null,\n        password:null,\n        confirmar:null\n\n\n  })\n  const [cargando,setcargando]=useState(false)\n\n\n const usuariosRef=Firebase.db.collection(\"usuarios\")\n\n\n\n\n\n\n    const actualizarState=(e)=>{\n        e.preventDefault()\n\n        setcuenta({...cuenta,\n        [e.target.name]:e.target.value\n        })\n\n\n    }\n\n\n    const validar=()=>{\n       \n            let err={}\n\n\n        if(cuenta.nombre==\"\"){\n\n\n            err.nombre=\"debes ingresar tu nombre\"\n\n\n        }\n        if(cuenta.correo==\"\"){\n\n            \n            err.correo=\"debes ingresar tu correo\"\n\n        }else{\n             if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(cuenta.correo) ) {\n                err.correo= \"Email no válido\"\n            }\n\n        }\n        if(cuenta.password==\"\"){\n\n           err.password=\"debes ingresar tu contraseña\"\n        }\n        if(cuenta.confirmar==\"\"){\n\n           \n            err.confirmar=\"debes  confirmar tu contraseña\"\n\n        }else{\n                if(cuenta.confirmar!=cuenta.password){\n\n                        err.confirmar=\"tu contraseña no coincide\"\n                      \n                }\n\n        }\n\n            return err\n\n    }\n\n\n    const guardar= ()=>{\n        setcargando(true)    \n        let err= validar()\n        seterrores(err)\n        if(Object.keys(err).length){\n          \n              setcargando(false)\n        }else{\n\n\n\n\n\n\n\n            Firebase.registrar(cuenta).then(async()=>{\n\n\n\n                let usuariosRegistrar={\n                    correo:cuenta.correo,\n                    nombre:cuenta.nombre,\n                    photoURL:null\n                }\n\n\n\n                await usuariosRef.doc(usuariosRegistrar.correo).set(usuariosRegistrar)\n\n\n                props.history.push(\"/login\")\n                Swal.fire({\n                       title:\"Cuenta creada correctamente\",\n                       icon:\"success\"\n                })\n\n            }).catch(error=>{\n                console.log(error)\n                let mensaje=\"\"\n                let titulo=\"\"\n                titulo=error.code\n                mensaje=error.message\n                \n                //desde aca se atrapan los errores\n                if(error.code==\"auth/weak-password\"){\n                    titulo=\"Contraseña Debil\"    \n                    mensaje=\"La contraseña debe tener al menos 6 caracteres\"\n                }\n\n\n                //desde aca se atrapan los errores\n                if(error.code==\"auth/email-already-in-use\"){\n                    titulo=\"correo electrónico ya en uso\"    \n                    mensaje=\"La dirección de correo electrónico ya está siendo utilizada por otra cuenta.\"\n                }\n\n                Swal.fire({\n                    title:titulo,\n                    text:mensaje,\n                    icon:\"info\"\n             })\n            })\n            setcargando(false)\n    }}\n\n\n    return (\n        <div className={clases.root}>\n\n\n            <Typography className={clases.titulo} align=\"center\" variant=\"h3\">\n\n                Crear Cuenta \n            </Typography>\n            \n\n              {\n                   cargando? \n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                            </div>\n                   \n                   \n                    :\n              \n\n            <Grid container>\n               <Grid xs={12} md={3}   ></Grid> \n               <Grid xs={12} md={6}  >\n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su nombre\"\n                      variant=\"outlined\"\n                      label=\"Nombre\"\n                      name=\"nombre\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.nombre?\n\n<Alert    className={clases.alerta}\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,nombre:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.nombre}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su correo\"\n                      variant=\"outlined\"\n                      label=\"Correo\"\n                      name=\"correo\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.correo?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,correo:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.correo}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su contraseña\"\n                      label=\"Contraseña\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      name=\"password\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n{errores.password?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,password:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.password}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Confirme su contraseña\"\n                      label=\"Confirme contraseña\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      name=\"confirmar\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.confirmar?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,confirmar:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.confirmar}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={clases.boton}     \n                        onClick={()=>guardar()}\n\n                    >\n\n                        Guardar\n                    </Button>\n\n\n               </Grid>\n               <Grid xs={12} md={3}></Grid>\n\n            </Grid>\n            }\n        </div>\n    )\n}\n\nexport default CrearCuenta\n  ","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/inicio.jsx",["491"],"import React,{useState}  from 'react'\nimport Caja from \"../Componetes/Caja\"\nimport BotonFlotante from \"../Componetes/BotonFlotante\"\nimport { useEffect } from 'react'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react'\n\n\nconst Inicio = (props) => {\n\n    // const [state, setstate] = useState(props.recientes)\n    const usuario = useContext(UsuarioContext)\n    const [papermatch, setpapermatch] = useState(null)\nuseEffect(() => {\n    try {\n        if(props.match.params!==undefined){\n            const {paper}=props.match.params\n            setpapermatch(paper)    \n        }\n      \n        \n    } catch (error) {\n        alert(error)\n    }\n \n\n}, [props])\n\n    return (\n       \n        <div>  \n            <Caja textoGeneral={props.textoGeneral} valorados={props.valorados} recientes={props.recientes} paperid={props.match.params} >\n                \n            </Caja>\n        \n        {usuario?\n           <div>\n               {usuario.administrador? <div>\n                <BotonFlotante>\n               \n               </BotonFlotante>\n               </div>:\n               <div></div>\n               }\n           \n            </div>:\n            <></>\n        }\n       \n        </div>\n\n    )\n}\n\nexport default Inicio\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/appbar.jsx",["492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523"],"import React, { useState,useContext ,useEffect} from 'react';\nimport { makeStyles,fade } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport{Hidden,Icon, Grid, Link} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu'\nimport AddIcon from '@material-ui/icons/Add';\nimport { UsuarioContext } from '../../Provedores/UsuarioContext';\nimport Firebase from \"../../firebase/firebase\"\nimport BookIcon from '@material-ui/icons/Book';\nimport {useHistory} from 'react-router-dom'\nimport { useRef } from 'react';\nimport Icono from \"../../pajaro.svg\"\nimport { withRouter } from \"react-router\";\nimport Swal from \"sweetalert2\"\nimport FuncionesFirebase from '../../Funciones/FuncionesFirebase';\nimport PublicIcon from '@material-ui/icons/Public';\nimport Dialogo from './Dialogo';\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n\n    \"& .botonCollaborate\":{\n      background:\"#f44336\",\n      color:\"#ffffff !important\",\n      fontSize:'12px',\n      marginLeft:'5px',\n\n      \"&:hover\": {\n         background:\"#f44336\",\n         color:\"#ffffff !important\",\n       },\n\n\n  },\n\n   \"& .MuiTypography-body1\":{\n    fontFamily:\"Nunito\",\n    fontWeight:\"800\"\n\n   },\n   \"& .MuiTypography-subtitle1\":{\n    fontFamily:\"Nunito\",\n    fontWeight:\"800\"\n   },\n\n\n  \"& .swal2-textarea\": {\n   fontFamily:\"Nunito !important\",\n   color:\"#21cbce\",\n},\n\n\n  \"& .MuiButton-outlinedPrimary\": {\n    color:\"#4a9341\",\n    border:\"1px solid #4a9341\",\n    margin:\"0px 15px\"\n},\n\n    \"& .MuiLink-underlineHover:hover\": {\n      textDecoration: \"none\"\n  },\n\n  \" & .MuiButton-containedPrimary:hover\" :{\n    backgroundColor: \"#303f9f00\",\n    color:\"#5fcccf\",\n    border:\"1px solid\"\n},\n   \"& .MuiInput-underline\":{\n     borderBottom:\"none !important\"\n   },\n   \"& #prueba .MuiSvgIcon-root\":{\n      color:\"#000000\"\n  },\n  \"& .cajaMenu\":{\n    padding:\"59px 0px 0px\",\n    height:\"200px\",\n    background:\"#21cbce\"\n  },\n  \"& .cajaMenuDos\":{\n    padding:\"59px 0px 0px\",\n    height:\"0px\",\n    background:\"#21cbce\"\n  }\n\n\n\n\n\n\n\n  },\n  grow: {\n    flexGrow: 1,\n  },\n\n\n\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n\n  search: {\n    position: 'relative',\n    background:\"#ffffff\",\n    border:\"1px solid #ccc\",\n    borderRadius: theme.shape.borderRadius,\n    [theme.breakpoints.down(\"md\")]:{\n\n    padding:\"10px 0px 10px 0px\",\n    border:\"1px solid #ccc\",\n\n\n    }\n\n\n    },\n\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n\n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n\n  linkclass:{\n        cursor:\"pointer\",\n        padding:\"5px 10px 5px 10px\",\n        '&:hover':{\n          padding:\"5px 10px 5px 10px\",\n          background:\"#43434329\",\n          borderRadius:\"25px\"\n\n        }\n          ,\n        [theme.breakpoints.down(\"sm\")]:{\n          padding:\"unset\"\n        },\n        \n\n  },\n\n\n  linkclassnohover:{\n    cursor:\"pointer\",\n    padding:\"5px 25px 5px 25px\",\n   \n      \n    [theme.breakpoints.down(\"sm\")]:{\n      padding:\"unset\"\n    },\n    \n\n},\n\n  linkclassdos:{\n    cursor:\"pointer\",\n    padding:\"5px 25px 5px 25px\",\n    background:\"#43434329\",\n    borderRadius:\"25px\"\n\n\n},\nestiloIcono:{\n  height:\"85px\",\n  padding:\"0px 0px 0px\"\n\n},\n  divlista:{\n\n    position: \"absolute\",\n    left:\"0\",\n    right:\"0\",\n    zIndex:\"1\",\n    margin:\"auto\",\n    borderWidth:\"1px 1px 1px 1px\",\n    borderStyle: \"solid\",\n    borderColor:\"#e0e0e0\",\n    backgroundColor:\"white\",\n    /* right: 6px; */\n   top:\"50px\",\n    width:\"500px\",\n\n    //left: 24px;\n\n\n\n    [theme.breakpoints.down(\"md\")]:{\n      width: \"93vw\",\n      top: \"71px\",\n\n    },\n\n\n\n\n\n  },\n  resumen:{\n\n    fontFamily:\"nunito\",\n    margin:\"15px auto\",\n    color:\"#000000DE\",\n     lineHeight:\"2\"\n  },\n  icono:{\n    display: \"block\" ,\n    margin: \"15px auto\"\n  },\n  botonOpciones:{\n      padding:\"18px 8px\",\n      justifyContent:\"left\",\n      width:\"100%\"\n\n  },\n  cajaMenu:{\n    padding:\"2px 5px 0px 5px\",\n    height:\"190px\",\n    transition:\"height 0.45s ease-in\",\n    overflow:\"hidden\",\n  },\n  cajaMenuTres:{\n    padding:\"2px 5px 0px 5px\",\n    height:\"350px\",\n    transition:\"height 0.25s ease-in\",\n\n  },\n   cajaMenuDos:{\n    padding:\"2px 0px 0px\",\n    height:\"0px\",\n\n    overflow:\"hidden\",\n    transition:\"height 0.45s  ease-out\"\n  },\n  cajaListMenu:{\n    border: \"0.01px solid\",\n    borderColor:\"#e5e5e5\",\n    margin: \"11px 11px 11px\",\n    background:\"#ffffff\"\n  },\n  input:{\n    marginLeft:\"5px\",\n    [theme.breakpoints.down(\"md\")]:{\n      width:\"85%\"\n    }\n  },\n  linkList:{\n    padding:\"5px 0px\",\n    textDecoration:\"none\",\n    color:\"rgb(0 0 0 / 30%)\",\n    cursor:\"pointer\"\n  },\n  linkLi:{\n    padding:\"9px 0px\",\n    cursor:\"pointer\"\n  },\nlinkLiDos:{\n  width:\"50%\",\n  margin:\"3px auto\",\n  borderRadius:\"21px\",\n  color:\"white\",\n  background:\"#4a9341\"\n\n}\n  ,\n   esconder:{\n      display:\"none\"\n\n   },\n\n   mostrar:{\n      display:\"unset\"\n\n   },\n   noRegistro:{\n\n    width:\"50%\",\n    padding:\"10px\",\n    color:\"#808080\"\n   }\n\n\n\n\n\n}))\n\nconst ButtonAppBar=(props) =>{\n\n\n  const history=useHistory()\n    const [url, seturl] = useState(history.location.pathname)\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [menu,setmenu]=useState(false)\n    const [appBar, setappBar] = useState(false)\n    const [listapaper,setlistapaper]=useState([])\n    const [noFound,setNoFound]=useState(false)\n    const[buscador,setbuscador]=useState({\n      buscado:\"\"\n    })\n    const [abrir, setabrir] = useState(false)\n    const open = Boolean(anchorEl);\n    const usuario=useContext(UsuarioContext)\nconst wrapperRef =useRef(null)\n\nconst abrirVentana=()=>{\n  setabrir(true)\n}\nconst cerrarVentana=()=>{\n  setabrir(false)\n}\nconst dejarUnaColaboracion=async()=>{\n\n        const { value: text } = await Swal.fire({\n          input: 'textarea',\n          title: 'Would you like to collaborate?',\n          inputPlaceholder: 'Please tell us about the environmental software or sources of environmental information that you know',\n          confirmButtonColor: '#21cbce',\n          denyButtonText: `Cancel`,\n          confirmButtonText: `Send`,\n          showDenyButton: true,\n        })\n\n        if (text) {\n\n\n\n\n\n          let user=\"anonimo\"\n          let anonimo=true\n\n          if(usuario!=null){\n            user={\n              nombre:usuario.displayName,\n              email:usuario.email,\n              imagen:usuario.photoURL\n            }\n            anonimo=false\n\n          }\n          //Swal.fire(text)\n\n\n          let Comentario={\n            fecha: new Date(),\n            usuario:user,\n            comentario:text,\n            anonimo\n          }\n\n          console.log(Comentario)\n\n          FuncionesFirebase.IngresarColaboracion(Comentario)\n        }\n\n\n\n      }\nconst abrirCerrarMenu=()=>{\n\n          setmenu(!menu)\n    }\n\nconst handleClose = () => {\n        setAnchorEl(null);\n\n      };\n    // handle menu\nconst handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n      };\nconst buscarPaper=(papermatch)=>{\n        history.push(`/buscar/${papermatch.id}`)\n        setlistapaper([])\n    }\n      // cerrar sesion\n     const cerrarSesion=()=>{\n\n          Firebase.cerrarSesion()\n\n     }\n\n\n     const formatTitle=(titulo)=>{\n          var string = titulo;\n          var length = 50;\n          var trimmedString = string.substring(0,length);\n          if(trimmedString.length<20){\n            var trimmedStringdos=trimmedString\n          }else{\n            var trimmedStringdos=trimmedString+\"...\"\n          }\n          console.log(trimmedStringdos)\n          return trimmedStringdos\n     }\n     const formatTitleDos=(titulo)=>{\n      var string = titulo;\n      var length = 30;\n      var trimmedString = string.substring(0,length);\n\n      if(trimmedString.length<12){\n        var trimmedStringdos=trimmedString\n\n      }else{\n        var trimmedStringdos=trimmedString+\"...\"\n      }\n\n\n\n      console.log(trimmedStringdos)\n      return trimmedStringdos\n\n }\n\n\n     const buscar=async (e)=>{\n       setlistapaper([])\n\n       console.log(e.target.value)\n\n       setbuscador({[e.target.name]:e.target.value})\n\n       //validar cuando el tipeo esta vacio\n       if(e.target.value!==\"\"){\n        const inicio=e.target.value.toLocaleLowerCase()\n       const prueba=await Firebase.db.collection(\"paper\").\n       orderBy(\"busqueda\")\n       .startAt(inicio).endAt(inicio+'\\uf8ff')\n       .limit(5)\n      .onSnapshot(manejarSnapshot)\n\n      }else{\n        setlistapaper([])\n        setNoFound(false)\n      }\n     }\n\n\n\n\n     function manejarSnapshot(snapshot){\n      const  lista =snapshot.docs.map(doc=>{\n          return{\n              id:doc.id,\n              ...doc.data()\n          }\n      })\n\n      if(lista.length==0){\n          setNoFound(true)\n      }else{\n          setNoFound(false)\n\n      }\n      //lista paper\n      setlistapaper(lista)\n      return lista\n  }\n\n\n\n\n\n  const dejarUnComentario=async()=>{\n\n    const { value: text } = await Swal.fire({\n      input: 'textarea',\n      title: 'Suggestion? Comments? Question?',\n      inputPlaceholder: 'Please enter your feedback here',\n      confirmButtonColor: '#21cbce',\n      denyButtonText: `Cancel`,\n      confirmButtonText: `Send`,\n      showDenyButton: true,\n    })\n\n    if (text) {\n\n\n\n\n\n      let user=\"anonimo\"\n      let anonimo=true\n\n      if(usuario!=null){\n        user={\n          nombre:usuario.displayName,\n          email:usuario.email,\n          imagen:usuario.photoURL\n        }\n        anonimo=false\n\n      }\n      //Swal.fire(text)\n\n\n      let Comentario={\n        fecha: new Date(),\n        usuario:user,\n        comentario:text,\n        anonimo\n      }\n\n      console.log(Comentario)\n\n       FuncionesFirebase.IngresarComentario(Comentario)\n    }\n\n\n\n  }\n\n\n\n const classes = useStyles();\n\n  // state Scroll\n\n//hacer un useEffect\n\nuseEffect(() => {\n\n\nconsole.log(history.location.pathname)\n\n\nif(history.location.pathname==\"/login\" ){\n  if(usuario!==null)\n\n          {\n            console.log(\"redirecciono \")\n            setappBar(false)\n            history.push(\"/\")\n\n\n        }else{\n          setappBar(true)\n\n        }\n\n}else{\n\n  if(history.location.pathname==\"/adminetiquetas\"||history.location.pathname==\"/ab\") {\n\n    setappBar(true)\n  }else{\n  setappBar(false)\n}\n}\n\ndocument.addEventListener(\"mousedown\",handleClickOutside)\nreturn ()=>{\n  document.removeEventListener(\"mousedown\",handleClickOutside)\n}\n\n}, [usuario,url,history.location.pathname] )\n\n\n\n\nconst handleClickOutside=event =>{\n\n  const {current:wrap}=wrapperRef\n  if(wrap && !wrap.contains(event.target)){\n    setlistapaper([])\n    setNoFound(false)\n    // onBlur={()=>{\n            setbuscador({\n              buscado:\"\"\n            })\n          // }}\n  }\n}\n\n\n const pruebaFormulario=(event)=>{\n  history.push({\n    pathname: `/search`,\n    search: `?query=${buscador.buscado}`,\n    state: buscador\n});\nevent.preventDefault()\n\n}\n\n\n\nconst buscarDos=()=>{\n\nconsole.log(buscador.buscado)\n  history.push({\n    pathname: `/search`,\n    search: `?query=${buscador.buscado}`,\n    state: buscador\n});\n//event.preventDefault()\n\n}\n\n\n  return (\n    <div className={classes.root} >\n      <Dialogo abierto={abrir} cerrar={cerrarVentana}  ></Dialogo>\n      <AppBar  position=\"static\" color=\"secondary\" elevation={0} >\n        <Toolbar>\n            <Typography align=\"center\">\n                      <Link href=\"/\" className={classes.linkclassnohover}>\n\n                              <img className={classes.estiloIcono} src={Icono} alt=\"\" />\n\n                        </Link>\n\n              </Typography>\n      <Hidden lgUp>\n              <Typography variant=\"h6\" style={{flexGrow:\"1\"}}>\n\n              </Typography>\n\n              <Typography align=\"center\">\n\n                      <IconButton  onClick={()=>abrirCerrarMenu()} edge=\"start\"  variant=\"contained\" color=\"primary\" aria-label=\"menu\"  >\n\n                          <MenuIcon style={{fontSize:\"35px\"}}   />\n\n                       </IconButton>\n\n\n              </Typography>\n\n    </Hidden>\n\n       <Hidden mdDown>\n       \n\n\n\n\n\n\n\n          {/* <Hidden mdDown> */}\n\n\n\n\n          <div className={classes.grow} />\n\n\n\n          {!appBar?\n\n        <>\n        \n\n\n          </>\n\n\n        :\n        <div></div>\n        }\n\n       \n\n\n\n\n\n\n          {usuario==null?\n\n          <>\n\n          <Link  href=\"/about\" className={classes.linkclass}>\n          <div className=\"divHover\">\n              <Typography align=\"center\" >\n\n                About\n            \n              </Typography>\n              <div className=\"subrayado\"></div>\n            </div>\n            </Link>\n            <Link  href=\"/why\" className={classes.linkclass}>\n          <div className=\"divHover\">\n              <Typography align=\"center\" >\n\n                Why\n               \n\n              </Typography>\n              <div className=\"subrayado\"></div>\n            </div>\n            </Link>\n          \n\n\n            <Button onClick={()=>abrirVentana()}     className=\"botonCollaborate\" variant=\"contained\"\n\nstartIcon={<PublicIcon />}\n\n>\n\n        Share info\n</Button>\n\n\n        </>\n\n\n\n\n          :\n          usuario.administrador?\n\n\n         <Link onClick={handleMenu} className={classes.linkclassnohover}>\n\n          <div className=\"divHover\">\n              <Typography align=\"center\" >\n\n\n                  <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      endIcon={<AddIcon></AddIcon>}\n                      variant=\"contained\"\n                      color=\"primary\"\n                  >\n                      More\n                  </Button>\n\n              </Typography>\n              <div className=\"subrayado\"></div>\n            </div>\n            </Link>\n\n\n\n\n\n\n:\n\n    <>\n        <Link  href=\"/about\" className={classes.linkclass}>\n        <div className=\"divHover\">\n            <Typography align=\"center\" >\n\n              About\n            \n\n            </Typography>\n            <div className=\"subrayado\"></div>\n          </div>\n          </Link>\n     \n      </>\n\n\n\n\n\n\n        }\n\n\n          {/* <Link onClick={handleMenu} className={classes.linkclass}> */}\n          {/* <Link  className={classes.linkclass}>\n        <div className=\"divHover\">\n            <Typography align=\"center\" >\n\n              Nosotros\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    endIcon={<AddIcon></AddIcon>}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    mas\n                </Button> */}\n{/*\n            </Typography>\n            <div className=\"subrayado\"></div>\n          </div>\n          </Link> */}\n\n\n\n\n            {usuario?\n            <Button variant=\"outlined\" color=\"primary\"  onClick={()=>cerrarSesion()}>\n                     Sign out\n            </Button>\n\n                :\n\n              <></>                \n               // para cuando el usuario  sea necesario\n              //   <Button variant=\"outlined\" color=\"primary\" href=\"/login\">\n              //   Iniciar Sesion\n              //  </Button>\n            }\n\n\n\n\n              </Hidden>\n        </Toolbar>\n\n        <Menu\n                id=\"menu-appbar\"\n                keepMounted\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose()\n                abrirCerrarMenu()\n                history.push(\"/about\")\n                }}>Nosotros</MenuItem>\n                <MenuItem onClick={()=>{handleClose()\n                abrirCerrarMenu()\n                history.push(\"/why\")\n                }}>Why</MenuItem>\n                  <MenuItem onClick={()=>{handleClose()\n                abrirCerrarMenu()\n                history.push(\"/nuevopaper\")\n                }}>Nuevo Paper</MenuItem>\n                  <MenuItem onClick={()=>{handleClose()\n                abrirCerrarMenu()\n                history.push(\"/administrarnosotros\")\n                }}>Administrar Nosotros</MenuItem>\n                <MenuItem onClick={()=>{handleClose()\n                abrirCerrarMenu()\n                history.push(\"/admintitulo\")\n                }}>Administrar Titulo</MenuItem>\n                <MenuItem onClick={()=>{history.push(\"/adminetiquetas\")\n                setmenu(false)\n                handleClose()\n              }}>Administrar Etiquetas</MenuItem>\n                 <MenuItem onClick={()=>{history.push(\"/adminwhy\")\n                setmenu(false)\n                handleClose()\n              }}>Administrar Why</MenuItem>\n                <MenuItem onClick={()=>{history.push(\"/listacomentarios\")\n                setmenu(false)\n                handleClose()\n              }}>Ver Comentarios </MenuItem>\n\n                  <MenuItem onClick={()=>{history.push(\"/colaborate\")\n                    setmenu(false)\n                    handleClose()\n                  }}>Ver Colaboraciones </MenuItem>\n                 <MenuItem onClick={()=>{history.push(\"/listusuarios\")\n                setmenu(false)\n                handleClose()\n              }}>Usuarios</MenuItem>\n                {/* <MenuItem onClick={handleClose}>Partner</MenuItem> */}\n              </Menu>\n      </AppBar>\n\n\n\n\n\n\n\n\n\n\n\n\n          <Hidden lgUp>\n        <div className={menu?\n         listapaper.length>0?\n          classes.cajaMenuTres:\n          classes.cajaMenu\n          :classes.cajaMenuDos}>\n\n\n                <div ref={wrapperRef} className={classes.search}>\n          \n\n        \n\n          {/* <div className={menu?classes.mostrar:classes.esconder}> */}\n\n\n              {appBar?<div></div>:\n              <>\n             \n              </>\n                }\n\n\n\n\n\n               {usuario==null?\n                      <>\n                      <Link onClick={()=>{\n                    {             handleClose()\n                          abrirCerrarMenu()\n                          history.push(\"/about\")}\n                      }} className={classes.linkList} >\n                      <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                                About\n\n                      </Typography>\n                      </Link>\n                      <Link onClick={()=>{\n                    {             handleClose()\n                          abrirCerrarMenu()\n                          history.push(\"/why\")}\n                      }} className={classes.linkList} >\n                      <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                                \n                                Why\n\n                      </Typography>\n                      </Link>\n<Typography align=\"center\" >\n            <Button onClick={()=>abrirVentana()}     className=\"botonCollaborate\" variant=\"contained\"\n\n            startIcon={<PublicIcon />}\n\n            >\n\n                    Share info\n            </Button>\n</Typography>\n                        {/* <Link onClick={()=>dejarUnComentario()} className={classes.linkList} >\n                        <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                                  Feedback\n                        </Typography>\n                        </Link> */}\n\n                        </>\n                        :\n\n                        usuario.administrador?\n                        <Link onClick={handleMenu} className={classes.linkclass}>\n                        <div className=\"divHover\">\n                            <Typography align=\"center\" >\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    endIcon={<AddIcon></AddIcon>}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    more\n                                </Button>\n                            </Typography>\n                            <div className=\"subrayado\"></div>\n                          </div>\n                          </Link>\n                        :\n                                <>\n                                  <Link className={classes.linkList} >\n                                  <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                                            Nosotros\n                                  </Typography>\n                                  </Link>\n\n                               \n                                </>\n\n               }\n\n              <Typography className={classes.linkLi} align=\"center\" variant=\"h6\">\n\n\n                {usuario?\n                <Button color=\"primary\" variant=\"outlined\" onClick={()=>cerrarSesion()} >\n                Log out\n              </Button>\n                :\n\n                <></>\n              //   <Button color=\"primary\" variant=\"outlined\" href=\"/login\" >\n              //   Log in\n              // </Button>\n\n                }\n\n              </Typography>\n              </div>\n          {/* </div> */}\n\n\n\n          </div>\n\n\n\n\n        </Hidden>\n\n\n    </div>\n  );\n}\n\n\nexport default withRouter(ButtonAppBar)","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/useAutenticado.jsx",["524"],"import {useState,useEffect} from 'react'\nimport firebase from \"../firebase/firebase\"\nconst useAutenticado = props => {   \n\n\n            const [usuarioAutenticado, setusuarioAutenticado] = useState(null)\n\n\n\n    const administrador = async(user)=> \n    \n    {\n    var result=false\n     await firebase.db.collection(\"administradores\")\n      .where(\"adminitrador\", \"==\", user.email).get().then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots     \n           result=true\n        });\n      \n    })\n    .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n    });\n          \n       return result\n      \n  \n    }\n\n\n\n    const usuarioExistente=async(usuario)=>{\n\n                console.log(usuario )\n                //consultar en la base de datos\n                \n                // crear constantes  de referencias a usuarios \n\n                const usuarios=firebase.db.collection(\"usuarios\")\n                //firebase.db.collection(\"usuarios\")\n\n                const  consulta=await usuarios.where(\"correo\",\"==\",usuario.email).get().then(doc=>\n                    {\n                        return doc.docs\n                    }\n                    )\n\n\n                if(consulta.length){\n                    console.log(\"vacio\")\n                }else{\n                    console.log(\"lleno\")\n                \n                    let usuarioAgregar={\n                        correo:usuario.email,\n                        nombre:usuario.displayName,\n                        photoURL:usuario.photoURL\n\n                    }\n                    console.log(usuarioAgregar)\n                     await usuarios.doc(usuarioAgregar.correo).set(usuarioAgregar)\n                    \n\n                } \n\n\n\n\n\n\n\n\n    }\n\n\n    useEffect(async() => {\n\n       \n        const unsuscribe= firebase.auth.onAuthStateChanged(user=>{\n\n            if(user){\n\n                 //  consultar si el usuario  existe            \n\n                 \n\n\n                  administrador(user).then(function(result) {\n                            console.log(result) // \"Some User token\"\n                            setusuarioAutenticado({...user,administrador:result})\n                         })\n\n\n                  \n                usuarioExistente(user)\n              \n\n\n\n\n\n\n\n\n\n                \n            }else{\n\n                setusuarioAutenticado(null);\n              \n            }\n\n             return ()=>unsuscribe();   \n\n\n        })\n      \n    },[] )\n\n\n\n    return usuarioAutenticado\n}\n\nexport default useAutenticado\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/firebase.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/PaperDoc.js",["525","526","527","528"],"import Firebase from '../firebase/firebase'\n\n\n// variable a la base de datos \nconst PaperDb=Firebase.db.collection(\"paper\")\nconst Etiquetas=Firebase.db.collection(\"etiquetas\")\n// actualizar paper\n\n                const actualizarPaper=(paper)=>\n                {\n                // actualizando el paper etiquetas \n                // actulizando paper\n                    PaperDb.doc(paper.id).update(paper).then(()=>{\n                        console.log(\"paper actualizado\")\n                    }).catch(error=>console.log(\"error al actualizar\"))\n\n                }\n\n                // Actualizar paper\n\n\n                const ActualizarPaperEnEtiquetas=(paper)=>{\n                    console.log(paper)\n                    let tag=paper.etiquetas\n                    console.log(tag)\n                    tag.map(valor=>{\n                        Etiquetas.doc(valor.id).collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n                            console.log(\"paper actualizado\")\n                        }).catch(error=>console.log(\"error al actualizar\"))\n                    })\n\n\n                }\n\n                const actualizarVariosPaper =(lista)=>{\n\n                    lista.map(doc=>{\n                         actualizarPaper(doc)\n\n                    })\n\n                }\n                const  ActualizarVariosEtiquetas=async(lista,valor)=>{\n\n                        \n\n\n\n                        \n                        console.log(lista)\n\n                        lista.map(doc=>{\n  \n                                \n                                doc.etiquetas.map(tag=>{\n\n                                    Etiquetas.doc(tag.id).collection(\"paper\").doc(doc.id).update(doc).then(()=>{\n                                        console.log(\"paper actualizado\")\n                                        }).catch(error=>console.log(\"error al actualizar\"))   \n                                })                                        \n                                    })\n                }\n\n\n            \n\n                \n\n\n\n\n\n\n\nexport  {actualizarPaper,ActualizarPaperEnEtiquetas,actualizarVariosPaper,ActualizarVariosEtiquetas}\n\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Papertres.jsx",["529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562"],"import React from 'react'\nimport {Paper as Papel,Grid,Typography,Chip,Button ,CircularProgress ,IconButton,makeStyles,Link} from \"@material-ui/core\"\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n// import Corazon from '@material-ui/icons/FavoriteBorder';\nimport moment from 'moment' \n// import CorazonLleno from '@material-ui/icons/Favorite';\nimport \"moment/locale/es\"\nimport { useState } from 'react';\nimport Swal from \"sweetalert2\"\nimport firebase from \"../firebase/firebase\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { useContext } from 'react';\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {RetornarPaper,RenovarPaperMapEtiqueta} from '../Funciones/Funciones'\nimport {actualizarPaper,ActualizarPaperEnEtiquetas} from '../Funciones/PaperDoc'\nimport CorazonLleno from \"../imagen/iconos/arbolLleno.png\"\nimport Corazon from \"../imagen/iconos/arbolVacio.png\"\nimport BotonMenu from '../Componetes/Tarjeta/BotonMenu'\n\n\nconst  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"250px auto \",\n\n\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    },\n\n\n  \n\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n     \n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    },\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n        marginTop:\"10px\",\n\n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    }\n\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\ncajaMeGusta:{\n        position:'absolute',\n        top:'8px',\n        right:'12px',\n[theme.breakpoints.down(\"sm\")]:{\n        position:'unset'\n},\n},\n\ncontenedor:{\n        margin:\"18px auto\"\n\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n\n        position:\"absolute\",\n        bottom:\"0\",\n        right:\"0\",\n        width:\"90px\"\n},\ndivFoto:{\n\n    width:\"250px\",\n    height:\"160px\",\n    border:\"2px dashed #21cbce\",\n    display:\"block\",\n    margin:\"16px auto\",\n    position:\"relative\",\n    [theme.breakpoints.down(\"sm\")]:{\n        margin:\"30px auto\"\n}\n},\n\ndivImagen:{\n       \n        height:\"160px\",\n        width:\"260px\",\n        backgroundSize:\"260px auto\",\n        backgroundRepeat:\"no-repeat\",\n        backgroundPosition:\"50%\",\n        borderRadius:\"16px\",\n        display:\"block\",\n        margin:\"auto\",\n        marginTop:\"15px\",\n        [theme.breakpoints.down(\"sm\")]:{\n                marginTop:\"30px\"\n        }\n}\n,\ndivTexto:{\n        [theme.breakpoints.down(\"md\")]:{\n\n                margin:\"0vw 5vw 0\"\n        },\n\n\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"5vw 5vw 0\"\n        }\n}\n\n,botonLikes:{\n        color:\"#35b37c\",\n        margin:\"8px 0px 0x 0px\",\n        border:\"1px solid\"\n\n\n    },\n\n    botonPdf:{\n        position:\"absolute\",\n        bottom:\"55px\",\n        right:'0px',\n        [theme.breakpoints.down(\"sm\")]:{\n                position:'unset'\n        }\n}\n,\ntextUpVote:{\n        fontFamily:\"nunito\",\n        textAlign:\"center\",\n        color:\"#808080\"     \n     }\n,\n\n\nimgFoto:{\n    color:\"#21cbce\",\n    position:\"absolute\",\n    margin:\"auto\",\n    top:\"0\",\n    bottom:\"0\",\n    left:\"0\",\n    right:\"0\",\n    fontSize:\"3rem\"\n}\n\n,\n    margenChip:{\n        margin:\"0px 3px\",\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n    },\n    divReg:{\n\n        margin:\"45px auto\",\n        width:\"75vw\"\n\n    },\n    texto:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\"\n\n    },\n    centrarComponente:{\n            textAlign:\"end\",\n            marginRight:\"10px\",\n            [theme.breakpoints.down(\"md\")]:{\n\n                    textAlign:\"center\",\n            }\n\n    }\n\n\n\n }))\n\n\n\n\n\nconst Paper = (props) => {\n        const clases =estilos()\n        const history = useHistory();\n        const usuario =useContext(UsuarioContext)\n        const [valor, setvalor] = useState(props.paper)\n        const [paper, setpaper] = useState([])\n        const [cargando, setcargando] = useState(false)\n        const [cargandoCorazon, setcargandoCorazon] = useState(false)\n        const buscaretiquetas=props.buscaretiquetas\n        const megusta=props.megusta\n        const tamaño =props.length\n        const [ultimoDocumento, setultimoDocumento] = useState(0)\n        const cambiarLike=props.cambiarLike\n\n\n\n\n\nconst buscarChips=(valor)=>{\nhistory.push(`/tag/${valor.id}`)\n      \n    }      \n\n\n    const megustaSinValidarUsuario=(valor)=>{\n\n\n\n\n                        \n                        const nuevoHaVotado=[]\n\n\n                                if(valor.click){\n                        valor.likes=valor.likes-1\n                        valor.click=false\n                        }else{\n\n                        valor.likes=valor.likes+1\n                        valor.click=true\n                        }         \n\n                        let  nuevoValor={\n                                ...valor,\n                                likes:valor.likes,\n                                haVotado:nuevoHaVotado\n                                }\n\n                        //guarda datos en el paper\n                        firebase.db.collection(\"paper\").doc(valor.id).update({\n                                ...valor,\n                                likes:valor.likes,\n                                haVotado:nuevoHaVotado\n\n                        })\n\n                                valor.etiquetas.map(valordos=>{\n                                        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                                                ...valor,\n                                                likes:valor.likes,\n                                                haVotado:nuevoHaVotado\n                                \n                                        })})\n\n                listaPaperdos(nuevoValor,valor.likes,nuevoHaVotado);\n                cambiarLike(nuevoValor)\n\n\n//firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas\n\n//       valor.etiquetas.map(valordos=>{\n//         firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n//                 ...valor,\n//                 likes:valor.likes,\n//                 haVotado:nuevoHaVotado\n\n//         })\n// })\n\n//armararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n     // }\n      console.log(\"final\")\n}\n\n\nconst borrar=(e)=>{\n\n    Swal.fire({\n            title: 'Esta seguro que desea borrar el siguiente registro?',\n            text:`${e.titulo}`,\n            showDenyButton: true,\n          \n            confirmButtonText: `Borrar`,\n            denyButtonText: `Cancelar`,\n          }).then((result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n\n                                    \n                            firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                    console.log(\"Document successfully deleted!\");\n                            }).catch((error) => {\n                                    console.error(\"Error removing document: \", error);\n                            });\n                           \n                            //hacer un mapeo y borrar \n\n\n                            e.etiquetas.map(valor=>{\n \n                                firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                        //  console.log(\"Document successfully deleted!\");\n\n\n\n                                         let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                   return{...doc.data()}\n                                         \n                                         })\n\n                                           console.log(soloTag)\n                                           let nuevoObjeto={  ...soloTag,\n                                                   contar:soloTag.contar-1}\n\n                                             console.log(nuevoObjeto)      \n\n                                           firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                   }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n                               \n\n                            })\n\n                            var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)    \n                            var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)    \n\n\n                            \n                                borrarArchivo.delete().then(function() {\n                                        console.log(\"borrado\")\n                                // File deleted successfully\n                                }).catch(function(error) {\n                                        console.log(error)\n                                // Uh-oh, an error occurred!\n                                });          \n\n                                borrarImagen.delete().then(function() {\n                                console.log(\"borrado\")\n                        // File deleted successfully\n                        }).catch(function(error) {\n                                console.log(error)\n                        // Uh-oh, an error occurred!\n                        });          \n\n\n\n\n\n                            props.buscaretiquetas()\n\n              Swal.fire('Borrado!', '', 'success')\n            } else if (result.isDenied) {\n            \n            }\n          })\n\n        \n}\n\n\n\nconst megustatres=async(valor)=>{\n\n\n        //setcargando(true)\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n        // prueba de las funciones \n        //const valorRenovado=  await RetornarPaper(valor.id)\n        //valor=valorRenovado\n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n        }else{\n                var antiguoHaVotado=valor.haVotado\n        }\n\n                        \n        // nuevo paper \n\n        let newPaper={}\n\n     if(antiguoHaVotado.includes(usuario.uid)){ \n      \n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n\n                let megusta=valor.likes-1 \n               \n                 newPaper={\n                        ...valor,\n                         likes:megusta,\n                        haVotado:antiguoHaVotado\n                }\n\n\n                listaPaperdos(newPaper,megusta,antiguoHaVotado)\n                //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n                //RenovarPaperMapEtiqueta(nuevoPaper)\n                // \n              \n\n     }else{ \n        // alert(\"no incluido\")\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     let megusta=valor.likes+1   \n     \n\n     // crear variable de paper \n\n     newPaper={\n        ...valor,\n         likes:megusta,\n        haVotado:nuevoHaVotado\n}\n\nlistaPaperdos(newPaper,megusta,nuevoHaVotado)\n//await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n\n//RenovarPaperMapEtiqueta(nuevoPaper)\n\n\n\n        //        let arreglo=paper \n        //        setpaper([])\n\n        // const nuevoPaper=arreglo.map(papel=>{\n        //    if(valor.id==papel.id){\n\n\n\n                 \n        //         return{\n        //                 ...papel,\n        //                 likes:1\n        //         }\n\n        //    }\n\n        //    return papel\n\n        // })\n\n        // setpaper(nuevoPaper)\n\n}\n\nactualizarPaper(newPaper)\nActualizarPaperEnEtiquetas(newPaper)\nbuscaretiquetas()\nprops.setChangeLike({\n        cambio:true,\n        idEtiqueta:props.id,\n        paper:newPaper\n    })\n\n\n\n\n\n}\n\nconst megustacuatro=async(valor)=>{ \n        //setcargando(true)\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n        // prueba de las funciones \n        //const valorRenovado=  await RetornarPaper(valor.id)\n        //valor=valorRenovado\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n        }else{\n                var antiguoHaVotado=valor.haVotado\n        }                      \n        // nuevo paper \n        let newPaper={}\n        if(antiguoHaVotado.includes(usuario.uid)){ \n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n                let megusta=valor.likes-1 \n                 newPaper={\n                        ...valor,\n                         likes:megusta,\n                        haVotado:antiguoHaVotado\n                }\n        listaPaperdos(newPaper,megusta,antiguoHaVotado)\n                //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n                //RenovarPaperMapEtiqueta(nuevoPaper)\n                // \n              \n        console.log(newPaper)\n     }else{ \n        // alert(\"no incluido\")\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     let megusta=valor.likes+1   \n     \n\n     // crear variable de paper \n\n     newPaper={\n        ...valor,\n         likes:megusta,\n        haVotado:nuevoHaVotado\n}\n\nconsole.log(newPaper)\n//listaPaperdos(newPaper,megusta,nuevoHaVotado)\n//await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n\n//RenovarPaperMapEtiqueta(nuevoPaper)\n\n\n\n        //        let arreglo=paper \n        //        setpaper([])\n\n        // const nuevoPaper=arreglo.map(papel=>{\n        //    if(valor.id==papel.id){\n\n\n\n                 \n        //         return{\n        //                 ...papel,\n        //                 likes:1\n        //         }\n\n        //    }\n\n        //    return papel\n\n        // })\n\n        // setpaper(nuevoPaper)\n\n}\n\n// actualizarPaper(newPaper)\n// ActualizarPaperEnEtiquetas(newPaper)\n// buscaretiquetas()\n// props.setChangeLike({\n//         cambio:true,\n//         idEtiqueta:props.id,\n//         paper:newPaper\n//     })\n\n\n             \n\n\n\n\n}\n\n\n\nconst listaPaperdos=(valor,megusta,nuevosvotos)=>\n{\n        const nuevoPaper=paper.map(papel=>{\n                if(valor.id==papel.id){\n                     return {\n                         ...valor,\n                         likes:megusta,\n                         haVotado:nuevosvotos       \n                     }\n                }\n                return papel\n             })\n             setpaper(nuevoPaper)\n}\n\n\n\n const funcionCorazondos=(valor)=>{\n\n             if(valor.likes>0){\n                 return true       \n             }else{\n                return false\n             }\n\n\n\n }\n\n\nconst funcionCorazon=(valor)=>{\n       \n        let votos_usuarios=[]\n\n        if(valor.haVotado==undefined){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n        votos_usuarios=valor.haVotado\n        if(votos_usuarios.length==0){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n                console.log(usuario)\n                if(usuario!=undefined){\n                if(votos_usuarios.includes(usuario.uid)){\n                        return true\n                }else{\n                        return false\n                }}\n\n        }\n}\n\n       \n\n }\n\n\n\n\nuseEffect(async() => {\n\n\n\n\n        setvalor(props.paper)\n// if(props.changeLike.cambio){\n//         console.log(props.changeLike.idEtiqueta)\n//         console.log(props.id)\n//         if(props.changeLike.idEtiqueta!=props.id){\n              \n//                 cargarListaDos()\n//         }else{\n//                 cargarListaDos()\n//         }\n        \n\n// }else{\n\n// // iniciar carga \n// setcargando(true)\n//  //tomar todas las etiquetas\n\n//             const etiquetas = props.etiquetas\n//             console.log(etiquetas)\n// // buscar los paper guardados en cada etiquetas \n//         //crear variable para guardar \n//          let listadepaper=[]\n\n//         //lista de paper con las etiquetas\n//         listadepaper =  await firebase.db.collection(\"etiquetas\").doc(etiquetas.id).collection(\"paper\").get()\n        \n\n//             var consulta =listadepaper.docs.map(doc=>{\n//                     return{\n//                             id:doc.id,\n//                             ...doc.data()\n//                     }\n//             })    \n\n\n//         //mostrar el resultado \n\n//         console.log(consulta)\n\n//         //Guardar la consulta\n//         setpaper(consulta)\n         \n//         // terminar de cargar\n\n//         setcargando(false)\n//         }\n\n\n\n}, [props])\n\n\n\n    return (\n        <div>\n                \n            \n\n                                        <Papel key={valor.id} className={clases.caja} elevation={3}>\n\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={4}>\n                                                                                <div>\n\n                                                                                {valor.imagen!==undefined &&\n                                                                                valor.imagen==null?\n\n\n                                                                                <div className={clases.divFoto}>\n                                                                                < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n\n                                                                                </div> \n                                                                                        \n                                                                                \n                                                                                \n                                                                                \n                                                                                :         \n                                                                                <div  className={clases.divImagen} style={{\n                                                                                backgroundImage:`url(${valor.imagen})`,\n                                                                                \n                                                                                }} >\n\n                                                                                        \n                                                                                        </div>\n\n                                                                                }   \n                                                                                </div>\n                                                 </Grid>\n                                            \n <Grid xs={12} sm={12} md={6}>\n        <div className={clases.divTexto}>             \n\n\n<Typography variant=\"h5\" className={clases.titulo} >\n{valor.info==true?\n\n<a  style={{textDecoration:\"none\"}} href={`/information/${valor.id}`} >\n\n\n   {valor.titulo}\n</a>        \n:\n    valor.titulo            }                                                                  \n</Typography>\n\n        <Typography className={clases.fecha} variant=\"subtitle2\">\n                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n        </Typography>\n\n\n        <Typography variant=\"body2\" className={clases.resumen}>\n                {valor.resumen}\n        </Typography>\n\n    \n        </div>        \n        </Grid>\n\n         \n        <Grid xs={12} sm={12} md={4}>\n                                                                <Typography variant=\"subtitle1\" align=\"center\">  \n                                                                aplicaciones en :\n                                                                </Typography>\n\n                                                                \n                                                          </Grid>    \n\n                                                           <Grid xs={12} sm={12} md={8}>\n\n                                                                <Typography variant=\"subtitle1\">\n\n                                                                        {valor.etiquetas.map((valor)=>(\n                                                                        //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>\n                                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                                        //    </Link>\n                                                                                        ))}\n\n\n                                                                </Typography>\n                                                                \n                                                                \n                                                          </Grid>                     \n                                                                                         \n        <Grid xs={12} sm={12} md={2}>\n\n        <div className={clases.cajaMeGusta}>\n                                                                 <Typography className={clases.centrarComponente} variant=\"subtitle1\" >\n                                                                <Button onClick={()=>megustaSinValidarUsuario(valor)}\n                                                                className={clases.botonLikes}\n                                                                startIcon={\n                                                                funcionCorazondos(valor)?\n                                                                // <CorazonLleno></CorazonLleno>\n                                                                <>\n                                                                <img height=\"25\" src={CorazonLleno}></img>\n                                                                \n                                                                </>\n                                                                :\n                                                                //  <Corazon></Corazon>\n                                                                <>\n                                                                <img  height=\"25\"  src={Corazon}></img>\n                                                               \n                                                                </>\n                                                               }\n                                                                >\n                                                                        {valor.likes}\n                                                                </Button>\n                                                                <Typography className={clases.textUpVote} variant='subtitle2' >\n                                                                 upvote\n                                                                 </Typography>\n                                                                \n                                                </Typography>\n                                                </div>\n                                               \n                                               \n                                               \n                                               <div className={clases.botonPdf}>\n                                                <Typography  className={clases.centrarComponente} variant=\"subtitle1\"\n                                                          >\n                                                <a href={valor.pdf==null?\n                                                    valor.link:valor.pdf\n                                                }  style={{textDecoration:\"none\"}} target=\"_blank\">\n                                                <Button  className=\"botoneditar\" variant=\"contained\"\n                                               \n                                                >\n                                                        get it\n                                                </Button>\n                                                </a>\n                                                </Typography>\n                                                </div>    \n\n\n\n\n        {usuario==null?\n\n\n                                                      \n<div></div>\n:\n\n\nusuario.administrador?\n\n<div className={clases.diveditarborrar}>          \n\n<Grid container>\n        \n         <Grid xs={6}>\n        \n                <Typography variant=\"subtitle1\" align=\"center\">\n                   <BotonMenu id={valor.id}></BotonMenu>\n                </Typography>\n        </Grid>\n        <Grid  xs={6}>\n                <Typography variant=\"subtitle1\" align=\"center\">\n\n                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                        <Basurero></Basurero>    \n                </IconButton>\n\n                </Typography>\n        </Grid>\n</Grid>\n</div>                              \n\n:\n<div></div>\n\n}  \n\n\n\n        </Grid>\n\n          \n\n                                            \n\n\n\n                                        </Grid>\n\n                                        \n                                      \n                                         </Papel>                      \n\n                               \n\n                                        \n{/*                                         \n                                                                { tamaño==2&&\n\n                                                                <Typography align=\"center\">\n                                                                <Button \n                                                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                                        variant =\"contained\"\n                                                                        color=\"primary\"\n\n                                                                onClick={()=>{\n                                                                        \n                                                                }} >\n                                                                ver mas\n                                                                        </Button> \n                                                                </Typography>   }                     \n\n                                      } */}\n\n                      \n             \n\n                \n            \n\n        </div>\n    )\n}\n\nexport default Paper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AutoCompletarTres.jsx",["563","564","565","566","567","568"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Etiquetas.jsx",["569","570","571","572","573"],"import React ,{useState,useEffect}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function Chips(props) {\n  const classes = useStyles();\n  const lista=props.etiquetas\n  const [valor, setvalor] = useState(props.etiquetas)\n\n\n  const removerE=props.removerEtiqueta()\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  const handleClick = () => {\n    console.info('You clicked the Chip.');\n  };\n\nuseEffect(() => {\n  setvalor(props.etiquetas)\n}, [props])\n\n  return (\n    <div className={classes.root}>\n    {valor ?\n\nvalor.map((e) => (\n\n                        <Chip\n                      \n                        key={e.id}\n                        label={e.descripcion}\n                        onClick={handleClick}\n                        onDelete={()=>removerE(e)}\n                        color=\"primary\"\n                       \n                        />\n  \n        ))\n:<div></div>}\n   \n    \n     \n    </div>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paper.jsx",["574","575","576","577","578","579"],"import React from 'react'\nimport {Paper as Papel,Grid,Typography,Chip,Button,IconButton,makeStyles,Link} from \"@material-ui/core\"\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Corazon from '@material-ui/icons/FavoriteBorder';\nimport moment from 'moment' \nimport \"moment/locale/es\"\nimport { useState } from 'react';\nimport Swal from \"sweetalert2\"\nimport firebase from \"../firebase/firebase\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { useContext } from 'react';\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport { useHistory } from 'react-router-dom';\n\n\nconst  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"250px auto \",\n\n\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"228px\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    },\n\n\n\n\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n     \n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    },\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n        marginTop:\"10px\",\n\n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    }\n\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\n\ncontenedor:{\n        margin:\"18px auto\"\n\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n\n        position:\"absolute\",\n        top:\"0\",\n        right:\"0\",\n        width:\"90px\"\n},\ndivFoto:{\n\n    width:\"250px\",\n    height:\"160px\",\n    border:\"2px dashed #21cbce\",\n    display:\"block\",\n    margin:\"16px auto\",\n    position:\"relative\",\n    [theme.breakpoints.down(\"sm\")]:{\n        margin:\"30px auto\"\n}\n},\n\ndivImagen:{\n       \n        height:\"160px\",\n        width:\"260px\",\n        backgroundSize:\"260px auto\",\n        backgroundRepeat:\"no-repeat\",\n        backgroundPosition:\"50%\",\n        borderRadius:\"0\",\n        display:\"block\",\n        margin:\"auto\",\n        marginTop:\"15px\",\n        [theme.breakpoints.down(\"sm\")]:{\n                marginTop:\"30px\"\n        }\n}\n,\ndivTexto:{\n        [theme.breakpoints.down(\"md\")]:{\n\n                margin:\"0vw 5vw 0\"\n        },\n\n\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"5vw 5vw 0\"\n        }\n}\n,\n\n\nimgFoto:{\n    color:\"#21cbce\",\n    position:\"absolute\",\n    margin:\"auto\",\n    top:\"0\",\n    bottom:\"0\",\n    left:\"0\",\n    right:\"0\",\n    fontSize:\"3rem\"\n}\n\n,\n    margenChip:{\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n    }\n\n\n\n }))\n\n\n\n\n\nconst Paper = (props) => {\n    const clases =estilos()\n    const history = useHistory();\nconst usuario =useContext(UsuarioContext)\n\nconst [valor, setvalor] = useState(props.Paper)\nconst [paper, setpaper] = useState({})\n\n\nconst buscarChips=(valor)=>{\n        history.push(`/tag/${valor}`)\n      \n    }      \n\n\n\nconst borrar=(e)=>{\n\n\n\n\n    Swal.fire({\n            title: 'Esta seguro que desea borrar el siguiente registro?',\n            text:`${e.titulo}`,\n            showDenyButton: true,\n          \n            confirmButtonText: `Borrar`,\n            denyButtonText: `Cancelar`,\n          }).then((result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n\n                                    \n                            firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                    console.log(\"Document successfully deleted!\");\n                            }).catch((error) => {\n                                    console.error(\"Error removing document: \", error);\n                            });\n              Swal.fire('Borrado!', '', 'success')\n            } else if (result.isDenied) {\n            \n            }\n          })\n\n        \n}\n\n\nconst megusta=async(valor)=>{\n\n               \n      console.log(valor)\n\n\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n\n        \n          \n         \n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n         console.log(antiguoHaVotado)\n         console.log(usuario.uid)\n         console.log(antiguoHaVotado.includes(usuario.uid))\n     if(antiguoHaVotado.includes(usuario.uid)){ \n\n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n\n\n                console.log(antiguoHaVotado)\n\n                valor.likes=valor.likes-1\n                await firebase.db.collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                        haVotado:antiguoHaVotado\n                })\n                \n                setpaper({...valor,likes:valor.likes})\n              \n\n     }else{ \n        \n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     valor.likes=valor.likes+1   \nawait firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n})\n\n     setpaper({...valor,likes:valor.likes})\n      }\n}\n\n\n    return (\n        <div>\n            \n\n\n\n\n            <Papel className={clases.caja} elevation={3}>\n\n\n<Grid container  className={clases.contenedor}>\n\n        <Grid xs={12} sm={12} md={4}>\n                <div>\n\n                     {valor.imagen==null?\n\n\n                    <div className={clases.divFoto}>\n                    < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n\n                    </div> \n                        \n                      \n                      \n                      \n                      :         \n                   <div  className={clases.divImagen} style={{\n                  backgroundImage:`url(${valor.imagen})`,\n                   \n                }} >\n\n                        \n                        </div>\n\n                     }   \n                </div>\n        </Grid>\n\n\n        <Grid xs={12} sm={12} md={5}>\n        <div className={clases.divTexto}>             \n\n\n        <Typography variant=\"h5\" className={clases.titulo} >\n                        {valor.titulo}             \n        </Typography>\n\n        <Typography className={clases.fecha} variant=\"subtitle2\">\n                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n        </Typography>\n\n\n        <Typography variant=\"body2\" className={clases.resumen}>\n                {valor.resumen}\n        </Typography>\n\n        <Typography variant=\"subtitle1\">\n\n                {valor.etiquetas.map((valor)=>(\n                \n                <Chip variant=\"outlined\" className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor} />\n                     \n                                ))}\n\n\n        </Typography>\n\n\n        </div>        \n        </Grid>\n\n\n\n\n\n\n        <Grid xs={12} sm={12} md={3}>\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n\n                        <Button\n                         onClick={()=>megusta(valor)}\n                        style={{color:\"#ff0000\",\n                        marginTop:\"40px\"\n                }}\n                        startIcon={<Corazon></Corazon>}\n                        >\n\n                                {valor.likes}\n                        </Button>\n\n        </Typography>\n\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n        <a href={valor.pdf}  style={{textDecoration:\"none\"}} target=\"_blank\">                                               \n        <Button  className=\"botoneditar\" variant=\"contained\"\n        \n        startIcon={<InsertDriveFileIcon />}\n        \n        >\n\n                pdf \n        </Button>\n\n        </a>     \n\n        </Typography>\n\n          \n        {usuario==null?\n\n\n                                                      \n<div></div>\n:\n\n\nusuario.administrador?\n\n<div className={clases.diveditarborrar}>          \n\n<Grid container>\n        \n         <Grid xs={6}>\n        \n                <Typography variant=\"subtitle1\" align=\"center\">\n                        <Link to={`/editarpaper/${valor.id}`}>\n                                <IconButton  variant=\"outlined\" color=\"primary\">\n                                <Lapiz></Lapiz>\n                                </IconButton>\n                        </Link>\n\n                </Typography>\n        </Grid>\n        <Grid  xs={6}>\n                <Typography variant=\"subtitle1\" align=\"center\">\n\n                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                        <Basurero></Basurero>    \n                </IconButton>\n\n                </Typography>\n        </Grid>\n</Grid>\n</div>                              \n\n:\n<div></div>\n\n}  \n\n\n\n        </Grid>\n\n\n\n</Grid>\n\n\n\n\n\n\n</Papel>\n\n\n        </div>\n    )\n}\n\nexport default Paper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Caja.jsx",["580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623"],"import React,{useEffect,useState} from 'react'\nimport {Grid,makeStyles, Typography, Button,IconButton,CircularProgress, setRef} from \"@material-ui/core\"\nimport Paper from '@material-ui/core/Paper';\nimport firebase from '../firebase/firebase'\nimport moment from 'moment'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {Chip} from '@material-ui/core'\nimport \"moment/locale/es\"\nimport SaveIcon from '@material-ui/icons/Save';\n//import Corazon from '@material-ui/icons/FavoriteBorder';\nimport Basurero from '@material-ui/icons/Delete';\n//import CorazonLleno from '@material-ui/icons/Favorite';\nimport Lapiz from '@material-ui/icons/Create';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {UsuarioContext} from \"../Provedores/UsuarioContext\"\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CorazonLleno from \"../imagen/iconos/arbolLleno.png\"\nimport Corazon from \"../imagen/iconos/arbolVacio.png\"\n import BotonMenu from './Tarjeta/BotonMenu'\n\n   \n      \n\n const  estilos = makeStyles((theme)=>({\n        button: {\n                margin: '3px'\n              },\n\n    margen:{\n\n            margin:\"45px auto \",\n\n\n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n      \n\n            \" & #mandarina .MuiSvgIcon-root\" :{\n              \n                color:\"#EC6933\",\n              \n            },\n            \" & #verde .MuiSvgIcon-root\" :{\n              \n                color:\"#4B9965\",\n              \n            },\n            \" & #morado .MuiSvgIcon-root\" :{\n              \n                color:\"#9372B6\",\n              \n            },\n            \" & #azul .MuiSvgIcon-root\" :{\n              \n                color:\"#4CA9B2\",\n              \n            },\n\n\n\n            \" & .MuiButton-containedPrimary\" :{\n              \n                color:\"#434343\",\n                backgroundColor:\"#ffffff\",\n                boxShadow:\"none\"\n            },\n          \n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n                marginTop:\"10px\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    }\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n        tituloGeneral:{\n\n        fontWeight:\"700\",\n        fontFamily:\"Lato\",\n        fontSize:\"27px\"\n        }\n,\ndivTituloGeneral:{\n        margin:\"0px auto\",\n        width:\"85vw\"\n},\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\ncontenedor:{\n        margin:\"18px auto\"\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n        position:\"absolute\",\n        bottom:\"0\",\n        right:\"9px\",\n        width:\"90px\"\n},\ndivFoto:{\n\n        width:\"250px\",\n        height:\"160px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\",\n        [theme.breakpoints.down(\"sm\")]:{\n                margin:\"30px auto\"\n        }\n    },\n    divImagen:{\n\n         height:\"160px\",\n         width:\"260px\",\n         backgroundSize:\"260px auto\",\n         backgroundRepeat:\"no-repeat\",\n         backgroundPosition:\"50%\",\n         borderRadius:\"16px\",\n         display:\"block\",\n         margin:\"auto\",\n         marginTop:\"15px\",\n         [theme.breakpoints.down(\"sm\")]:{\n                 marginTop:\"30px\"\n         }\n\n\n\n      },\n\n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    cajaMeGusta:{\n            position:'absolute',\n            top:'8px',\n            right:'12px',\n    [theme.breakpoints.down(\"sm\")]:{\n            position:'unset'\n    }\n\n\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    }\n    ,botonLikes:{\n        color:\"#35b37c\",\n        margin:\"8px 0px 0x 0px\",\n        border:\"1px solid\"\n\n\n    },\n    margenChip:{\n\n        margin:\"0px 3px\",\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        divTexto:{\n                [theme.breakpoints.down(\"md\")]:{\n\n                        margin:\"0vw 5vw 0\"\n                },\n\n\n\n                [theme.breakpoints.down(\"sm\")]:{\n\n                        margin:\"5vw 5vw 0\"\n                }\n        },\n        textNoDisponible:{\n\n\n                fontFamily:\"Nunito\",\n                color:\"#808080\"\n\n\n\n\n        },\n        centrarComponente:{\n                textAlign:\"end\",\n                marginRight:\"10px\",\n                [theme.breakpoints.down(\"md\")]:{\n\n                        textAlign:\"center\",\n                }\n\n        },\n        botonPdf:{\n                position:\"absolute\",\n                bottom:\"55px\",\n                right:'0px',\n                [theme.breakpoints.down(\"sm\")]:{\n                        position:'unset'\n                }\n        }\n,\n        textUpVote:{\n           fontFamily:\"nunito\",\n           textAlign:\"center\",\n           color:\"#808080\"     \n        }\n\n\n\n\n\n }))\n\n\n\n\nconst Caja = (props) => {\n\n    const history = useHistory();\n    const clases =estilos()\n    const usuario =useContext(UsuarioContext)\n    const [listapaper,setlistapaper]=useState([])\n    const [cargando, setcargando] = useState(false)\n    const [cargandodos, setcargandodos] = useState(false)\n    const [paper, setpaper] = useState({})\n    const [ultimoDocumento, setultimoDocumento] = useState(0)\n   const [vacio, setvacio] = useState(false)\n  const [tituloGeneral,setTituloGeneral]=useState(\"The Lastest\")\n\n\n\n  \n\n\n      \n const listadepaper=async(recientes,valorados)=>{\n        console.log(\"inicio\")\n\n        try {\n\n        if(recientes){\n                setlistapaper([])\n                await firebase.db.collection(\"paper\").orderBy(\"subida\",\"desc\").limit\n                (5).get().then((coleccion)=>\n                {\n\n                            if(coleccion.size!=0){\n                                        console.log(\"paso por aca \")\n                                        const lista =coleccion.docs.map((paperObje)=>{return {...paperObje.data(),\n                                        click:false\n                                        }})\n                                        setultimoDocumento(lista[lista.length-1].id)\n                                        setlistapaper((listapaper)=>[...listapaper,...lista])\n                                        setcargando(false)\n\n                                }\n                                if(coleccion.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                }\n\n                )\n        }else{\n                if(valorados){\n                        setlistapaper([])\n                       await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n\n                         let nuevalista=[]\n                            await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                                nuevalista=valor.docs.map(doc=>{\n\n                                                          return{\n                                                                id:doc.id,\n                                                                ...doc.data()\n                                                            }\n\n                                })\n\n                                if(nuevalista.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                                if(nuevalista.length==0){\n                                        setultimoDocumento(0)\n                                }else{\n                                setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                                 }\n\n\n                           })\n\n\n\n\n                           console.log(\"paso por aca \")\n                        setlistapaper(nuevalista)\n\n\n\n\n\n\n                }\n\n\n        }\n\n        } catch (error) {\n                console.log(error)\n        }\n        console.log(\"final\")\n\n        setcargando(false)\n }\n\n//  const  manejarSnapshot=(snapshot)=>{\n\n\n\n//         console.log(listapaper)\n//         const  lista =snapshot.docs.map(doc=>{\n//             return{\n//                 id:doc.id,\n//                 ...doc.data()\n//             }\n//         })\n//         console.log(lista)\n//         setcargando(false)\n\n//                 if(lista.length!=0){\n//                         setvacio(false)\n//                         setultimoDocumento(lista[lista.length-1].id)\n\n//                 }else{\n\n//                         setvacio(true)\n\n//                 }\n//         setlistapaper(lista)\n//     }\n\n\n\n\n\n//nueva funcion de busqueda\n\nconst buscarTexto=async(texto_busqueda,recientes,valorados)=>{\n\n\n        setcargando(true)\n\n        try {\n\n                if(recientes){\n                        console.log(texto_busqueda)\n                        setlistapaper([])\n                        await firebase.db.collection(\"paper\").orderBy(\"busqueda\")\n                        .startAt(texto_busqueda).endAt(texto_busqueda+'\\uf8ff')\n                       .limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                console.log(lista)\n                                                console.log(listapaper)\n\n\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n                        // if(valorados){\n                        //         setlistapaper([])\n                        //        await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1].id)\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                        //                                 setcargando(false)\n\n                        //                         }\n                        //                         if(coleccion.length==5){\n                        //                                 setvacio(true)\n                        //                         }else{\n                        //                                 setvacio(false)\n                        //                         }\n\n                        //         }\n\n                        //         )\n                        // }else{\n\n                        //          let nuevalista=[]\n                        //             await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                        //                 nuevalista=valor.docs.map(doc=>{\n\n                        //                                           return{\n                        //                                                 id:doc.id,\n                        //                                                 ...doc.data()\n                        //                                             }\n\n                        //                 })\n\n                        //                 if(nuevalista.length==5){\n                        //                         setvacio(true)\n                        //                 }else{\n                        //                         setvacio(false)\n                        //                 }\n\n                        //                 if(nuevalista.length==0){\n                        //                         setultimoDocumento(0)\n                        //                 }else{\n                        //                 setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                        //                  }\n\n\n                        //            })\n\n\n\n\n                        //            console.log(\"paso por aca \")\n                        //         setlistapaper(nuevalista)\n\n\n\n\n\n\n                        // }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n                setcargando(false)\n\n\n\n}\n\n\nconst pedirpaper=()=>{\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\nconst {papermatch}=props.paperid\n\nif(papermatch){\n\n        buscarPorId(papermatch)\n\n}else{\n\n  // LLAMAR A LOS PAPER\n\n\n\n  listadepaper(props.recientes,props.valorados)\n\n}\n\n}\n\n\n\n\n\n\n\nconst borrar=(e)=>{\n\n\n\n\n        Swal.fire({\n                title: '¿Esta seguro que desea borrar el siguiente registro?',\n                text:`${e.titulo}`,\n                showDenyButton: true,\n                confirmButtonColor: '#21cbce',\n                confirmButtonText: `Borrar`,\n                denyButtonText: `Cancelar`,\n              }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n\n                 if (result.isConfirmed) {\n                                firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                        let nuevaLista=[]\n                                        listapaper.map((valor)=>{\n                                                        if(valor.id!=e.id){\n                                                                console.log(valor)\n                                                                nuevaLista.push(valor)\n                                                        }\n\n                                        })\n\n\n                                        //pedirpaper()\n\n                                console.log(\"borrado\")\n\n                                }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n\n\n                                e.etiquetas.map( valor=>{\n\n                                        firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                             //  console.log(\"Document successfully deleted!\");\n\n\n\n                                              let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                        return{...doc.data()}\n\n                                              })\n\n                                                console.log(soloTag)\n                                                let nuevoObjeto={  ...soloTag,\n                                                        contar:soloTag.contar-1}\n\n                                                  console.log(nuevoObjeto)\n\n                                                firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                        }).catch((error) => {\n                                            console.error(\"Error removing document: \", error);\n                                        });\n\n\n                                    })\n\n\n\n\n\n\n\n\n                                   try {\n                                        var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)\n                                        var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)\n\n\n                                   } catch (error) {\n                                    console.log(error)\n                                   }\n\n\n\n\n                              console.log(borrarArchivo)\n                              console.log(borrarImagen)\n\n\n                                   if(borrarArchivo!=undefined){\n                                                borrarArchivo.delete().then(function() {\n                                                        //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                }).catch(function(error) {\n\n                                                                console.log(error)\n                                                        //console.log(error)\n                                                        // Uh-oh, an error occurred!m\n                                                });\n\n                                        }\n                                if(borrarImagen!=undefined){\n\n\n                                                if(e.imagen!=null){ borrarImagen.delete().then(function() {\n                                                                //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                        }).catch(function(error) {\n                                                                console.log(error)\n                                                        // Uh-oh, an error occurred!\n                                                        }); }\n                                }\n\n\n                  Swal.fire({title:'Borrado!', confirmButtonColor:'#21cbce',icon: 'success'}).then(()=>{\n                          pedirpaper()\n                  })\n                } else if (result.isDenied) {\n\n                }\n              })\n\n\n}\n\n\n\n\n useEffect(() => {\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\nconst {papermatch}=props.paperid\n\nif(papermatch){\n\n        buscarPorId(papermatch)\n\n}else{\n\n  // LLAMAR A LOS PAPER\n\n\n\n  listadepaper(props.recientes,props.valorados)\n\n}\n\n                // if(props.busqueda!=undefined){\n                //         const texto_busqueda=props.busqueda.buscado\n                //         buscarTexto(texto_busqueda,props.recientes,props.valorados)\n                // }\n                //else{\n                // pedirpaper()\n                // }\n\n                //    console.log(listapaper)\n                //    setlistapaper([])\n\n }, [props.recientes,props.paperid,props.busqueda])\n\n\n\n\n const funcionCorazon=(valor)=>{\n\n        let votos_usuarios=[]\n\n        if(valor.haVotado==undefined){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n        votos_usuarios=valor.haVotado\n        if(votos_usuarios.length==0){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n                if(usuario!=undefined){\n                if(votos_usuarios.includes(usuario.uid)){\n                        return true\n                }else{\n                        return false\n                }}\n\n        }\n}\n\n\n\n }\n\n\n\n\n const funcionCorazondos=(valor)=>{\n\n             if(valor.likes>0){\n                 return true       \n             }else{\n                return false\n             }\n\n\n\n }\n\n\n\n\n\n  const pedirMas=async()=>{\n                setcargandodos(true)\n                const recientes=props.recientes\n                const valorados=props.valorados\n                const paperRef=firebase.db.collection(\"paper\")\n\n\n        try {\n\n                if(recientes){\n\n\n\n\n                        return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                        {\n                           //     console.log(doc)\n                          var valoradosOrdenados = await paperRef.orderBy(\"subida\",\"desc\").startAfter(doc).limit(5).get()\n\n                                if(valoradosOrdenados.size!=0){\n\n                             //      console.log(valoradosOrdenados)\n                                 const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                 setultimoDocumento(lista[lista.length-1].id)\n                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                                 setcargandodos(false)\n                        }else{\n\n                                setvacio(false)\n                                setcargandodos(false)\n                          }\n\n                        }\n                        )\n\n\n\n\n\n\n                }else{\n\n\n                        if(valorados){\n\n\n\n                                // const valoradosRef=firebase.db.collection(\"paper\")\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"likes\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                           console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n                                // firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimoDocumento).limit(5).get().then((coleccion)=>\n                                // {\n\n\n                                //                 console.log(\"dentro de la coleccion \")\n\n                                //             if(coleccion.size!=0){\n\n                                //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                //                         setultimoDocumento(lista[lista.length-1].likes)\n                                //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                                //                 }else{\n\n                                //                       setvacio(true)\n                                //                 }\n                                // }\n\n                                // )\n                        }else{\n\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        //console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"id\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                          // console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n\n\n\n\n\n                                // comentar\n                        //       firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimoDocumento).limit(1).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1])\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                        //                         }else{\n\n                        //                               setvacio(true)\n                        //                         }\n                        //         }\n\n                        //         )\n                        }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n\n  }\n\n\n // buscar por id del paper\n\n  const buscarPorId=async(id)=>{\n//  alert(id)\n  var variable=await firebase.db.collection(\"paper\").doc(id)\n //console.log(variable)\n\n\n variable.get().then((doc) => {\n        // Document was found in the cache. If no cached document exists,\n        // an error will be returned to the 'catch' block below.\n       // console.log(\"Cached document data:\", doc.data());\n        setlistapaper([doc.data()])\n\n        setcargando(false)\n        setvacio(false)\n\n    }).catch((error) => {\n        console.log(\"Error getting cached document:\", error);\n    });\n\n\n\n  }\n\n\n  const buscarChips=(valor)=>{\n\n\n        history.push(`/tag/${valor.id}`)\n\n  }\n\n\n\nconst megusta=(valor)=>{\n\n\n        // if(usuario==null) {\n        //         return history.push(\"/login\")\n        // }\n\n\n\n\n          console.log(valor.haVotado)\n\n        if(valor.haVotado==undefined){\n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n\n     if(antiguoHaVotado.includes(usuario.uid)){\n             console.log(antiguoHaVotado)\n\n        antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                return obj!==usuario.uid\n        })\n        valor.likes=valor.likes-1\n\n        let  nuevoValor={\n                ...valor,\n                 likes:valor.likes,\n                haVotado:antiguoHaVotado\n        }\n\n\n        firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n\n        // armar de nuevo el arreglo con el valor\n\n         armararreglo(nuevoValor)\n\n       // mapear etiquetas\n\n        valor.etiquetas.map(valordos=>{\n                firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                       haVotado:antiguoHaVotado\n\n                })\n        })\n\n\n         //setpaper({...valor,likes:valor.likes})\n        // actualizar la etiquetas\n\n\n\n\n\n\n\n     }else{\n\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     valor.likes=valor.likes+1\n\n\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\nfirebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas\n\n      valor.etiquetas.map(valordos=>{\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n      }\n      console.log(\"final\")\n}\n\n\nconst megustaSinValidarUsuario=(valor)=>{\n    \n\n   if(valor.click){    \n     valor.likes=valor.likes-1\n     valor.click=false\n}else{\n     valor.likes=valor.likes+1\n     valor.click=true\n}\n\n     const nuevoHaVotado = [];\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\n\n\n\n       //guarda datos en el paper\n       firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n        likes:valor.likes,\n        haVotado:nuevoHaVotado\n\n})\n\n      // mapear etiquetas\n      valor.etiquetas.map(valordos=>{\n\n        //guarda datos  en las etiquetas\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n     // }\n      console.log(\"final\")\n}\n\nconst armararreglo=(nuevoValor)=>{\n\n\n                 let   nuevalista=listapaper.map(valor=>{\n\n                                if (nuevoValor.id==valor.id){\n\n                                        return{\n                                                ...nuevoValor\n                                        }\n                                }else{\n\n                                        return{ ...valor}\n                                }\n\n\n\n                 })\n\n\n                 console.log(nuevalista)\n                 setlistapaper(nuevalista)\n\n\n}\n\n\n\n    return (\n\n\n\n// <Button onClick={()=>{pedirMas()}} >\n//                             ver mas\n// </Button>\n\n\n\n\n\n        <div  className={clases.margen}>\n\n\n                <div className={clases.divTituloGeneral}>\n\n                <Grid container>\n                <Grid xs={8} md={7}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                                {props.textoGeneral}\n                        </Typography>\n                </Grid>\n\n                <Grid xs={4} md={5}>\n\n                <Button\n                id='mandarina'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Lastest\n      </Button> <Button\n         id='verde'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Popular\n      </Button>\n       <Button\n         id='morado'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        People\n      </Button> \n      <Button\n        id='azul'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Personal Health\n      </Button>\n\n\n                               \n\n                </Grid>\n                </Grid>\n                </div>\n\n                <Grid container>\n                    <Grid  xs={12}>\n                            {\n                            cargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                           { listapaper.length==0 ?\n                              <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>\n\n\n                           :\n\n                           <div>\n                                {\n\n                            listapaper.map((valor)=>(\n\n                                        <Paper key={valor.id} className={clases.caja} elevation={3}>\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={9}>\n\n\n                                                    <Grid container >    \n                                                        <Grid xs={12} sm={12} md={4} >\n                                                                <div  >\n\n                                                                {valor.imagen==null?\n\n                                                                <div className={clases.divFoto}>\n                                                                                < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n\n                                                                </div> :\n                                                                <div   className={clases.divImagen} style={{\n                                                                backgroundImage:`url(${valor.imagen})`,\n\n                                                                }} >\n\n\n                                                                        </div>\n\n                                                                }\n                                                                </div>\n                                                              \n\n                                                        </Grid>\n\n\n                                                        <Grid  xs={12} sm={12} md={8}>\n                                                        <div className={clases.divTexto}>\n                                                        \n                                                        <Typography variant=\"h5\" className={clases.titulo} >\n                                                                        {valor.info==true?\n\n                                                                        <a  style={{textDecoration:\"none\"}} href={`/information/${valor.id}`} >\n\n\n                                                                           {valor.titulo}\n                                                                        </a>        \n                                                                        :\n                                                                         valor.titulo\n                                                                        }\n                                                        </Typography>\n\n                                                                <Typography className={clases.fecha} variant=\"subtitle2\">\n                                                                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}\n                                                        </Typography>\n\n\n\n\n\n                                                        <Typography variant=\"body2\" className={clases.resumen}>\n                                                                {valor.resumen}\n                                                        </Typography>\n\n                                                    \n\n                                                        </div>\n\n                                                        </Grid>\n                                                                        \n                                                             \n                                                        <Grid xs={12} sm={12} md={4}>\n                                                                <Typography variant=\"subtitle1\" align=\"center\">  \n                                                                aplicaciones en :\n                                                                </Typography>\n\n                                                                \n                                                          </Grid>    \n\n                                                           <Grid xs={12} sm={12} md={8}>\n\n                                                                <Typography variant=\"subtitle1\">\n\n                                                                        {valor.etiquetas.map((valor)=>(\n                                                                        //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>\n                                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                                        //    </Link>\n                                                                                        ))}\n\n\n                                                                </Typography>\n                                                                \n                                                                \n                                                          </Grid>                     \n                                                     </Grid>\n                                                \n                                                \n                                                 </Grid>  \n                                        <Grid xs={12} sm={12} md={2}>\n                                                        <div className={clases.cajaMeGusta}>\n                                                                        <Typography className={clases.centrarComponente} variant=\"subtitle1\" >\n\n                                                                        <Button onClick={()=>megustaSinValidarUsuario(valor)}\n                                                                        className={clases.botonLikes}\n                                                                        startIcon={\n\n                                                                        funcionCorazondos(valor)?\n                                                                        // <CorazonLleno></CorazonLleno>\n                                                                        <>\n                                                                        <img height=\"25\" src={CorazonLleno}></img>\n                                                                        \n                                                                        </>\n                                                                        :\n\n                                                                        //  <Corazon></Corazon>\n                                                                        <>\n                                                                        <img  height=\"25\"  src={Corazon}></img>\n                                                                \n                                                                        </>\n\n                                                                }\n                                                                        >\n\n                                                                                {valor.likes}\n                                                                        </Button>\n\n                                                                        <Typography className={clases.textUpVote} variant='subtitle2' >\n                                                                        upvote\n                                                                        </Typography>\n                                                                        \n\n                                                        </Typography>\n                                                        </div>\n                                                \n                                                \n                                                \n                                                <div className={clases.botonPdf}>\n                                                        <Typography  className={clases.centrarComponente} variant=\"subtitle1\"\n                                                                >\n\n\n\n\n                                                        <a href={valor.pdf==null?\n                                                        valor.link:valor.pdf\n                                                        }  style={{textDecoration:\"none\"}} target=\"_blank\">\n                                                        <Button  className=\"botoneditar\" variant=\"contained\"\n\n                                                \n\n                                                        >\n\n                                                                get it\n                                                        </Button>\n\n                                                        </a>\n\n                                                        </Typography>\n                                                        </div>        \n\n                                                {usuario==null?\n\n\n\n                                                                <div></div>\n                                                                :\n\n\n                                                                usuario.administrador?\n\n                                                                <div className={clases.diveditarborrar}>\n\n                                                                <Grid container>\n\n                                                                        <Grid xs={6}>\n\n                                                                                <Typography variant=\"subtitle1\" align=\"center\">\n                                                                           \n                                                                                        {/* <Link to={`/editarpaper/${valor.id}`}> */}\n                                                                                                \n                                                                                                <BotonMenu setlistapaper={setlistapaper} id={valor.id}></BotonMenu>\n                                   \n\n                                                                                        {/* </Link> */}\n\n                                                                                </Typography>\n                                                                        </Grid>\n                                                                        <Grid  xs={6}>\n                                                                                <Typography variant=\"subtitle1\" align=\"center\">\n\n                                                                                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                                                                                        <Basurero></Basurero>\n                                                                                </IconButton>\n\n                                                                                </Typography>\n                                                                        </Grid>\n                                                                </Grid>\n                                                </div>\n\n                                                        :\n                                                        <div></div>\n\n                                                                }\n        </Grid>\n\n\n\n                                         </Grid>\n\n\n\n\n\n\n                                        </Paper>\n                            ))\n                            }\n\n\n\n\n\n\n\n\n\n                            </div>\n                         }\n\n                            {cargandodos?\n\n<div className={clases.divCircular} >\n<CircularProgress className={clases.circular}></CircularProgress>\n</div>\n\n\n\n:\n\n// vacio==true &&\n\n        <Typography align=\"center\">\n        <Button\n\n                endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                variant =\"contained\"\n                className=\"botonVerMas\"\n\n        onClick={()=>{\n                pedirMas()\n        }} >\n        See More\n\n                </Button>\n</Typography>   }\n\n\n\n\n\n\n                            </div>\n                            }\n\n\n\n\n                     </Grid>\n\n\n                </Grid>\n\n\n        </div>\n\n )\n}\n\nexport default Caja\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/BotonFlotante.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/config.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/Funciones.js",["624"],"\nimport Firebase from '../firebase/firebase'\n\n\n// retorna el paper por id\nconst RetornarPaper=async(id)=>{\n\n   const consulta= await Firebase.db.collection(\"paper\").doc(id).get().then(docRef=>{return{id:docRef.id,...docRef.data()}})\n   console.log(consulta)\n   return consulta\n\n}\n\n// renovar papers  segun el mapeo de etiquetas \n\nconst RenovarPaperMapEtiqueta=(paper)=>{\n    console.log(\"hola mundo\")\n    console.log(paper)\n    const etiquetas=paper.etiquetas\n    const consulta=Firebase.db.collection(\"etiquetas\")\n\n    etiquetas.map(tag=>{\n\n         consulta.doc(tag.id).collection(\"paper\").doc(paper.id).update(paper)\n\n\n    })\n\n\n\n}\n\n\n\n\n\n\n\n\nexport {RetornarPaper,RenovarPaperMapEtiqueta}","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Search.jsx",["625"],"import React,{useState}  from 'react'\nimport Caja from \"../Componetes/CajaBusqueda\"\nimport BotonFlotante from \"../Componetes/BotonFlotante\"\nimport { useEffect } from 'react'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react'\nimport { withRouter } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\n\n\nconst Inicio = (props) => {\n\n    // const [state, setstate] = useState(props.recientes)\n    const usuario = useContext(UsuarioContext)\n  const [busqueda, setbusqueda] = useState()\n    const location = useLocation();\n\nuseEffect(() => {\n   \n\n        console.log(location.state)\n        console.log(\"paso por aca\")\n\n    try {\n        if(location.state!==undefined){\n\n\n            setbusqueda(location.state)\n            // const {paper}=props.match.params\n            //  const{buscado}=props.match.params\n            //  console.log(props.match.params)\n       \n            // setpapermatch(paper)    \n        }\n      \n        \n    } catch (error) {\n       \n    }\n \n\n}, [props])\n\n    return (\n       \n        <div>  \n            <Caja  busqueda={busqueda}  textoGeneral={props.textoGeneral} valorados={props.valorados} recientes={props.recientes} paperid={props.match.params} >\n                \n            </Caja>\n        \n        {usuario?\n           <div>\n               {usuario.administrador? <div>\n                <BotonFlotante>\n               \n               </BotonFlotante>\n               </div>:\n               <div></div>\n               }\n           \n            </div>:\n            <></>\n        }\n       \n        </div>\n\n    )\n}\n\nexport default withRouter(Inicio)\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/CajaBusqueda.jsx",["626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663"],"import React,{useEffect,useState} from 'react'\nimport {Grid,makeStyles, Typography, Button,IconButton,CircularProgress, setRef} from \"@material-ui/core\"\nimport Paper from '@material-ui/core/Paper';\nimport firebase from '../firebase/firebase'\nimport moment from 'moment' \nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {Chip} from '@material-ui/core'\nimport \"moment/locale/es\"\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n\nimport Basurero from '@material-ui/icons/Delete';\n\nimport Lapiz from '@material-ui/icons/Create';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {UsuarioContext} from \"../Provedores/UsuarioContext\"\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from '@material-ui/lab/Alert';\nimport CorazonLleno from \"../imagen/iconos/arbolLleno.png\"\nimport Corazon from \"../imagen/iconos/arbolVacio.png\"\n\n const  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"100px auto \",\n\n\n\n            \"& .botoneditar\":{\n                background:\"#1ab37c\",\n                color:\"#ffffff\",\n             \n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n\n            \" & .MuiButton-containedPrimary:hover\" :{\n                backgroundColor: \"#303f9f00\",\n                color:\"#5fcccf\",\n                border:\"1px solid\"\n            },\n\n            \"& .botoneditar\":{\n                background:\"#1ab37c\",\n                color:\"#ffffff\",\n                marginTop:\"10px\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    }\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\ntituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n}\n,\ndivTituloGeneral:{\n        margin:\"55px auto\",\n        width:\"85vw\"\n},\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\ncontenedor:{\n        margin:\"18px auto\"\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\n\n\n\n\ndiveditarborrar:{\n        position:\"absolute\",\n        bottom:\"0\",\n        right:\"9px\",\n        width:\"90px\"\n},\n\n\nbotonPdf:{\n        position:\"absolute\",\n        bottom:\"55px\",\n        right:'0px',\n        [theme.breakpoints.down(\"sm\")]:{\n                position:'unset'\n        }\n}\n,\n\ntextUpVote:{\n        fontFamily:\"nunito\",\n        textAlign:\"center\",\n        color:\"#808080\"     \n     }\n,\n\ncajaMeGusta:{\n        position:'absolute',\n        top:'8px',\n        right:'12px',\n[theme.breakpoints.down(\"sm\")]:{\n        position:'unset'\n}\n\n\n},\n\n\ndivFoto:{\n\n        width:\"250px\",\n        height:\"160px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\",\n        [theme.breakpoints.down(\"sm\")]:{\n                margin:\"30px auto\"\n        }\n    },\n\n    divImagen:{\n       \n         height:\"160px\",\n         width:\"260px\",\n         backgroundSize:\"260px auto\",\n         backgroundRepeat:\"no-repeat\",\n         backgroundPosition:\"50%\",\n         borderRadius:\"0\",\n         display:\"block\",\n         margin:\"auto\",\n         marginTop:\"15px\",\n         [theme.breakpoints.down(\"sm\")]:{\n                 marginTop:\"30px\"\n         }\n\n     \n      \n      },\n    \n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },botonLikes:{\n        color:\"#35b37c\",\n        margin:\"8px 0px 0x 0px\",\n        border:\"1px solid\"\n\n    },\n    margenChip:{\n\n        margin:\"0px 3px\",\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        divTexto:{\n                [theme.breakpoints.down(\"md\")]:{\n\n                        margin:\"0vw 5vw 0\"\n                },\n\n\n\n                [theme.breakpoints.down(\"sm\")]:{\n\n                        margin:\"5vw 5vw 0\"\n                }\n        },\n        textNoDisponible:{\n\n\n                fontFamily:\"Nunito\",\n                color:\"#808080\"\n    \n    \n    \n    \n        }\n\n        ,\n        centrarComponente:{\n                textAlign:\"end\",\n                marginRight:\"10px\",\n                [theme.breakpoints.down(\"md\")]:{\n\n                        textAlign:\"center\",\n                }\n\n        }\n    \n\n\n\n\n }))\n\n\n\n\nconst Caja = (props) => {\n    \n    const history = useHistory();\n    const clases =estilos()\n    const usuario =useContext(UsuarioContext)\n    const [listapaper,setlistapaper]=useState([])\n    const [cargando, setcargando] = useState(false)\n    const [cargandodos, setcargandodos] = useState(false)\n    const [paper, setpaper] = useState({})\n    const [ultimoDocumento, setultimoDocumento] = useState(0)\n   const [vacio, setvacio] = useState(false)    \n  const [tituloGeneral,setTituloGeneral]=useState() \n\n\n  \n\n const listadepaper=async(recientes,valorados)=>{\n\n          \n        try {\n           \n        if(recientes){\n                setlistapaper([])\n                await firebase.db.collection(\"paper\").orderBy(\"subida\",\"desc\").limit\n                (5).get().then((coleccion)=>\n                {\n\n                            if(coleccion.size!=0){            \n                                        console.log(\"paso por aca \")\n                                        const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                        setultimoDocumento(lista[lista.length-1].id)\n                                        setlistapaper((listapaper)=>[...listapaper,...lista])\n                                        setcargando(false)\n                                      \n                                }\n                                if(coleccion.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                }\n                \n                )\n        }else{\n                if(valorados){\n                        setlistapaper([])\n                       await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){            \n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n                                                \n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n                        \n                        )               \n                }else{\n                   \n                         let nuevalista=[]\n                            await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n                                \n                               \n                                nuevalista=valor.docs.map(doc=>{\n                                       \n                                                          return{\n                                                                id:doc.id,\n                                                                ...doc.data()\n                                                            }\n                                        \n                                })\n                               \n                                if(nuevalista.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                                if(nuevalista.length==0){\n                                        setultimoDocumento(0)\n                                }else{\n                                setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                                 }\n                       \n\n                           })\n\n\n                           \n                       \n                           console.log(\"paso por aca \")\n                        setlistapaper(nuevalista)   \n\n\n\n\n\n              \n                }\n               \n               \n        }\n\n        } catch (error) {\n                console.log(error)\n        }\n        setcargando(false)\n }\n\n//  const  manejarSnapshot=(snapshot)=>{\n\n       \n       \n//         console.log(listapaper) \n//         const  lista =snapshot.docs.map(doc=>{\n//             return{\n//                 id:doc.id,\n//                 ...doc.data()\n//             }\n//         })\n//         console.log(lista)\n//         setcargando(false)\n\n//                 if(lista.length!=0){\n//                         setvacio(false) \n//                         setultimoDocumento(lista[lista.length-1].id)\n                        \n//                 }else{\n                       \n//                         setvacio(true)\n\n//                 }        \n//         setlistapaper(lista)\n//     } \n\n    \n\n\n\n//nueva funcion de busqueda \n\nconst buscarTexto=async(texto_busqueda,recientes,valorados)=>{\n\n         let pruebatexto=texto_busqueda       \n        setcargando(true)\n        setTituloGeneral(`Search results : \"${pruebatexto}\" `)\n       \n        try {   \n           \n                // if(recientes){\n                        console.log(pruebatexto)\n                        setlistapaper([])\n                        \n                        // ver la data que esta llegando  \n \n                          const query=await firebase.db.collection(\"paper\").orderBy (\"busqueda\")\n                        .startAt(pruebatexto).endAt(pruebatexto+'\\uf8ff').limit(5).get()\n\n                        const resultado=query.docs.map((paperObje)=>{\n                        console.log(pruebatexto)        \n                        return {...paperObje.data(),\n                        click:false\n                        }})\n                        console.log(resultado)\n                        setlistapaper(resultado)\n                        // .then((coleccion)=>\n                        // {                        \n                        //         console.log(pruebatexto)\n\n                                \n                        //             if(coleccion.size!=0){            \n                                           \n                        //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                         console.log(lista)              \n                        //                         console.log(listapaper)              \n\n\n                        //                         setultimoDocumento(lista[lista.length-1].id)\n                        //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                        //                         setcargando(false)\n                                              \n                        //                 }\n                        //                 if(coleccion.length==5){\n                        //                         setvacio(true)\n                        //                 }else{\n                        //                         setvacio(false)\n                        //                 }\n        \n                        // }\n                        \n                                \n                // }else{\n                        // if(valorados){\n                        //         setlistapaper([])\n                        //        await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        //         {\n        \n                        //                     if(coleccion.size!=0){            \n        \n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1].id)\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                        //                                 setcargando(false)\n                                                        \n                        //                         }\n                        //                         if(coleccion.length==5){\n                        //                                 setvacio(true)\n                        //                         }else{\n                        //                                 setvacio(false)\n                        //                         }\n        \n                        //         }\n                                \n                        //         )               \n                        // }else{\n                           \n                        //          let nuevalista=[]\n                        //             await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n                                        \n                                       \n                        //                 nuevalista=valor.docs.map(doc=>{\n                                               \n                        //                                           return{\n                        //                                                 id:doc.id,\n                        //                                                 ...doc.data()\n                        //                                             }\n                                                \n                        //                 })\n                                       \n                        //                 if(nuevalista.length==5){\n                        //                         setvacio(true)\n                        //                 }else{\n                        //                         setvacio(false)\n                        //                 }\n        \n                        //                 if(nuevalista.length==0){\n                        //                         setultimoDocumento(0)\n                        //                 }else{\n                        //                 setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                        //                  }\n                               \n        \n                        //            })\n        \n        \n                                   \n                               \n                        //            console.log(\"paso por aca \")\n                        //         setlistapaper(nuevalista)   \n        \n        \n        \n        \n        \n                      \n                        // }\n                       \n                       \n                \n        \n                } catch (error) {\n                        console.log(error)\n                }\n\n\n                \n                setcargando(false)\n\n\n\n}\n\n\n\nconst funcionCorazondos=(valor)=>{\n\n        if(valor.likes>0){\n            return true       \n        }else{\n           return false\n        }\n\n\n\n}\n\n\n\n\nconst pedirpaper=()=>{\n\n//buscar si  ahi un paper en especifico \n//\nsetcargando(true)\n\nconst {papermatch}=props.paperid\n\nif(papermatch){\n\n        buscarPorId(papermatch)\n\n}else{\n\n  // LLAMAR A LOS PAPER\n\n  \n   \n  listadepaper(props.recientes,props.valorados)\n\n}\n\n}\n\n\n\n\n    \n\n\nconst borrar=(e)=>{\n\n\n      \n\n        Swal.fire({\n                title: '¿Esta seguro que desea borrar el siguiente registro?',\n                text:`${e.titulo}`,\n                showDenyButton: true,\n                confirmButtonColor: '#21cbce',                    \n                confirmButtonText: `Borrar`,\n                denyButtonText: `Cancelar`,\n              }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n\n\n                console.log(e.id)\n                if (result.isConfirmed) {\n\n                                        \n                                firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                        \n                                     \n\n\n                                        let nuevaLista=[]\n                                        \n                                        listapaper.map((valor)=>{\n                                                      \n                                                      \n                                                        if(valor.id!=e.id){\n                                                                console.log(valor)\n                                                                nuevaLista.push(valor)\n                                                        }\n\n                                        })\n                                       \n                                     \n                                        //pedirpaper()\n                                    \n                                       \n\n                                }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n\n\n                                e.etiquetas.map( valor=>{\n \n                                        firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                             //  console.log(\"Document successfully deleted!\");\n\n\n\n                                              let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                        return{...doc.data()}\n                                              \n                                              })\n\n                                                console.log(soloTag)\n                                                let nuevoObjeto={  ...soloTag,\n                                                        contar:soloTag.contar-1}\n\n                                                  console.log(nuevoObjeto)      \n\n                                                firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                        }).catch((error) => {\n                                            console.error(\"Error removing document: \", error);\n                                        });\n                                       \n        \n                                    })\n\n                              var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)    \n\n\n                              var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)    \n\n                              borrarArchivo.delete().then(function() {\n                                      //console.log(\"borrado\")\n                                // File deleted successfully\n                              }).catch(function(error) {\n                                      //console.log(error)\n                                // Uh-oh, an error occurred!\n                              });          \n\n                                        if(e.imagen!=null){ borrarImagen.delete().then(function() {\n                                                        //console.log(\"borrado\")\n                                                // File deleted successfully\n                                                }).catch(function(error) {\n                                                        console.log(error)\n                                                // Uh-oh, an error occurred!\n                                                }); }  \n\n\n                  Swal.fire({title:'Borrado!', confirmButtonColor:'#21cbce',icon: 'success'}).then(()=>{\n                          pedirpaper()\n                  })\n                } else if (result.isDenied) {\n                \n                }\n              })\n\n            \n}\n\n\n\n\n useEffect(() => {\n\n// //buscar si  ahi un paper en especifico \n// //\n setcargando(true)\n\n// const {papermatch}=props.paperid\n\n// if(papermatch){\n\n//         buscarPorId(papermatch)\n\n// }else{\n\n//   // LLAMAR A LOS PAPER\n\n  \n        \n//   listadepaper(props.recientes,props.valorados)\n\n// }\n\n                if(props.busqueda!=undefined){\n                        const texto_busqueda=props.busqueda.buscado\n                        buscarTexto(texto_busqueda,props.recientes,props.valorados)        \n                }\n                // else{\n                        //  pedirpaper()\n                        //  }\n\n                //     console.log(listapaper)\n                //     setlistapaper([])\n\n }, [props.recientes,props.paperid,props.busqueda])\n\n\n\n\n const funcionCorazon=(valor)=>{\n       \n        let votos_usuarios=[]\n\n        if(valor.haVotado==undefined){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n        votos_usuarios=valor.haVotado\n        if(votos_usuarios.length==0){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n                \n                if(usuario!=undefined){\n                if(votos_usuarios.includes(usuario.uid)){\n                        return true\n                }else{\n                        return false\n                }}\n\n        }\n}\n\n       \n\n }\n\n\n\n  const pedirMas=async()=>{\n                setcargandodos(true)\n                const recientes=props.recientes\n                const valorados=props.valorados\n                const paperRef=firebase.db.collection(\"paper\")\n\n\n        try {\n           \n                if(recientes){\n\n\n\n                               \n                        return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                        {\n                           //     console.log(doc)\n                          var valoradosOrdenados = await paperRef.orderBy(\"subida\",\"desc\").startAfter(doc).limit(5).get()\n\n                                if(valoradosOrdenados.size!=0){            \n                                        \n                             //      console.log(valoradosOrdenados)     \n                                 const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                 setultimoDocumento(lista[lista.length-1].id)\n                                 setlistapaper((listapaper)=>[...listapaper,...lista])       \n                                 setcargandodos(false)\n                        }else{\n                                                \n                                setvacio(false)  \n                                setcargandodos(false)\n                          }\n\n                        }\n                        )\n\n\n\n                      \n                 \n        \n                }else{ \n                      \n        \n                        if(valorados){\n                            \n\n\n                                // const valoradosRef=firebase.db.collection(\"paper\")\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"likes\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){            \n                                                \n                                           console.log(valoradosOrdenados)     \n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista]) \n                                         setcargandodos(false)      \n\n                                }else{\n                                                        \n                                        setvacio(false)  \n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n                                \n                                // firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimoDocumento).limit(5).get().then((coleccion)=>\n                                // {\n\n\n                                //                 console.log(\"dentro de la coleccion \")\n\n                                //             if(coleccion.size!=0){            \n                                                        \n                                //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                //                         setultimoDocumento(lista[lista.length-1].likes)\n                                //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                        \n                                //                 }else{\n                                                        \n                                //                       setvacio(true)  \n                                //                 }\n                                // }\n                                \n                                // )\n                        }else{\n\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        //console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"id\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){            \n                                                \n                                          // console.log(valoradosOrdenados)     \n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])    \n                                         setcargandodos(false)   \n\n                                }else{\n                                                        \n                                        setvacio(false)  \n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n\n\n\n\n\n                                // comentar \n                        //       firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimoDocumento).limit(1).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){            \n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1])\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                        \n                        //                         }else{\n                                                        \n                        //                               setvacio(true)  \n                        //                         }\n                        //         }\n                                \n                        //         )\n                        }\n                       \n                       \n                }\n        \n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n\n  }\n\n\n// actualizar etiquetas \n\n const updateTag=()=>\n {\n\n\n }\n\n\n // buscar por id del paper \n\n  const buscarPorId=async(id)=>{\n//  alert(id)\n  var variable=await firebase.db.collection(\"paper\").doc(id)\n //console.log(variable)\n \n    \n variable.get().then((doc) => {\n        // Document was found in the cache. If no cached document exists,\n        // an error will be returned to the 'catch' block below.\n       // console.log(\"Cached document data:\", doc.data());\n        setlistapaper([doc.data()])\n\n        setcargando(false)\n        setvacio(false)\n\n    }).catch((error) => {\n        console.log(\"Error getting cached document:\", error);\n    });\n    \n\n\n  }\n\n \n  const buscarChips=(valor)=>{\n\n\n        history.push(`/tag/${valor.id}`)\n      \n  }      \n\n\n\nconst megusta=(valor)=>{\n       \n      \n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n\n       \n          \n          console.log(valor.haVotado)\n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n\n     if(antiguoHaVotado.includes(usuario.uid)){ \n             console.log(antiguoHaVotado)\n\n        antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                return obj!==usuario.uid        \n        })\n        valor.likes=valor.likes-1\n\n        let  nuevoValor={\n                ...valor,\n                 likes:valor.likes,\n                haVotado:antiguoHaVotado\n        }\n\n\n        firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n\n        // armar de nuevo el arreglo con el valor \n\n         armararreglo(nuevoValor)\n\n       // mapear etiquetas \n\n        valor.etiquetas.map(valordos=>{\n                firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                       haVotado:antiguoHaVotado     \n\n                })\n        })\n\n        \n         //setpaper({...valor,likes:valor.likes})\n        // actualizar la etiquetas\n        \n        \n\n\n\n              \n\n     }else{ \n    \n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     valor.likes=valor.likes+1   \n\n\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\nfirebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas \n\n      valor.etiquetas.map(valordos=>{\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado  \n\n        })\n})          \n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n   \n      }\n      console.log(\"final\")\n}\n\nconst armararreglo=(nuevoValor)=>{\n\n\n                 let   nuevalista=listapaper.map(valor=>{\n                                 \n                                if (nuevoValor.id==valor.id){\n                                        \n                                        return{\n                                                ...nuevoValor\n                                        }                   \n                                }else{\n\n                                        return{ ...valor}\n                                }\n\n\n\n                 })\n\n\n                 console.log(nuevalista)\n                 setlistapaper(nuevalista)\n\n\n}\n\n\nconst megustaSinValidarUsuario=(valor)=>{\n    \n\n        if(valor.click){    \n          valor.likes=valor.likes-1\n          valor.click=false\n     }else{\n          valor.likes=valor.likes+1\n          valor.click=true\n     }\n     \n          const nuevoHaVotado = [];\n          let  nuevoValor={\n             ...valor,\n              likes:valor.likes,\n             haVotado:nuevoHaVotado\n             }\n     \n     \n     \n            //guarda datos en el paper\n            firebase.db.collection(\"paper\").doc(valor.id).update({\n             ...valor,\n             likes:valor.likes,\n             haVotado:nuevoHaVotado\n     \n     })\n     \n           // mapear etiquetas\n           valor.etiquetas.map(valordos=>{\n     \n             //guarda datos  en las etiquetas\n             firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                     ...valor,\n                     likes:valor.likes,\n                     haVotado:nuevoHaVotado\n     \n             })\n     })\n     \n     armararreglo(nuevoValor)\n          //setpaper({...valor,likes:valor.likes})\n     \n          // }\n           console.log(\"final\")\n     }\n\n\n\n\n    return (\n\n\n\n// <Button onClick={()=>{pedirMas()}} >\n//                             ver mas\n// </Button> \n\n\n\n\n\n        <div  className={clases.margen}>\n\n\n                <div className={clases.divTituloGeneral}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                                {tituloGeneral}\n                        </Typography>\n                </div>\n\n\n                <Grid container>\n                    <Grid  xs={12}>\n                            {                            \n                            cargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                           { listapaper.length==0 ?\n                              <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>          \n                           \n\n                           :\n                            listapaper.map((valor)=>(\n\n                                        <Paper key={valor.id} className={clases.caja} elevation={3}>\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={4} >\n                                                        <div  >\n\n                                                             {valor.imagen==null?\n\n                                                              <div className={clases.divFoto}>\n                                                                        < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n                                                                      \n                                                              </div> :         \n                                                           <div   className={clases.divImagen} style={{\n                                                          backgroundImage:`url(${valor.imagen})`,\n                                                         \n                                                        }} >\n\n                                                                \n                                                                </div>\n\n                                                             }   \n                                                        </div>\n                                                </Grid>\n\n\n                                                <Grid  xs={12} sm={12} md={6}>\n                                                   <div className={clases.divTexto}>             \n\n                                                <Typography variant=\"h5\" className={clases.titulo} >\n                                                                {valor.titulo}             \n                                                </Typography>\n                                              \n                                                        <Typography className={clases.fecha} variant=\"subtitle2\">\n                                                                {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n                                                </Typography>\n\n\n                                                \n                                                \n\n                                                <Typography variant=\"body2\" className={clases.resumen}>\n                                                        {valor.resumen}\n                                                </Typography>\n\n                                                <Typography variant=\"subtitle1\">\n\n                                                        {valor.etiquetas.map((valor)=>(\n                                                //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>   \n                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                //    </Link>     \n                                                                        ))}\n\n\n                                                </Typography>\n\n                                                </div>             \n\n                                                </Grid>\n                                        \n                                                <Grid xs={12} sm={12} md={2}>\n\n                                                 <div className={clases.cajaMeGusta}>\n                                                                 <Typography className={clases.centrarComponente} variant=\"subtitle1\" >\n\n                                                                <Button onClick={()=>megustaSinValidarUsuario(valor)}\n                                                                className={clases.botonLikes}\n                                                                startIcon={\n\n                                                                funcionCorazondos(valor)?\n                                                                // <CorazonLleno></CorazonLleno>\n                                                                <>\n                                                                <img height=\"25\" src={CorazonLleno}></img>\n                                                                \n                                                                </>\n                                                                :\n\n                                                                //  <Corazon></Corazon>\n                                                                <>\n                                                                <img  height=\"25\"  src={Corazon}></img>\n                                                               \n                                                                </>\n\n                                                               }\n                                                                >\n\n                                                                        {valor.likes}\n                                                                </Button>\n\n                                                                <Typography className={clases.textUpVote} variant='subtitle2' >\n                                                                 upvote\n                                                                 </Typography>\n                                                                \n\n                                                </Typography>\n                                                </div>\n                                               \n                                               \n                                               \n                                               <div className={clases.botonPdf}>\n                                                <Typography  className={clases.centrarComponente} variant=\"subtitle1\"\n                                                          >\n\n\n\n\n                                                <a href={valor.pdf==null?\n                                                    valor.link:valor.pdf\n                                                }  style={{textDecoration:\"none\"}} target=\"_blank\">\n                                                <Button  className=\"botoneditar\" variant=\"contained\"\n\n\n                                                >\n\n                                                        get it\n                                                </Button>\n\n                                                </a>\n\n                                                </Typography>\n                                                </div>        \n\n           \n\n                                              {usuario==null?\n\n\n                                                      \n                                                        <div></div>\n                                                        :\n                                        \n\n                                                        usuario.administrador?\n\n                                                        <div className={clases.diveditarborrar}>          \n\n                                                        <Grid container>\n                                                                \n                                                                 <Grid xs={6}>\n                                                                \n                                                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                                                                <Link to={`/editarpaper/${valor.id}`}>\n                                                                                        <IconButton  variant=\"outlined\" color=\"primary\">\n                                                                                        <Lapiz></Lapiz>\n                                                                                        </IconButton>\n                                                                                </Link>\n        \n                                                                        </Typography>\n                                                                </Grid>\n                                                                <Grid  xs={6}>\n                                                                        <Typography variant=\"subtitle1\" align=\"center\">\n        \n                                                                        <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                                                                                <Basurero></Basurero>    \n                                                                        </IconButton>\n        \n                                                                        </Typography>\n                                                                </Grid>\n                                                        </Grid>\n                                             </div>                              \n        \n                                                 :\n                                                 <div></div>\n\n                                                        }  \n       </Grid>\n\n\n\n                                        </Grid>\n\n                                        \n\n\n\n\n                                        </Paper>\n                            ))\n                         }\n\n                            {cargandodos?\n\n<div className={clases.divCircular} >\n<CircularProgress className={clases.circular}></CircularProgress>\n</div>\n\n\n\n:\n\nvacio==true &&\n\n        <Typography align=\"center\">\n        <Button \n                endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                variant =\"contained\"\n                color=\"primary\"\n        \n        onClick={()=>{\n                pedirMas()\n        }} >\n        ver mas\n\n                </Button> \n</Typography>   }                     \n\n\n\n\n\n                          \n                            </div>\n                            }\n                               \n                              \n                      \n                        \n                     </Grid>             \n\n\n                </Grid>\n\n\n        </div>\n   \n )\n}\n\nexport default Caja\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Usuarios.jsx",["664","665","666","667","668","669","670","671","672"],"import React,{useEffect,useState} from 'react'\nimport { Grid,Typography, Avatar, makeStyles,CircularProgress,Button } from '@material-ui/core'\nimport firebase from '../firebase/firebase'\nimport userImagen from \"../imagen/user.png\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nconst estilos=makeStyles((theme)=>({\n\n\n    root:{\n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n    },\n\n\n\n    tituloGeneral:{\n\n        fontWeight:\"700\",\n        fontFamily:\"Lato\",\n        fontSize:\"27px\"\n        },                     \n        divTituloGeneral:{\n                margin:\"55px auto\",\n                width:\"85vw\"\n        },\n        textNoDisponible:{\n\n\n            fontFamily:\"Nunito\",\n            color:\"#808080\"\n\n    },\n\n    divCircular:{\n        marginTop:\"100px\",\n        width:\"inherit\"\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n\n\n}))\n\n\n\n\nconst Usuarios = () => {\n\n const clases=estilos()   \n\n // solicitud maxima de usarios \nconst usuariosSolicitados=3\n//usuarios mostrados\nconst usuariosMostrados=2\n\nconst [usuarios, setusuarios] = useState([])\nconst [ultimo, setultimo] = useState()\nconst [vacio, setvacio] = useState(false)\nconst usuariosRef=firebase.db.collection(\"usuarios\")\n\nconst [cargando, setcargando] = useState(false)\n\n\n    const listAllUsers =async()=> {\n    \n        \n    // crear nueva lista \n        let  nuevalista=[]\n        await usuariosRef.orderBy(\"nombre\",\"asc\").get().then(doc=>{\n            //console.log(doc.docs)\n            //   reducir a uno la lista \n \n            //    for(let i=0;i<)    \n                let tamaño=doc.docs.length\n               \n                for(let i=0;i<tamaño;i++){\n\n                    console.log(doc.docs[i].data())\n                    nuevalista.push(doc.docs[i].data())\n                }\n\n                //setultimo(doc.docs[usuariosMostrados-1].id)\n    \n                if(tamaño==usuariosSolicitados){\n                            setvacio(false)\n                    }else{\n                            setvacio(true)\n                    } \n        })\n         setusuarios(nuevalista)\n         setcargando(false)   \n\n    }\n    \n\n    const pedirMas =async()=> {\n    \n        try{\n                        // crear nueva lista \n                            let  nuevalista=[]\n\n\n                            await usuariosRef.doc(ultimo).get().then(async(doc)=>{\n                                  \n                            await usuariosRef.orderBy(\"nombre\",\"asc\").startAfter(doc).get().then(doc=>{\n                                //console.log(doc.docs)\n                                //   reducir a uno la lista \n                                console.log(\"paso por aca\")\n                                //    for(let i=0;i<)    \n                                    let tamaño=doc.docs.length\n\n                                console.log(tamaño)\n                               \n                                console.log(doc.docs[0].data())\n                                if(tamaño==usuariosSolicitados){\n                                    for(let i=0;i<tamaño-1;i++){\n                                        console.log(i)\n                                        console.log(doc.docs[i].data())\n                                        nuevalista.push(doc.docs[i].data())\n                                            \n                                    }\n                                }else{\n                                    for(let i=0;i<=tamaño-1;i++){\n                                        console.log(i)\n                                        console.log(doc.docs[i].data())\n                                        nuevalista.push(doc.docs[i].data())\n                                            \n                                    }\n                                }\n\n\n\n                                    // insertar el ultimos\n                                \n                                    setultimo(doc.docs[usuariosMostrados-1].id)\n                    \n                                    if(tamaño==usuariosSolicitados){\n                                                setvacio(false)\n                                        }else{\n                                                setvacio(true)\n                                        } \n                            })\n\n                             })\n                            setusuarios((usuarios)=>[...usuarios,...nuevalista])\n                            setcargando(false)   \n\n\n                        }catch(error){console.log(error)}\n                    \n        }\n        \n\n    useEffect(() => {\n           // Start listing users from the beginning, 1000 at a time.\n      setcargando(true)     \n      listAllUsers();\n\n    }, [])\n\n\n\n\n\n\n\n    return (\n       \n        <Grid className={clases.root} container>\n            <Grid xs={12} md={1}>\n\n            </Grid>\n            <Grid xs={12} md={10}>\n                        \n    \n\n\n                    <div className={clases.divTituloGeneral}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                                Lista de Usuarios\n                        </Typography>\n                </div>\n\n\n\n\n\n                    <div>\n\n                   \n                                {\n                                cargando?\n                                <div className={clases.divCircular} >\n                                <CircularProgress className={clases.circular}></CircularProgress>\n                                </div> \n                                :\n                                \n                                \n                                usuarios.length ?\n                                   \n                                   <>\n                                       {\n                                    usuarios.map(doc=>(\n                                        \n                                     \n                                        <Grid container>\n                                            \n                                                    <Grid xs={12} md={4}>\n                                                    <div >\n                                                        {doc.photoURL==null?\n                                                             \n                                                             <Avatar style={{margin:\"auto\"}} src={userImagen}></Avatar>\n                                                             :\n                                                   \n                                                             <Avatar  style={{margin:\"auto\"}} src={`${doc.photoURL}`}></Avatar>\n\n                                                        }                                        \n                                                    \n                                                    </div>\n                                            </Grid>\n                                            <Grid xs={12} md={4}>\n                                                <Typography align=\"center\">\n                                                    {doc.nombre}\n                                                </Typography>    \n                                            </Grid>\n\n                                            <Grid xs={12} md={4}>\n                                                <Typography align=\"center\">\n                                                    {doc.correo}\n                                                 </Typography>   \n                                            </Grid>\n\n                                               <Grid xs={12}>\n                                                    <hr></hr>\n                                                </Grid>            \n                                          \n                                        </Grid>\n                                    )\n                                  )   \n                                  \n                                  }\n\n\n\n{/*                                                                     \n                                {vacio==false &&\n\n                                <Typography align=\"center\">\n                                <Button \n                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                        variant =\"contained\"\n                                        color=\"primary\"\n\n                                onClick={()=>{\n                                    pedirMas()\n                                }} >\n                                ver mas\n\n                                        </Button> \n                                </Typography>   }                      */}\n\n\n\n\n                                  </> \n                                \n                                \n                                :\n\n                                <Grid xs={12}>\n                                        <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>          \n                           \n\n                                 </Grid>\n                                \n                                \n                                }\n\n\n\n\n\n                    </div>\n\n\n            </Grid>\n\n            <Grid xs={12} md={1}>\n\n            </Grid>\n\n\n        </Grid>\n    )\n}\n\nexport default Usuarios\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/FuncionesFirebase.js",["673","674","675","676","677","678","679","680","681","682"],"\nimport Firebase from \"../firebase/firebase\"\nimport Swal from \"sweetalert2\"\nimport moment from \"moment\"\n\n\n\n\nexport default {\n\n\n\n        async IngresarComentario(Comentario){\n       await Firebase.db.collection(\"Comentarios\").add(Comentario).then(()=>\n         Swal.fire({     \n            icon: 'success',\n            title: '¡Muchas Gracias!',\n            showConfirmButton: false,\n            timer: 1500\n          })\n         )\n\n        }\n        ,\n        async IngresarColaboracion(Colaboracion){\n\n\n          await Firebase.db.collection(\"Colaboracion\").add(Colaboracion).then(()=>\n          Swal.fire({     \n             icon: 'success',\n             title: '¡Muchas Gracias!',\n             showConfirmButton: false,\n             timer: 1500\n           })\n          )\n \n         },\n\n        async ListarComentarios(){\n          let listatres=[]\n           await Firebase.db.collection(\"Comentarios\").get().then((collection)=>{   \n            listatres=collection.docs.map(doc=>{\n                      return doc.data()\n                  })\n            \n           })\n         \n           return listatres\n        },\n      // pedir etiquetas \n      async ListarEtiquetas (){\n        let lista=await Firebase.db.collection(\"etiquetas\").orderBy('descripcion').get().then(doc=>{\n              let listados= doc.docs.map(etiqueta => {\n                return {\n\n                  id:etiqueta.id,\n                  ...etiqueta.data()\n                    }\n              })   \n            return listados;\n                  })\n        return lista\n      }\n        ,\n      async CrearInformacion(Info,Paper){\n        //armar arreglos etiquetas \n        let etiquetas=[]\n        etiquetas=Paper.etiquetas\n        let prueba= await Firebase.db.collection(\"Informacion\").doc(Info.id).set({...Info})\n        let pruebados= await Firebase.db.collection(\"paper\").doc(Info.id).update({info:true})\n        etiquetas.map(async(doc)=>{\n          let pruebaTres= await Firebase.db.collection(\"etiquetas\").doc(doc.id).collection('paper').doc(Info.id).update({info:true})\n        })\n        return prueba\n      },\n      async BorrarInformacion(Info,Paper){\n        let etiquetas=[]\n        etiquetas=Paper.etiquetas\n        let pruebados= await Firebase.db.collection(\"paper\").doc(Info.id).update({info:false})\n        //let pruebados= await Firebase.db.collection(\"paper\").doc(Info.id).update({info:true})\n        etiquetas.map(async(doc)=>{\n          let pruebaTres= await Firebase.db.collection(\"etiquetas\").doc(doc.id).collection('paper').doc(Info.id).update({info:false})\n        }) \n        await Firebase.db.collection(\"Informacion\").doc(Info.id).delete().then(() => {\n        }).catch((error) => {\n                console.error(\"Error removing document: \", error);\n         });\n\n      },\n\n      async subirImagen(id,imagen){\n        // prueba de usuario \n        // subir  imagen\n            if(imagen.imagen!==null){\n\n\n                    if(imagen.imagen instanceof File){\n                        const imgRef=await Firebase.storage.ref().child(\"Informacion\").child(id)\n                        await imgRef.put(imagen.imagen)\n                        const imgURL=await imgRef.getDownloadURL() \n                        return imgURL\n                    }else{\n                        return imagen.file \n                    }\n            }else{\n               \n             return null\n            }\n\n  }, \n\n  async retornarInformacion(id){\n\n      let informacion =await Firebase.db.collection('Informacion').doc(id).get().then((doc)=>{\n        if(doc.exists){\n          console.log(\"Document data:\", doc.data());\n          return doc.data()\n      }else{\n          console.log(\"No such document!\");\n      }\n      })\n      return informacion\n  },\n  async retornarPaper(id){\n\n    let informacion =await Firebase.db.collection('paper').doc(id).get().then((doc)=>{\n      if(doc.exists){\n        console.log(\"Document data:\", doc.data());\n        return doc.data()\n    }else{\n        console.log(\"No such document!\");\n    }\n    })\n    return informacion\n\n  },\n  async descargarImagen(id){\n\n        let retornar=null\n\n        var pathReference =await Firebase.storage.ref('Informacion/126906762_110192684249055_224218762780413843_o.jpg');\n        console.log(pathReference)\n    let ref=await Firebase.storage.ref().child(\"Informacion\").child(id)\n\n    \n    pathReference.getDownloadURL().then(function(url) {\n \n        var xhr = new XMLHttpRequest();\n  xhr.responseType = 'blob';\n  xhr.onload = function(event) {\n    var blob = xhr.response;\n    console.log(blob)\n  };\n  xhr.open('GET', url);\n  xhr.send();\n  var img = document.getElementById('myimg');\n  img.src = url;\n\n\n        retornar=url\n\n    }).catch(function(error) {\n\n        console.log(error)\n\n    })\n\n\n    return retornar\n\n\n\n  },\n  // admin pagina why\n  // a)mostrar \n//1. Pedir cabeza \n  async pedirCabeza(){\n    let consulta=await Firebase.db.collection('PagWhy').doc(\"Cabeza\").get().then(doc=>{\n        if(doc.exists){\n          return doc.data()\n        }else{\n          console.log(\"el documento no existe\")\n        }      \n      })\n      return consulta\n  },\n//2. Pedir Componente Uno\nasync pedirComponenteUno(){\n   let consulta=await Firebase.db.collection('PagWhy').doc(\"ComponenteUno\").get().then(doc=>{\n        if(doc.exists){\n          return doc.data()\n        } else{\n          console.log(\"el documento no existe\")\n        }\n   })\n   return consulta\n},\n//3. Pedir Compenente Tres \nasync pedirComponenteDos(){\n  let consulta=await Firebase.db.collection('PagWhy').doc(\"ComponenteDos\").get().then(doc=>{\n      if(doc.exists){\n        return doc.data()\n      }else{\n        console.log(\"el documento no existe\")\n      }\n  })\n  return consulta\n},\n//4. Pedir Componente Tres \nasync pedirComponenterTres(){\n  let consulta=await Firebase.db.collection('PagWhy').doc(\"ComponenteTres\").get().then(doc=>{\n     if(doc.exists){\n       return doc.data()\n     }else{\n       console.log(\"el documento no existe\")\n     }\n\n  })\n  return consulta \n},\n//b) editar componentes\n//b.1)editar Cabeza \nasync editarCabeza(Cabeza){\n  let consulta=await Firebase.db.collection(\"PagWhy\").doc(\"Cabeza\").set({...Cabeza})\n  return consulta\n},\n//b.2)editar Componente Uno \nasync editarComponenteUno(ComponenteUno){\n let consulta=await Firebase.db.collection(\"PagWhy\").doc(\"ComponenteUno\").set({...ComponenteUno})\n  return consulta\n},\n//b.3)editar Componente dos \nasync editarComponenteDos(ComponenteDos){\n  let consulta=await Firebase.db.collection(\"PagWhy\").doc(\"ComponenteDos\").set({...ComponenteDos})\n  return consulta\n},\n//b.4)editar Componente tres \nasync editarComponenteTres(ComponenteTres){\n  let consulta=await Firebase.db.collection(\"PagWhy\").doc(\"ComponenteTres\").set({...ComponenteTres})\n  return consulta \n},\n\n//c)subir imagen \n//c.1) subir imagen de los componentes \nasync subirImagenWhy(id,imagen){\n      if(imagen.imagen!==null){\n        if(imagen.imagen instanceof File)\n        {     \n              const imgRef=Firebase.storage.ref().child(\"imagenWhy\").child(id) \n              await imgRef.put(imagen.imagen)\n              const imgURL=await imgRef.getDownloadURL()\n              return imgURL\n        }\n    }\n\n},\nasync pedirTitulo (){\n\n const consulta =await Firebase.db.collection('Paginas').doc(\"Titulo\").get().then((doc)=>{\n      if(doc.exists){\n        return doc.data()\n      }else{\n        return \"la informacion no existe\"\n      }} )  \n      return consulta\n},\nasync  guardarTitulo (Titulo){\n\n  const consulta = await Firebase.db.collection('Paginas').doc('Titulo').set({...Titulo})\n  return consulta\n},\nasync buscarPorEtiquetas(Tag){\n  try {\n    const objeto ={id:Tag.id,descripcion:Tag.descripcion}\n    const consulta = await Firebase.db.collection(\"paper\")\n    .where(\"etiquetas\", \"array-contains\",objeto).get().then(doc=>{\n         let query=doc.docs.map(resp=>{   \n                return resp.data()\n         })\n          return query\n    })\n    return consulta\n  } catch (error) {\n    console.log(error)\n  }\n \n},\n\nasync guardarTopicoInformacion(TopicoInformacion){\n let mensaje=''\n  try {\n const consulta= await Firebase.db.collection('TopicoInformacion').add(TopicoInformacion)\n mensaje='Informacion guardada'\n } catch (error) {\n   mensaje='Error al guardar'\n }\n\n},\n\nasync guardarRegion(Region){\n let mensaje=''\n let state=null\n  try {\n const consulta= await Firebase.db.collection('Region').add(Region)\n   state={...Region,id:consulta.id}\n mensaje='Informacion guardada'\n \n } catch (error) {\n   mensaje='Error al guardar'\n }\n return state\n},\nasync llamarTopicos (){\n  let lista =[]\n  try {\n    await Firebase.db.collection('TopicoInformacion').get().then((doc)=>{\n\n      lista= doc.docs.map((doc)=>{\n          return {...doc.data(),id:doc.id}\n      })\n     \n    })\n    console.log(lista)\n    return lista\n    \n  } catch (error) {\n\n    console.log(error)\n    \n  }\n} ,\nasync llamarRegion (){\n  let lista =[]\n  try {\n    await Firebase.db.collection('Region').get().then(doc=>{\n      lista = doc.docs.map(doc=>{\n        return {...doc.data(),id:doc.id}\n      })\n    })\n    return lista\n    \n  } catch (error) {\n    console.log(error)\n  }\n}, \nasync noRepeatRegion (region){\n  let existe=false \n  let lista=[]\n  try {\n    console.log(region.descripcion.trim())\n    await Firebase.db.collection(\"Region\").where(\"descripcion\", \"==\", region.descripcion.trim(  )).get().then(doc=>{\n      lista = doc.docs.map(doc=>{\n        return doc.data()\n      })\n      if(lista.length>0){\n        existe=true\n      }\n    })\n  } catch (error) { \n    console.log(error)\n  }\n  return existe\n},\n\nasync noRepeatInfo (region){\n  let existe=false \n  let lista=[]\n  try {\n    console.log(region.descripcion.trim())\n    await Firebase.db.collection(\"TopicoInformacion\").where(\"descripcion\", \"==\", region.descripcion.trim(  )).get().then(doc=>{\n      lista = doc.docs.map(doc=>{\n        return doc.data()\n      })\n      console.log(lista)\n      if(lista.length>0){\n        existe=true\n      }\n    })\n  } catch (error) { \n    console.log(error)\n  }\n  return existe\n},\nasync editarTopicoInformacion(state){\n  let editado=false\n  try {\n    await Firebase.db.collection('TopicoInformacion').doc(state.id).update(state);\n    editado=true\n  } catch (error) {\n    console.log(error)\n    \n  }\n  return editado\n},\nasync borrarInfo(state){\n  let borrado= false\n  try {\n    await Firebase.db.collection('TopicoInformacion').doc(state.id).delete()\n    borrado=true\n  } catch (error) {\n    console.log(error)\n  }\n  return borrado\n},\nasync editarRegion(state){\n  let editado=false\n  try {\n    await Firebase.db.collection('Region').doc(state.id).update(state);\n    editado=true\n  } catch (error) {\n    console.log(error)\n    \n  }\n  return editado\n},\nasync borrarRegion(state){\n  let borrado= false\n  try {\n    await Firebase.db.collection('Region').doc(state.id).delete()\n    borrado=true\n  } catch (error) {\n    console.log(error)\n  }\n  return borrado\n}\n// retornar etiqueta  \n,\nasync retornarEtiqueta(id){\n  \n  const etiqueta= await Firebase.db.collection('etiquetas').doc(id).get().then(doc=>{\n   console.log('aqui va el doc')\n     return({...doc.data(),id:doc.id})\n  })\n  console.log(etiqueta)\n  return etiqueta\n} ,\nasync retornarEtiquetaDescripcion(descripcion){\n  let lista=[]\n  console.log(descripcion)\n  const etiqueta= await Firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", descripcion).get().then(doc=>{\n  lista= doc.docs.map(tag=>{\n     return {...tag.data(),id:tag.id}\n   })\n   return lista\n  })\n  console.log(etiqueta)\n  return etiqueta[0]\n} \n// borrar paper de la base de datos \n,\nasync borrarPaper (paper){\ntry {\n  await Firebase.db.collection('paper').doc(paper.id).delete().then(()=>{\n    const etiquetas=paper.etiquetas\n    etiquetas.map(async(doc)=>{\n      await Firebase.db.collection('etiquetas').doc(doc.id).collection('paper').doc(paper.id).delete().then(()=>{console.log('borrado')})\n    })\n  })\n} catch (error) {\n  console.log(error)\n}\n},\nasync retornarTodosPaper(){\n  let lista=[]\n  try {\n    await Firebase.db.collection('paper').get().then((doc)=>{\n      lista=doc.docs.map((doc)=>{\n          return {...doc.data(),id:doc.id}\n      })\n    })\n    \n  } catch (error) {\n    console.log(error)\n  }\n  return lista\n}\n\n\n\n\n}   ","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/index.js",[],["683","684"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/context.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/ListarComentarios.jsx",["685","686","687","688","689","690","691","692","693","694","695","696","697","698"],"import React,{useEffect,useState} from 'react'\nimport { Grid,Typography,Button,Avatar, makeStyles,CircularProgress,Paper } from '@material-ui/core'\nimport Comentario from '../Componetes/Comentario'\nimport FuncionesGenerales from \"../Funciones/FuncionesFirebase\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Firebase from '../firebase/firebase'\n\nconst estilos=makeStyles((theme=>({\n    root:{\n      \n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n            \n\n    },\n\n    \n    tituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n    }\n,\ndivTituloGeneral:{\n    margin:\"55px auto\",\n    \n},\ndivCircular:{\n    marginTop:\"100px\"\n\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n\n    textNoDisponible:{\n\n\n        fontFamily:\"Nunito\",\n        color:\"#808080\"\n\n},\n})))\n\n\n\nconst ListarComentarios = () => {\n\n    const clases=estilos()\n\n    // solicitud maxima  de comentarios \n     const comentariosSolicitados = 3\n     // comentorios mostrados \n     const comentariosMostrados=2\n    // referencia base de datos \n    const  comentariosRef=Firebase.db.collection('Comentarios')\n\n    const [comentarios, setcomentarios] = useState([])\n    const [cargando, setcargando] = useState(false)\n    const [ultimo,setUltimo]=useState()\n    const [vacio,setVacio]=useState(false)\n\n\n    useEffect(async () => {\n\n        setcargando(true)\n        pedirComentarios()\n\n\n    }, [])\n\n\n    const pedirComentarios=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    const pedirMas=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').startAfter(ultimo).limit(comentariosSolicitados).get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    return (\n        <div className={clases.root} >\n\n<Grid  container>\n\n<Grid xs=\"1\"  md=\"2\"> \n\n</Grid>\n<Grid xs=\"10\" md=\"8\">\n        <div className={clases.divTituloGeneral}>\n                    <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                            Feedback\n                    </Typography>\n        </div>\n\n\n\n\n        {                            \n                cargando?\n                <div className={clases.divCircular} >\n                <CircularProgress className={clases.circular}></CircularProgress>\n            </div>\n            :<div>\n               { comentarios.length==0 ?\n                  <Typography className={clases.\n                  textNoDisponible\n                   } align=\"center\" variant=\"h4\">\n                            No hay registros\n                  </Typography>          \n               \n\n                    :\n\n                    <div>\n\n                                {\n                                    comentarios.map((doc)=>(\n                                        <Comentario Comentario={doc}> </Comentario>\n                                    ))\n                                }\n\n                            {/* {vacio==false&&\n\n                                    <Typography align=\"center\">        \n                                    <Button variant='contained'\n                                    color=\"primary\"\n                                    endIcon={<ExpandMoreIcon/>}       \n                                    onClick={()=>{pedirMas()}}\n                                    >\n                                    ver mas      \n                                    </Button>       \n                                    </Typography>        \n\n\n                            }\n                       */}\n                    </div>\n                 \n        \n            }\n            </div>\n        }\n\n</Grid>\n\n<Grid xs=\"1\" md=\"2\">\n    \n</Grid>\n</Grid>\n\n        </div>\n    )\n}\n\nexport default ListarComentarios\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Comentario.jsx",["699","700","701","702"],"import React from 'react'\nimport { Grid,Typography, Avatar, makeStyles,CircularProgress,Paper } from '@material-ui/core'\nimport moment from \"moment\"\nconst estilos=makeStyles((theme=>({\n\n  \ntitulo:{\n\n    fontWeight:\"500\",\n    fontFamily:\"nunito\"\n},\nfecha:{\n    fontWeight:\"500\",\n    \n    fontFamily:\"nunito\",\n    paddingTop:\"5px\",\n    color:\"#717171\"\n},\ncomentario:{\n    fontWeight:\"500\",\n    fontFamily:\"nunito\",\n    paddingTop:\"5px\",\n    color:\"#717171\",\n    margin:\"11px\",\n    padding:\"11px\"\n},\n\n})))\n\nconst   Comentario = (props) => {\n    const clases=estilos()\n    const Comentario=props.Comentario\n    return (\n        <div style={{marginBottom:\"50px\"}} >\n            \n\n            <Grid container>\n                        <Grid xs={12} md={2}>\n\n\n                        <Avatar    src={`${Comentario.usuario.imagen}`}  style={{top:\"25%\",left:\"36%\"\n                                       }} ></Avatar>\n\n\n                        </Grid>\n                        <Grid xs={12} md={10}>\n\n                            <Grid xs=\"12\">\n                                <Typography variant=\"subtitle2\" className={clases.fecha}>\n                                    {moment(new Date(Comentario.fecha.seconds*1000)).format(\"D MMM YYYY\")}    \n                                </Typography>\n                            </Grid>\n                            <Grid xs=\"12\">\n                            <Typography variant=\"h5\" className={clases.titulo}>\n                                    {Comentario.logueado!=true?\n                                    Comentario.usuario:\n                                    Comentario.usuario.nombre}\n                                </Typography>\n\n                            </Grid>\n                            <Grid xs=\"12\">\n                            <Typography variant=\"subtitle2\" className={clases.fecha}>\n                            {Comentario.logueado==true&&\n                                    \n                                    Comentario.usuario.email}\n                                </Typography>\n                            </Grid>\n                            <Grid xs={12}>\n                                \n                            <Typography variant=\"subtitle2\" className={clases.fecha}>\n                            {Comentario.website!==undefined&&\n                                    <a href={Comentario.website} target='_blank'>\n                                    {Comentario.website}\n                                    </a>}\n                                </Typography>\n                            </Grid>\n                          \n                        </Grid>\n\n                        <Grid xs=\"12\">\n                                <Paper elevation={1}>\n                                <Typography variant=\"subtitle1\" className={clases.comentario}>\n                                {Comentario.comentario}\n                                \n                                </Typography>\n\n                                </Paper>\n\n                            </Grid>\n\n                    </Grid>\n\n\n        </div>\n    )\n}\n\nexport default Comentario\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdministrarNosotros.jsx",["703","704","705"],"import React,{useState,useEffect} from 'react'\nimport { Typography, makeStyles,Grid,TextField ,Button,CircularProgress} from '@material-ui/core'\nimport TextoEditor  from \"../Componetes/TextoEditor.jsx\"\nimport { EditorState } from 'draft-js';\nimport Firebase from \"../../src/firebase/firebase\"\nimport draftToHtml from 'draftjs-to-html';\nimport { convertToRaw } from 'draft-js';\nimport {  ContentState, convertFromHTML } from 'draft-js'\nimport Swal from \"sweetalert2\"\nimport htmlToDraft from 'html-to-draftjs';\n\n\nconst estilos=makeStyles((theme)=>({\n\n    divTituloGeneral:{\n        margin:\"55px auto\",\n        width:\"85vw\",\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n},\ntituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n    },\n    divCircular:{\n        marginTop:\"200px\"\n\n    },\n\nmargenDiv:{\n    margin:\"100px 0px 0px 0px\"\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n\n    margenDivContenedor:{\n        margin:\"30px 0px\"\n    },\n    textoTitulo:{\n        margin:\"0px 0px 10px 5px\"\n    }\n\n}))\n\n\n\nconst AdministrarNosotros = (props) => {\n    const clases=estilos()\n    const [titulo, settitulo] = useState(\"\")\n    const [editorState, setEditorState] = useState(EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML('<p></p>')\n        )\n      ))\n   //   const [editorState, setEditorState] = useState(EditorState.createEmpty())\n\n    const [cargando, setcargando] = useState(false)\n\n  \n\n\n\n\n\n\n\n    const onEditorStateChange = (editorState) => {\n        setEditorState(editorState)\n      }\n    \n\n    const onTitleStateChange=(e)=>{\n        e.preventDefault()\n        settitulo(e.target.value)\n    }\n\n\n\n\nconst remplazarTexto =(htmlText)=>{\n  console.log(htmlText)\n\n  //<div style=\"text-align:none;\">\n let textoprueba=htmlText.replace(`<div style=\"text-align:none;\">`,`<div style=\"text-align: center; width: 100%;\">`)\n\n \n return textoprueba\n}\n\n    const Guardar=()=>{\n\n        const rawContentState = convertToRaw(editorState.getCurrentContent());\n        let htmlText = draftToHtml(rawContentState);\n        let htmlConverted = remplazarTexto(htmlText) //here I call the function that converts the <img/> to <div><img/></div>. \n        \n\n        const configWeb={\n            title:titulo,\n            //contenido:draftToHtml(convertToRaw(editorState.getCurrentContent()))\n            contenido:htmlConverted\n        }\n\n\n\n        Firebase.db.collection(\"administrarnosotros\").doc(\"configuracion\").set(configWeb).then(()=>\n        \n         Swal.fire({\n             title:\"Su informacion ha sido guardada\",\n             icon:\"success\",\n             showConfirmButton: false,\n             timer:1500\n         }).then(()=>{\n             props.history.push(\"/nosotros\")\n         })\n        ).catch(error=>console.log(error))\n\n\n        //guardar en la base de datos\n\n\n    }\n  \n\n\n\n\n\n    useEffect(async () => {\n\n        setcargando(true)\n    \n        const retornarObjeto=await Firebase.db.collection(\"administrarnosotros\").doc(\"configuracion\").get().then((respuesta)=>{\n            console.log(respuesta.data())\n\n            return respuesta.data()\n        })\n\n        if(retornarObjeto!=undefined){\n            \n            settitulo(retornarObjeto.title)\n\n// funcion extraida \n           // const blocksFromHTML = convertFromHTML(retornarObjeto.contenido);\n           \n            const contentBlock = htmlToDraft(retornarObjeto.contenido);\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            // const text = ContentState.createFromBlockArray(\n            //         blocksFromHTML.contentBlocks,\n            //         blocksFromHTML.entityMap\n            //         );\n                    \n                    const editorState = EditorState.createWithContent(contentState);\n                \n                setEditorState(\n                    editorState \n            )\n\n\n// fin de la funcion extraida \n            // setEditorState(EditorState.createWithContent(\n            //     ContentState.createFromBlockArray(\n            //       convertFromHTML(retornarObjeto.contenido)\n            //     )\n            //   ))\n\n        }\n\n        setcargando(false)\n\n\n    }, [])\n\n\n\n\n    return (\n        \n\n<div className={clases.divTituloGeneral}>\n<Typography variant=\"h4\" className={clases.tituloGeneral}>\nAdministrar Paginas Nosotros\n</Typography>\n\n<div className={clases.margenDiv}>\n\n{\ncargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                          \n <Grid container>\n\n<Grid xs={1} ></Grid>\n<Grid xs={10}>\n            <Grid xs={12} md={12}>\n\n            <div className={clases.margenDivContenedor}>\n                    <Typography className={clases.textoTitulo} variant=\"h6\" >\n                        Titulo\n                    </Typography>\n                    <TextField value={titulo} onChange={onTitleStateChange} id=\"outlined-basic\"  variant=\"outlined\" fullWidth />\n            </div>\n\n            <div className={clases.margenDivContenedor}>\n                    <Typography className={clases.textoTitulo} variant=\"h6\" >\n                        Contenido\n                    </Typography>\n            <TextoEditor editorState={editorState} onEditorStateChange={setEditorState} ></TextoEditor>\n            \n            </div>\n\n            <Button onClick={()=>Guardar()} variant=\"contained\" color=\"primary\">\n                Guardar\n            </Button>\n\n            </Grid>\n\n\n\n    \n\n</Grid>\n<Grid xs={1} ></Grid>\n\n\n</Grid>    \n</div>\n\n\n     \n}                          \n\n\n\n</div>\n</div>\n    )\n}\n\nexport default AdministrarNosotros\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/TextoEditor.jsx",["706","707","708","709","710","711"],"import React ,{useState,useEffect}from 'react'\nimport { convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport {makeStyles} from '@material-ui/core'\n\n\n\n\nconst estilo=makeStyles((theme)=>({\n\neditor:{\n  minHeight:'150px'\n}\n\n}))\n\n\n\nconst TextoEditor = (props) => {\n\n  const clases=estilo()\n\n\n\n    return (\n        <div>\n      <Editor\n         editorState={props.editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={props.onEditorStateChange}\n          localization={{\n            locale: 'es',\n          }}\n          toolbar={{fontFamily:{\n            options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman','Verdana','Lato'],\n          }}}\n        />\n        {/* <textarea\n          disabled\n          value={draftToHtml(convertToRaw(props.editorState.getCurrentContent()))}\n        />\n          */}\n      \n         \n      \n      </div>\n    )\n}\n\nexport default TextoEditor\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Colaboraciones.jsx",["712","713","714","715","716","717","718","719","720","721","722","723","724","725"],"import React,{useEffect,useState} from 'react'\nimport { Grid,Typography,Button,Avatar, makeStyles,CircularProgress,Paper } from '@material-ui/core'\nimport Comentario from '../Componetes/Comentario'\nimport FuncionesGenerales from \"../Funciones/FuncionesFirebase\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Firebase from '../firebase/firebase'\n\nconst estilos=makeStyles((theme=>({\n    root:{\n      \n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n            \n\n    },\n\n    \n    tituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n    }\n,\ndivTituloGeneral:{\n    margin:\"55px auto\",\n    \n},\ndivCircular:{\n    marginTop:\"100px\"\n\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n\n    textNoDisponible:{\n\n\n        fontFamily:\"Nunito\",\n        color:\"#808080\"\n\n},\n})))\n\n\n\nconst ListarComentarios = () => {\n\n    const clases=estilos()\n\n    // solicitud maxima  de comentarios \n     const comentariosSolicitados = 3\n     // comentorios mostrados \n     const comentariosMostrados=2\n    // referencia base de datos \n    const  comentariosRef=Firebase.db.collection('Colaboracion')\n\n    const [comentarios, setcomentarios] = useState([])\n    const [cargando, setcargando] = useState(false)\n    const [ultimo,setUltimo]=useState()\n    const [vacio,setVacio]=useState(false)\n\n\n    useEffect(async () => {\n\n        setcargando(true)\n        pedirComentarios()\n\n\n    }, [])\n\n\n    const pedirComentarios=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    const pedirMas=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').startAfter(ultimo).limit(comentariosSolicitados).get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    return (\n        <div className={clases.root} >\n\n<Grid  container>\n\n<Grid xs=\"1\"  md=\"2\"> \n\n</Grid>\n<Grid xs=\"10\" md=\"8\">\n        <div className={clases.divTituloGeneral}>\n                    <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                            Colaboraciones\n                    </Typography>\n        </div>\n\n\n\n\n        {                            \n                cargando?\n                <div className={clases.divCircular} >\n                <CircularProgress className={clases.circular}></CircularProgress>\n            </div>\n            :<div>\n               { comentarios.length==0 ?\n                  <Typography className={clases.\n                  textNoDisponible\n                   } align=\"center\" variant=\"h4\">\n                            No hay registros\n                  </Typography>          \n               \n\n                    :\n\n                    <div>\n\n                                {\n                                    comentarios.map((doc)=>(\n                                        <Comentario Comentario={doc}> </Comentario>\n                                    ))\n                                }\n\n                            {/* {vacio==false&&\n\n                                    <Typography align=\"center\">        \n                                    <Button variant='contained'\n                                    color=\"primary\"\n                                    endIcon={<ExpandMoreIcon/>}       \n                                    onClick={()=>{pedirMas()}}\n                                    >\n                                    ver mas      \n                                    </Button>       \n                                    </Typography>        \n\n\n                            }\n                       */}\n                    </div>\n                 \n        \n            }\n            </div>\n        }\n\n</Grid>\n\n<Grid xs=\"1\" md=\"2\">\n    \n</Grid>\n</Grid>\n\n        </div>\n    )\n}\n\nexport default ListarComentarios\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Eligeetiqueta.jsx",["726","727","728","729","730","731","732","733","734","735","736","737","738"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Progreso.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tarjeta/BotonMenu.jsx",["739","740"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport SettingsRoundedIcon from '@material-ui/icons/SettingsRounded';\nimport {IconButton} from '@material-ui/core';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function CustomizedMenus(props) {\n    let history = useHistory();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const Editarpaper = () => {\n\n    history.push(`/editarpaper/${props.id}`)\n  }\n\n  const VerInfo = () => {\n    history.push(`/info/${props.id}`)\n\n  }\n\n  return (\n    <>\n     <IconButton onClick={handleClick}  variant=\"contained\"  color=\"primary\"  >\n             <SettingsRoundedIcon ></SettingsRoundedIcon >\n        </IconButton>\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n          \n        <StyledMenuItem onClick={()=>Editarpaper()}>\n       \n          <ListItemIcon>\n            <SendIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Editar\" />\n        </StyledMenuItem>\n        \n        <StyledMenuItem onClick={()=>VerInfo()}>\n          <ListItemIcon>\n            <DraftsIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"info\" />\n        </StyledMenuItem>\n      \n      </StyledMenu>\n    </>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Info.jsx",["741","742","743","744","745","746","747"],"import React,{ useEffect,useState} from 'react'\nimport {Typography,TextField,Grid, Button,makeStyles,IconButton,CircularProgress} from '@material-ui/core'\nimport Formulario from '../Componetes/Info/Formulario'\nimport Imagen from '../Componetes/Info/Imagen'\nimport CloseIcon from '@material-ui/icons/Close';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Firebase from '../Funciones/FuncionesFirebase'\nimport { useHistory } from \"react-router-dom\";\nimport Swal from \"sweetalert2\"\n\n\n\nconst estilos=makeStyles((theme)=>({\n    boton: {\n       \n            backgroundColor: '#21cbce',\n            marginTop:'40px',\n            color:'#FFFFFF', \n            '&:hover': {\n                backgroundColor:'#FFFFFF' ,\n                color:'#21cbce', \n\n              },\n\n    },\n    botonBasurero: {\n       \n        backgroundColor: '#e83f33',\n        marginTop:'40px',\n        marginBottom:'40px',\n        color:'#FFFFFF', \n        '&:hover': {\n            backgroundColor:'#FFFFFF' ,\n            color:'#e83f33', \n\n          },\n\n},\n    alerta:{\n\n        margin:'30px 0px 0px'\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        \n        divCircular:{\n            marginTop:\"100px\"\n    \n        },\n\n}))\n\n\nfunction Alert(props) {\n    const clases = estilos();\n    return <MuiAlert className={clases.alerta} elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n\nconst Info = (props) => {\n\n\n    const history = useHistory()\n    const [link,setlink] = useState([])\n    const [paper, setpaper] = useState({})\n    const [imagen, setimagen] = useState({file:null,imagen:null})\n    const [info, setinfo] = useState({\n        id:'',\n        titulo:'',\n        resumen:'',\n        imagen:'',\n        link:[]\n    })\n    const [errores, seterrores] = useState({\n        titulo:null,\n        resumen:null,\n        imagen:null,\n        \n    })\n    const [errorUrl, seterrorUrl] = useState(false)\n    const [cargando, setcargando] = useState(false)\n    const clases=estilos()\n    const actualizarState=(e)=>{\n        e.preventDefault()\n        setinfo({...info,[e.target.name]:e.target.value})\n    }\n\n\n\nuseEffect(async() => {\n    setcargando(true)\n    const {id}=props.match.params\n    //buscar  ver si el informacion  \n    let retornar_paper=await Firebase.retornarPaper(id)\n    \n\n    console.log(retornar_paper)    \n    if (retornar_paper!=undefined){\n\n    setpaper(retornar_paper)   \n    const retornarInfo =await Firebase.retornarInformacion(id) \n    console.log(retornarInfo)    \n\n    if(retornarInfo!=undefined){    \n\n        console.log(retornarInfo)  \n\n    //agregar link \n    setlink(prevState=>[...retornarInfo.link])\n    // agregar imagen  \n\n    setimagen({file:retornarInfo.imagen})\n\n    setinfo({...retornarInfo,id:id})\n}else{\n\n    setinfo({...retornarInfo,id:id})\n\n}\n}else{\n    seterrorUrl(true)\n}\n\n    setcargando(false)\n\n}, [errores])\n\n\nconst crearInfo =async()=> {\n\n    \n    //validaciones \n     let errores=validando()\n    // armar parametro nuevo\n\n\n    try {\n        \n        if(Object.keys(errores).length){\n \n        }else{\n            const  imgInfo=await Firebase.subirImagen(info.id,imagen)\n            let newInfo={...info,link:link,imagen:imgInfo}\n            console.log(newInfo)\n            let respuesta=await Firebase.CrearInformacion(newInfo,paper)\n            console.log(respuesta)\n            props.history.push(\"/\")            \n        }\n    } catch (error) {\n        console.log(error)\n\n    }\n  \n\n\n\n\n\n\n\n}\n//validaciones\n\nconst validando =()=> {\n    let  errores  = validacion()\n    seterrores(errores)\n    return errores\n\n}\n\n\nconst validacion=()=>{\n  \n    let prueba={}\n\n    //validar errores \n\n    if(info.titulo.trim()==\"\"){\n            prueba.titulo=\"el titulo es requerido\"\n    }\n\n\n    if(info.resumen.trim()==\"\"){\n            prueba.resumen=\"el resumen es requerido\"\n    }\n\n  \n    if(imagen.file==null){\n        prueba.imagen=\" debe subir una imagen\"\n}\n\n   \n  return prueba\n\n\n}\n\n\nconst borrarLink=(doc)=>{\n    var arr = link\n    var pos =arr.indexOf(doc)\n    arr.splice(pos, 1)\n    setlink([...arr])\n    }\n\n\n    const borrar=()=>{\n        Swal.fire({\n            title: '¿Esta seguro que desea borrar el siguiente registro?',\n            text:`${info.titulo}`,\n            showDenyButton: true,\n            confirmButtonColor: '#21cbce',\n            confirmButtonText: `Borrar`,\n            denyButtonText: `Cancelar`,\n          }).then((result) => {\n\n            if (result.isConfirmed) {\n                // Firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                     Firebase.BorrarInformacion(info,paper)\n                   //pedirpaper()\n                    history.push('/')\n                console.log(\"borrado\")\n\n                // }).catch((error) => {\n                //         console.error(\"Error removing document: \", error);\n                // });\n\n\n\n          }}\n          )}\n    \n       \n\n    return (\n        <Grid container>\n\n\n                    <Grid xs={12} md={2}>\n                     \n\n                     \n\n                     </Grid>      \n\n                     <Grid xs={12} md={8}>\n\n\n                    {cargando ?\n\n                    <div className={clases.divCircular} >\n                    <CircularProgress className={clases.circular}></CircularProgress>\n\n                    </div>\n\n                    :\n                    \n                \n                    errorUrl?\n\n                        <>\n                        <Typography align=\"center\" variant=\"h4\">\n                                El registro no existe\n                        </Typography>\n                            <Typography align=\"center\">\n                                <a href=\"/\">\n                                    volver\n                                </a>\n                            </Typography>\n\n                             </>\n                        :\n                \n                \n                <Grid container>\n                <Grid xs={12} md={6}>\n                    <Imagen imagen={imagen}  setimagen={setimagen}></Imagen>\n                </Grid>       \n                <Grid xs={12} md={6}>\n                    \n                    <Formulario info={info} errores={errores} actualizarState={actualizarState}  borrarLink={borrarLink}  link= {link} setlink={setlink}  ></Formulario>\n\n                </Grid>       \n\n                <Grid className=\"root\" xs={12}>\n                    \n\n\n                    {errores.imagen!=null&& \n                       <Alert\n                       action={\n                           <IconButton\n                             aria-label=\"close\"\n                             color=\"inherit\"\n                             size=\"small\"\n                             onClick={() => {\n                              seterrores({\n                                  ...errores,imagen:null\n                              })\n                             }}\n                           >\n                          <CloseIcon></CloseIcon>\n\n                           </IconButton>\n                         }\n                       \n                       severity=\"error\">{errores.imagen}</Alert>\n\n                    }\n\n                    <Button \n                    fullWidth\n                    className={clases.boton}\n                    variant='contained'\n                     onClick={()=>crearInfo()}\n                     >\n\n                         Agregar  Informacion\n                     </Button>\n\n                     <Button \n                    fullWidth\n                    className={clases.botonBasurero}\n                    variant='contained'\n                     onClick={()=>borrar()}\n                     >\n\n                         Borrar informacion\n                     </Button>\n\n                </Grid>    \n\n\n\n     </Grid>     \n\n     \n                \n                }\n\n                     </Grid>      \n                     <Grid xs={2}>\n                     \n                     </Grid>      \n\n\n                 \n\n\n        </Grid>\n    )\n}\n\nexport default Info\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Info/Formulario.jsx",["748","749","750","751","752","753"],"import React,{useEffect,useState} from 'react'\nimport {Typography,TextField,Grid,Button,Icon,makeStyles} from '@material-ui/core'\nimport SendIcon from '@material-ui/icons/Send';\nimport LinkIcon from '@material-ui/icons/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Swal from \"sweetalert2\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    basurero:{\n        padding:\"0px\",\n        margin:\"0px 12px\",\n        color:\"#ff0000\"\n    }\n\n}))\n\nconst Formulario = (props) => {\n\n const classes =useStyles()   \n\n\n useEffect(() => {\n\n    console.log(props.link)\n    props.setlink(props.link);\n  }, [props]);\n\nconst agregarPaper=async() => {\n    const { value: url } = await Swal.fire({\n        input: 'url',\n        inputLabel: 'URL address',\n        inputPlaceholder: 'Enter the URL'\n      })\n      \n      if (url) {\n\n        props.setlink((link)=>[...link,url])\n        Swal.fire(`Entered URL: ${url}`)\n      }\n    }\n\n\n\n\n\n\n    return (\n        <>\n        <Typography align=\"center\">\n\n        {props.errores.titulo?\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Titulo\"\n            name=\"titulo\"\n            value={props.info.titulo}\n            onChange={props.actualizarState}\n            error\n            id=\"standard-error\" \n            helperText={props.errores.titulo}>\n            </TextField>\n        :\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Titulo\"\n            name=\"titulo\"\n            value={props.info.titulo}\n            onChange={props.actualizarState}\n         \n        ></TextField>\n        \n        }\n     \n        </Typography>\n\n        <Typography align=\"center\" >\n\n                 {props.errores.resumen?\n                \n                <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"resumen\"\n                label=\"Resumen\"\n                name=\"resumen\"\n                onChange={props.actualizarState}\n                value ={props.info.resumen}\n                multiline\n                 rowsMax={8}\n                autoComplete=\"resumenrafce\"\n                error\n                id=\"standard-error\" \n                helperText={props.errores.resumen}\n            \n                />\n                \n                :\n                <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"resumen\"\n                label=\"Resumen\"\n                name=\"resumen\"\n                value ={props.info.resumen}\n                onChange={props.actualizarState}\n                multiline\n                 rowsMax={8}\n                autoComplete=\"resumenrafce\"\n            \n                />\n                }       \n                   \n         </Typography>\n\n         <Typography align=\"left\" >\n             \n                        <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        endIcon={<LinkIcon/>}\n                        onClick={() => agregarPaper()}\n\n                    >\n                        Agregar Link\n                    </Button>\n         </Typography>\n         <Typography align=\"left\" >\n             {props.link.map(doc=>(\n            <ul>\n                    <li>\n                       <a target=\"_blank\" href={doc}>     \n                            {doc}\n                        </a>\n\n                        <IconButton aria-label=\"delete\" className={classes.basurero}\n                            onClick={()=>props.borrarLink(doc)}\n                        >\n                                <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n\n\n                    </li>\n            </ul>\n            \n            \n             ))}\n\n        </Typography>\n\n\n\n\n    </>\n    )\n}\n\nexport default Formulario\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Info/Imagen.jsx",["754","755"],"import React from 'react'\nimport {Typography,makeStyles} from '@material-ui/core'\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\n\nconst estilos = makeStyles((theme)=>({\n    divImagen:{\n       \n        height:\"360px\",\n        width:\"260px\",\n        color:\"#21cbce\",\n        backgroundSize:\"260px auto\",\n        position:\"relative\",\n        backgroundRepeat:\"no-repeat\",\n        border: \"2px dashed #21cbce\",\n        backgroundPosition:\"50%\",\n        borderRadius:\"0\",\n        display:\"block\",\n        margin:\"auto\",\n        marginTop:\"15px\",\n        [theme.breakpoints.down(\"sm\")]:{\n                marginTop:\"30px\"\n        },\n        '&:hover': {\n            backgroundColor:'#21cbce' ,\n            color:'#ffffff', \n\n          },\n    },\n    imgFoto:{\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n\n}))\n\n\n\n\nconst Imagen = (props) => {\n\nconst clases =estilos()\n\nconst seleccionarArchivo=imagen=>{\n       \n            \n    const agregarimg=imagen.target.files[0]\n    console.log(agregarimg)  \n    if(agregarimg!=undefined){\n     props.setimagen({\n        imagen:agregarimg,\n        file:URL.createObjectURL(agregarimg)\n    })}\n\n\n}    \n\n\n\n\n\n    return (\n        <div>\n\n                    <Typography  align=\"center\" variant=\"h3\">\n\n                            <label for=\"subir\">\n                            <div  className={clases.divImagen}>\n\n  \n                            {props.imagen.file?\n\n                                <img src={props.imagen.file} style={{height:\"100%\",width:\"100%\"}}/>\n                            \n                                // <div   className={clases.divImagen} style={{\n                                //     backgroundImage:`url(${imagen.file})`,\n\n                                //   }} >\n\n                                          \n                                //     </div>\n\n\n                                :\n                                < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n                                }\n                            \n\n                            </div>\n                            <input\n                                    type=\"file\"\n                                    id=\"subir\"\n                                    accept=\"image/*\"\n                                    style={{display:\"none\"}}\n                                    onChange={(e)=>seleccionarArchivo(e)}\n\n                                    \n                                \n                                    >\n                                    </input>\n                            </label>\n                    </Typography>\n\n              \n            \n        </div>\n    )\n}\n\nexport default Imagen\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Verinfo.jsx",["756","757","758","759"],"import React, { useState,useEffect } from 'react'\nimport Firebase from '../Funciones/FuncionesFirebase'\nimport { Grid,Typography } from '@material-ui/core'\nimport Cargando from '../Componetes/Cargando'\nimport Estructura from '../Componetes/VerInfo/Estructura'\n\n\nconst registroVacio =()=>(\n    <>\n    <Typography variant=\"h5\" align=\"center\">\n    the record does not exist\n  </Typography>\n  <Typography variant=\"h5\" align=\"center\">\n      <a href='/'>\n               \n               Come back\n\n      </a>\n  </Typography>\n    </>\n)\n\n\n\n\n\nconst Verinfo = (props) => {\n\n            const [informacion, setinformacion] = useState({})\n            const registroVa=registroVacio()\n            const [cargando, setcargando] = useState(true)\n\n\n    useEffect(async () => {\n\n       setcargando(true)\n        const {id}=props.match.params\n        const retornarInfo=await Firebase.retornarInformacion(id)\n        if(retornarInfo!=undefined){\n\n                setinformacion(retornarInfo, setcargando(false))\n        }\n       \n        \n    }, [])\n\n\n\n\n    \n\n\n    return (\n        <div>\n\n            <Grid container>\n                    <Grid xs={1} /> \n\n                    <Grid xs={10} > \n\n                        {cargando?\n                        \n                        <Cargando/>\n                        :\n                        Object.keys(informacion).length == 0?\n                        \n                        registroVa\n\n                        :\n                      \n                            <Estructura informacion={informacion} ></Estructura>\n\n                        }\n\n                      </Grid>\n                        <Grid xs={1}></Grid>\n\n\n            </Grid>\n            \n        </div>\n    )\n}\n\nexport default Verinfo\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Cargando.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Estilos.jsx",["760"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Estructura.jsx",["761"],"import React,{useState,useEffect} from 'react'\nimport {Grid} from '@material-ui/core'\nimport Imagen from '../VerInfo/Imagen'\nimport Formulario from '../VerInfo/Formulario'\nconst Estructura = (props) => {\n    const [imagen, setimagen] = useState({file:null,imagen:null})\n    const [info, setinfo] = useState({\n        id:'',\n        titulo:'',\n        resumen:'',\n        link:[]\n    })\n\n    useEffect(() => {\n    \n\n        setimagen({file:props.informacion.imagen})\n        setinfo({...props.informacion})    \n\n\n\n    }, [])\n\n    return (\n      <Grid container>\n\n          <Grid xs={12} md={6}>\n              \n              <Imagen id={info.id} titulo ={info.titulo} resumen ={info.resumen} imagen={imagen}  setimagen={setimagen} ></Imagen>\n           </Grid>  \n           <Grid xs={12} md={6}>\n                    <Formulario info={info}></Formulario>\n            </Grid>  \n\n\n      </Grid>\n\n\n    )\n}\n\nexport default Estructura\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Formulario.jsx",["762"],"import { Grid ,Typography ,Divider} from '@material-ui/core'\nimport React from 'react'\nimport Estilos from '../Estilos'\n\nconst Formulario = (props) => {\n    const estilos=Estilos()\n\n    return (\n        <Grid container>\n\n          <Grid xs={12}>\n              <Typography className={estilos.textoTitulo} variant=\"h4\" align=\"left\">\n                    {props.info.titulo}\n              </Typography>\n         </Grid>  \n\n         <Grid xs={12}>\n             <div className={estilos.divResumen}>\n            <Typography variant=\"h5\" align=\"left\" className={{color:'#000000b3'}}>\n                    {props.info.resumen}\n            </Typography>\n            </div>\n              \n         </Grid> \n\n          <Grid xs={12}>\n        \n          <Divider className={estilos.dividido} />\n\n              \n         </Grid>      \n\n         <Grid xs={12}>\n        \n         <Typography variant=\"h5\" align=\"left\" style={{color:'#0e0eb9'}}>\n            Learn more \n            </Typography>\n        \n            <Typography align=\"left\" >\n             {props.info.link.map(doc=>(\n            <ul>\n                    <li>\n                       <a target=\"_blank\" href={doc}>     \n                            {doc}\n                        </a>\n\n                    </li>\n            </ul>\n            \n            \n             ))}\n\n        </Typography>\n\n            \n       </Grid>      \n\n\n\n\n\n        </Grid>\n    )\n}\n\nexport default Formulario\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Imagen.jsx",["763","764","765","766","767","768","769","770","771"],"import React,{useEffect,useState} from 'react'\nimport {Typography,makeStyles} from '@material-ui/core'\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport estilos from '../Estilos'\nimport Botones from './Botones';\nimport Firebase from '../../firebase/firebase';\nimport HelmetMetaData from '../Helmet/Helmet';\n\n\n\nconst Imagen = (props) => {\n\nconst clases =estilos()\n\n    const [url, seturl] = useState({})\n\n\n\nuseEffect(async () => {\n\n//     const prueba= await fetch('https://firebasestorage.googleapis.com/v0/b/crispaper-30459.appspot.com/o/Informacion%2F126906762_110192684249055_224218762780413843_o.jpg?alt=media&token=ed0d82be-648e-4d4a-845e-e0fe575c566e')\n//   .then(res => res.blob()) // Gets the response and returns it as a blob\n//   .then(blob => {\n//     // Here's where you get access to the blob\n//     // And you can use it for whatever you want\n//     // Like calling ref().put(blob)\n\n//     // Here, I use it to make an image appear on the page\n//     let objectURL = URL.createObjectURL(blob);\n//     return objectURL\n    const prueba=await  Firebase.storage.ref().child('Informacion/126906762_110192684249055_224218762780413843_o.jpg').getDownloadURL().then(function(url) {\n    // `url` is the download URL for 'images/stars.jpg'\n  \n    // This can be downloaded directly:\n    var xhr = new XMLHttpRequest();\n    xhr.responseType = 'blob';\n   \n  \n    xhr.onload = function(event) {\n      var blob = xhr.response;\n      console.log('blob')\n      console.log(blob);\n    };\n    xhr.open('GET', url);\n    xhr.send();\n    console.log(xhr)\n\n    // Or inserted into an <img> element:\n    var img = document.getElementById('myimg');\n  \n  }).catch(function(error) {\n    // Handle any errors\n    console.log(error);\n  });\n\nconsole.log()\n\n//seturl(prueba) \n\n\n    \n}, [])\n\n\n\n    return (\n        <div>\n\n\n                    <Typography  align=\"center\" variant=\"h3\">\n\n                            <div  className={clases.divImagen}>\n\n  \n                            \n                             \n                                <img src={props.imagen.file} style={{height:\"100%\",width:\"100%\"}}/>\n\n                              \n\n\n                               \n                            \n\n                            </div>\n                         \n                    </Typography>\n\n                    <Typography align=\"center\">\n                            <Botones id ={props.id} titulo={props.titulo} resumen={props.resumen} imagen ={props.imagen.file}></Botones>\n\n                    </Typography>\n\n              \n            \n        </div>\n    )\n}\n\nexport default Imagen\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/VerInfo/Botones.jsx",["772","773","774"],"import { Icon } from '@material-ui/core'\nimport React,{useEffect} from 'react'\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport estilos from '../Estilos'\nimport Firebase from '../../Funciones/FuncionesFirebase'\nimport {FacebookShareButton,TwitterShareButton} from \"react-share\";\nimport { useLocation } from 'react-router-dom';\nimport HelmetMetaData from '../Helmet/Helmet';\n\n\nconst Botones = (props) => {\n\n    const location=useLocation()\n    const clases =estilos()\n const url = \"https://crispaper-30459.web.app/\"+ location.pathname\nconst descargarimagen=async(id)=> {\n\n    alert('descargando')\nawait Firebase.descargarImagen(id)\n// const prueba= await fetch('https://upload.wikimedia.org/wikipedia/commons/7/77/Delete_key1.jpg')\n//   .then(res => res.blob()) // Gets the response and returns it as a blob\n//   .then(blob => {\n//     // Here's where you get access to the blob\n//     // And you can use it for whatever you want\n//     // Like calling ref().put(blob)\n\n//     // Here, I use it to make an image appea    r on the page\n//     let objectURL = URL.createObjectURL(blob);\n//     return objectURL\n// });\n\n// console.log(prueba)\n\n}\n\nuseEffect(() => {\n    console.log(url)\n  \n}, [])\n\n    return (\n        <div className={clases.botonesIcono}>\n            <HelmetMetaData title={props.titulo}  description={props.resumen} image={props.imagen}></HelmetMetaData>\n\n            <ul>\n                <li>\n                    <a  href={props.imagen}  target=\"_blank\">\n                    <Icon className={clases.tamanoIcono}>\n                    file_download\n                    </Icon>\n                    </a>\n                </li>\n                <li>\n                    <Icon className={clases.tamanoIconoMargen}>\n                    <FacebookShareButton \n                url={url}\n                quote={props.titulo}\n                >\n                 <FacebookIcon className={clases.tamanoIcono}></FacebookIcon>\n              </FacebookShareButton>\n\n                       \n                    </Icon>\n                </li>\n                <li>\n                <TwitterShareButton\n                        url={url}\n                        title={props.titulo}\n                        hashtag=\"#planetcolab\"\n                       \n                    >\n                    <Icon className={clases.tamanoIcono}>\n                        <TwitterIcon className={clases.tamanoIcono}></TwitterIcon>\n                    </Icon>\n                    </TwitterShareButton>\n                </li>\n\n            </ul>\n        </div>\n    )\n}\n\nexport default Botones\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Helmet/Helmet.jsx",["775"],"import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"react-router-dom\";\nimport Icono from \"../../pajaro.svg\"\n\nexport default function HelmetMetaData(props) {\n   let location = useLocation();\n   let currentUrl = \"http://www.planetcolab.com\" + location.pathname;\n   let quote = props.quote !== undefined ? props.quote : \"Planet Colab - Curated Environmental Information and Software\";\n   let title = props.title !== undefined ? props.title : \"Planet Colab\";\n   let image = props.image !== undefined ? props.image : \"%PUBLIC_URL%/pajaro.svg\";\n   let description = props.description !== undefined ? props.description  : \"Free and open resource with curated environmental information sources,software and tools for your project or research. Powered  by collaboration\";\n   let hashtag = props.hashtag !== undefined ? props.hashtag : \"#planetcolab\";\n\nreturn (\n <Helmet>\n     <title>{title}</title>\n     <meta charset=\"utf-8\" />\n     <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n     <meta name=\"csrf_token\" content=\"\" />\n     <meta property=\"type\" content=\"website\" />\n     <meta property=\"url\" content={currentUrl} />\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\n     <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n     <meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\" />\n     <meta name=\"theme-color\" content=\"#ffffff\" />\n     <meta name=\"_token\" content=\"\" />\n     <meta name=\"robots\" content=\"noodp\" />\n     <meta property=\"title\" content={title} />\n     <meta property=\"quote\" content={quote} />\n     <meta name=\"description\" content={description} />\n     <meta property=\"image\" content={image} />\n     <meta property=\"og:locale\" content=\"en_US\" />\n     <meta property=\"og:type\" content=\"website\" />\n     <meta property=\"og:title\" content={title} />\n     <meta property=\"og:quote\" content={quote} />\n     <meta property=\"og:hashtag\" content={hashtag} />\n     <meta property=\"og:image\" content={image} />\n     <meta content=\"image/*\" property=\"og:image:type\" />\n     <meta property=\"og:url\" content={currentUrl} />\n     <meta property=\"og:site_name\" content=\"CampersTribe\" />\n     <meta property=\"og:description\" content={description} />    \n      </Helmet>\n);\n}","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Populares.jsx",["776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819"],"import React,{useEffect,useState} from 'react'\nimport {Grid,makeStyles, Typography, Button,IconButton,CircularProgress, setRef} from \"@material-ui/core\"\nimport Paper from '@material-ui/core/Paper';\nimport firebase from '../firebase/firebase'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {Chip} from '@material-ui/core'\nimport \"moment/locale/es\"\nimport SaveIcon from '@material-ui/icons/Save';\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {UsuarioContext} from \"../Provedores/UsuarioContext\"\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CorazonLleno from \"../imagen/iconos/arbolLleno.png\"\nimport Corazon from \"../imagen/iconos/arbolVacio.png\"\n import BotonMenu from '../Componetes/Tarjeta/BotonMenu'\n import BotonFlotante from '../Componetes/BotonFlotante';\nimport Titulo from '../Componetes/Titulo/Titulo';\n\n   \n      \n\n const  estilos = makeStyles((theme)=>({\n        button: {\n                margin: '3px'\n              },\n\n    margen:{\n\n            margin:\"0px auto \",\n\n\n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n      \n\n            \" & #mandarina .MuiSvgIcon-root\" :{\n              \n                color:\"#EC6933\",\n              \n            },\n            \" & #verde .MuiSvgIcon-root\" :{\n              \n                color:\"#4B9965\",\n              \n            },\n            \" & #morado .MuiSvgIcon-root\" :{\n              \n                color:\"#9372B6\",\n              \n            },\n            \" & #azul .MuiSvgIcon-root\" :{\n              \n                color:\"#4CA9B2\",\n              \n            },\n\n\n\n            \" & .MuiButton-containedPrimary\" :{\n              \n                color:\"#434343\",\n                backgroundColor:\"#ffffff\",\n                boxShadow:\"none\"\n            },\n          \n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n                marginTop:\"10px\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    }\n    \n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n        tituloGeneral:{\n\n        fontWeight:\"700\",\n        fontFamily:\"Lato\",\n        fontSize:\"27px\"\n        }\n,\ndivTituloGeneral:{\n        margin:\"0px auto\",\n        width:\"85vw\"\n},\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\ncontenedor:{\n        margin:\"18px auto\"\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n        position:\"absolute\",\n        bottom:\"0\",\n        right:\"9px\",\n        width:\"90px\"\n},\ndivFoto:{\n\n        width:\"250px\",\n        height:\"160px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\",\n        [theme.breakpoints.down(\"sm\")]:{\n                margin:\"30px auto\"\n        }\n    },\n    divImagen:{\n\n         height:\"160px\",\n         width:\"260px\",\n         backgroundSize:\"260px auto\",\n         backgroundRepeat:\"no-repeat\",\n         backgroundPosition:\"50%\",\n         borderRadius:\"16px\",\n         display:\"block\",\n         margin:\"auto\",\n         marginTop:\"15px\",\n         [theme.breakpoints.down(\"sm\")]:{\n                 marginTop:\"30px\"\n         }\n\n\n\n      },\n\n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    cajaMeGusta:{\n            position:'absolute',\n            top:'8px',\n            right:'12px',\n    [theme.breakpoints.down(\"sm\")]:{\n            position:'unset'\n    }\n\n\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    }\n    ,botonLikes:{\n        color:\"#35b37c\",\n        margin:\"8px 0px 0x 0px\",\n        border:\"1px solid\"\n\n\n    },\n    margenChip:{\n\n        margin:\"0px 3px\",\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        divTexto:{\n                [theme.breakpoints.down(\"md\")]:{\n\n                        margin:\"0vw 5vw 0\"\n                },\n\n\n\n                [theme.breakpoints.down(\"sm\")]:{\n\n                        margin:\"5vw 5vw 0\"\n                }\n        },\n        textNoDisponible:{\n\n\n                fontFamily:\"Nunito\",\n                color:\"#808080\"\n\n\n\n\n        },\n        centrarComponente:{\n                textAlign:\"end\",\n                marginRight:\"10px\",\n                [theme.breakpoints.down(\"md\")]:{\n\n                        textAlign:\"center\",\n                }\n\n        },\n        botonPdf:{\n                position:\"absolute\",\n                bottom:\"55px\",\n                right:'0px',\n                [theme.breakpoints.down(\"sm\")]:{\n                        position:'unset'\n                }\n        }\n,\n        textUpVote:{\n           fontFamily:\"nunito\",\n           textAlign:\"center\",\n           color:\"#808080\"     \n        }\n\n\n\n\n\n }))\n\n\n\n\nconst   Populares = (props) => {\n\n    const history = useHistory();\n    const clases =estilos()\n    const recientes =false   \n    const populares = true\n    const usuario =useContext(UsuarioContext)\n    const [listapaper,setlistapaper]=useState([])\n    const [cargando, setcargando] = useState(false)\n    const [cargandodos, setcargandodos] = useState(false)\n    const [paper, setpaper] = useState({})\n    const [ultimoDocumento, setultimoDocumento] = useState(0)\n   const [vacio, setvacio] = useState(false)\n  const [tituloGeneral,setTituloGeneral]=useState(\"The Lastest\")\n\n\n\n  \n\n\n      \n const listadepaper=async(recientes,valorados)=>{\n        console.log(\"inicio\")\n     \n        try {\n\n        if(recientes){\n                setlistapaper([])\n                await firebase.db.collection(\"paper\").orderBy(\"subida\",\"desc\").limit\n                (5).get().then((coleccion)=>\n                {\n\n                            if(coleccion.size!=0){\n                                        console.log(\"paso por aca \")\n                                        const lista =coleccion.docs.map((paperObje)=>{return {...paperObje.data(),\n                                        click:false\n                                        }})\n                                        setultimoDocumento(lista[lista.length-1].id)\n                                        setlistapaper((listapaper)=>[...listapaper,...lista])\n                                        setcargando(false)\n\n                                }\n                                if(coleccion.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                }\n\n                )\n        }else{\n                if(valorados){\n                        setlistapaper([])\n                       await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n\n                         let nuevalista=[]\n                            await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                                nuevalista=valor.docs.map(doc=>{\n\n                                                          return{\n                                                                id:doc.id,\n                                                                ...doc.data()\n                                                            }\n\n                                })\n\n                                if(nuevalista.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                                if(nuevalista.length==0){\n                                        setultimoDocumento(0)\n                                }else{\n                                setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                                 }\n\n\n                           })\n\n\n\n\n                           console.log(\"paso por aca \")\n                        setlistapaper(nuevalista)\n\n\n\n\n\n\n                }\n\n\n        }\n\n        } catch (error) {\n                console.log(error)\n        }\n        console.log(\"final\")\n\n        setcargando(false)\n }\n\n//  const  manejarSnapshot=(snapshot)=>{\n\n\n\n//         console.log(listapaper)\n//         const  lista =snapshot.docs.map(doc=>{\n//             return{\n//                 id:doc.id,\n//                 ...doc.data()\n//             }\n//         })\n//         console.log(lista)\n//         setcargando(false)\n\n//                 if(lista.length!=0){\n//                         setvacio(false)\n//                         setultimoDocumento(lista[lista.length-1].id)\n\n//                 }else{\n\n//                         setvacio(true)\n\n//                 }\n//         setlistapaper(lista)\n//     }\n\n\n\n\n\n//nueva funcion de busqueda\n\nconst buscarTexto=async(texto_busqueda,recientes,valorados)=>{\n\n\n        setcargando(true)\n\n        try {\n\n                if(recientes){\n                        console.log(texto_busqueda)\n                        setlistapaper([])\n                        await firebase.db.collection(\"paper\").orderBy(\"busqueda\")\n                        .startAt(texto_busqueda).endAt(texto_busqueda+'\\uf8ff')\n                       .limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                console.log(lista)\n                                                console.log(listapaper)\n\n\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n                        // if(valorados){\n                        //         setlistapaper([])\n                        //        await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1].id)\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                        //                                 setcargando(false)\n\n                        //                         }\n                        //                         if(coleccion.length==5){\n                        //                                 setvacio(true)\n                        //                         }else{\n                        //                                 setvacio(false)\n                        //                         }\n\n                        //         }\n\n                        //         )\n                        // }else{\n\n                        //          let nuevalista=[]\n                        //             await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                        //                 nuevalista=valor.docs.map(doc=>{\n\n                        //                                           return{\n                        //                                                 id:doc.id,\n                        //                                                 ...doc.data()\n                        //                                             }\n\n                        //                 })\n\n                        //                 if(nuevalista.length==5){\n                        //                         setvacio(true)\n                        //                 }else{\n                        //                         setvacio(false)\n                        //                 }\n\n                        //                 if(nuevalista.length==0){\n                        //                         setultimoDocumento(0)\n                        //                 }else{\n                        //                 setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                        //                  }\n\n\n                        //            })\n\n\n\n\n                        //            console.log(\"paso por aca \")\n                        //         setlistapaper(nuevalista)\n\n\n\n\n\n\n                        // }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n                setcargando(false)\n\n\n\n}\n\n\nconst pedirpaper=()=>{\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\n  // LLAMAR A LOS PAPER\n\n  listadepaper(props.recientes,props.valorados)\n\n\n\n}\nconst borrar=(e)=>{\n\n\n\n\n        Swal.fire({\n                title: '¿Esta seguro que desea borrar el siguiente registro?',\n                text:`${e.titulo}`,\n                showDenyButton: true,\n                confirmButtonColor: '#21cbce',\n                confirmButtonText: `Borrar`,\n                denyButtonText: `Cancelar`,\n              }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n\n                 if (result.isConfirmed) {\n                                firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                        let nuevaLista=[]\n                                        listapaper.map((valor)=>{\n                                                        if(valor.id!=e.id){\n                                                                console.log(valor)\n                                                                nuevaLista.push(valor)\n                                                        }\n\n                                        })\n\n\n                                        //pedirpaper()\n\n                                console.log(\"borrado\")\n\n                                }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n\n\n                                e.etiquetas.map( valor=>{\n\n                                        firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                             //  console.log(\"Document successfully deleted!\");\n\n\n\n                                              let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                        return{...doc.data()}\n\n                                              })\n\n                                                console.log(soloTag)\n                                                let nuevoObjeto={  ...soloTag,\n                                                        contar:soloTag.contar-1}\n\n                                                  console.log(nuevoObjeto)\n\n                                                firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                        }).catch((error) => {\n                                            console.error(\"Error removing document: \", error);\n                                        });\n\n\n                                    })\n\n\n\n\n\n\n\n\n                                   try {\n                                        var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)\n                                        var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)\n\n\n                                   } catch (error) {\n                                    console.log(error)\n                                   }\n\n\n\n\n                              console.log(borrarArchivo)\n                              console.log(borrarImagen)\n\n\n                                   if(borrarArchivo!=undefined){\n                                                borrarArchivo.delete().then(function() {\n                                                        //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                }).catch(function(error) {\n\n                                                                console.log(error)\n                                                        //console.log(error)\n                                                        // Uh-oh, an error occurred!m\n                                                });\n\n                                        }\n                                if(borrarImagen!=undefined){\n\n\n                                                if(e.imagen!=null){ borrarImagen.delete().then(function() {\n                                                                //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                        }).catch(function(error) {\n                                                                console.log(error)\n                                                        // Uh-oh, an error occurred!\n                                                        }); }\n                                }\n\n\n                  Swal.fire({title:'Borrado!', confirmButtonColor:'#21cbce',icon: 'success'}).then(()=>{\n                          pedirpaper()\n                  })\n                } else if (result.isDenied) {\n\n                }\n              })\n\n\n}\n\n useEffect(() => {\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\n\n\n  // LLAMAR A LOS PAPER\n\n\n\n  listadepaper(recientes, populares)\n\n\n\n                // if(props.busqueda!=undefined){\n                //         const texto_busqueda=props.busqueda.buscado\n                //         buscarTexto(texto_busqueda,props.recientes,props.valorados)\n                // }\n                //else{\n                // pedirpaper()\n                // }\n\n                //    console.log(listapaper)\n                //    setlistapaper([])\n\n }, [props.recientes,props.paperid,props.busqueda])\n\n const funcionCorazon=(valor)=>{\n\n        let votos_usuarios=[]\n\n        if(valor.haVotado==undefined){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n        votos_usuarios=valor.haVotado\n        if(votos_usuarios.length==0){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n                if(usuario!=undefined){\n                if(votos_usuarios.includes(usuario.uid)){\n                        return true\n                }else{\n                        return false\n                }}\n\n        }\n}\n\n\n\n }\n\n const funcionCorazondos=(valor)=>{\n             if(valor.likes>0){\n                 return true       \n             }else{\n                return false\n             }\n }\n\n  const pedirMas=async()=>{\n                setcargandodos(true)\n                const recientes=props.recientes\n                const valorados=props.valorados\n                const paperRef=firebase.db.collection(\"paper\")\n\n\n        try {\n\n                if(recientes){\n\n\n\n\n                        return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                        {\n                           //     console.log(doc)\n                          var valoradosOrdenados = await paperRef.orderBy(\"subida\",\"desc\").startAfter(doc).limit(5).get()\n\n                                if(valoradosOrdenados.size!=0){\n\n                             //      console.log(valoradosOrdenados)\n                                 const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                 setultimoDocumento(lista[lista.length-1].id)\n                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                                 setcargandodos(false)\n                        }else{\n\n                                setvacio(false)\n                                setcargandodos(false)\n                          }\n\n                        }\n                        )\n\n\n\n\n\n\n                }else{\n\n\n                        if(valorados){\n\n\n\n                                // const valoradosRef=firebase.db.collection(\"paper\")\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"likes\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                           console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n                                // firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimoDocumento).limit(5).get().then((coleccion)=>\n                                // {\n\n\n                                //                 console.log(\"dentro de la coleccion \")\n\n                                //             if(coleccion.size!=0){\n\n                                //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                //                         setultimoDocumento(lista[lista.length-1].likes)\n                                //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                                //                 }else{\n\n                                //                       setvacio(true)\n                                //                 }\n                                // }\n\n                                // )\n                        }else{\n\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        //console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"id\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                          // console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n\n\n\n\n\n                                // comentar\n                        //       firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimoDocumento).limit(1).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1])\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                        //                         }else{\n\n                        //                               setvacio(true)\n                        //                         }\n                        //         }\n\n                        //         )\n                        }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n\n  }\n\n\n // buscar por id del paper\n\n  const buscarPorId=async(id)=>{\n//  alert(id)\n  var variable=await firebase.db.collection(\"paper\").doc(id)\n //console.log(variable)\n\n\n variable.get().then((doc) => {\n        // Document was found in the cache. If no cached document exists,\n        // an error will be returned to the 'catch' block below.\n       // console.log(\"Cached document data:\", doc.data());\n        setlistapaper([doc.data()])\n\n        setcargando(false)\n        setvacio(false)\n\n    }).catch((error) => {\n        console.log(\"Error getting cached document:\", error);\n    });\n\n\n\n  }\n\n\n  const buscarChips=(valor)=>{\n\n\n        history.push(`/tag/${valor.id}`)\n\n  }\n\n\n\nconst megusta=(valor)=>{\n\n\n        // if(usuario==null) {\n        //         return history.push(\"/login\")\n        // }\n\n\n\n\n          console.log(valor.haVotado)\n\n        if(valor.haVotado==undefined){\n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n\n     if(antiguoHaVotado.includes(usuario.uid)){\n             console.log(antiguoHaVotado)\n\n        antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                return obj!==usuario.uid\n        })\n        valor.likes=valor.likes-1\n\n        let  nuevoValor={\n                ...valor,\n                 likes:valor.likes,\n                haVotado:antiguoHaVotado\n        }\n\n\n        firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n\n        // armar de nuevo el arreglo con el valor\n\n         armararreglo(nuevoValor)\n\n       // mapear etiquetas\n\n        valor.etiquetas.map(valordos=>{\n                firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                       haVotado:antiguoHaVotado\n\n                })\n        })\n\n\n         //setpaper({...valor,likes:valor.likes})\n        // actualizar la etiquetas\n\n\n\n\n\n\n\n     }else{\n\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     valor.likes=valor.likes+1\n\n\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\nfirebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas\n\n      valor.etiquetas.map(valordos=>{\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n      }\n      console.log(\"final\")\n}\n\n\nconst megustaSinValidarUsuario=(valor)=>{\n    \n\n   if(valor.click){    \n     valor.likes=valor.likes-1\n     valor.click=false\n}else{\n     valor.likes=valor.likes+1\n     valor.click=true\n}\n\n     const nuevoHaVotado = [];\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\n\n\n\n       //guarda datos en el paper\n       firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n        likes:valor.likes,\n        haVotado:nuevoHaVotado\n\n})\n\n      // mapear etiquetas\n      valor.etiquetas.map(valordos=>{\n\n        //guarda datos  en las etiquetas\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n     // }\n      console.log(\"final\")\n}\n\nconst armararreglo=(nuevoValor)=>{\n\n\n                 let   nuevalista=listapaper.map(valor=>{\n\n                                if (nuevoValor.id==valor.id){\n\n                                        return{\n                                                ...nuevoValor\n                                        }\n                                }else{\n\n                                        return{ ...valor}\n                                }\n\n\n\n                 })\n\n\n                 console.log(nuevalista)\n                 setlistapaper(nuevalista)\n\n\n}\n\n\n\n    return (\n\n\n\n// <Button onClick={()=>{pedirMas()}} >\n//                             ver mas\n// </Button>\n\n<>\n{usuario?\n        <div>\n            {usuario.administrador? <div>\n             <BotonFlotante>\n            \n            </BotonFlotante>\n            </div>:\n            <div></div>\n            }\n        \n         </div>:\n         <></>\n     }\n\n\n\n        <div  className={clases.margen}>\n       \n                <div className={clases.divTituloGeneral}>\n                <Titulo></Titulo>\n                <Grid container>\n                <Grid xs={12} md={3} lg={6}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                        </Typography>\n                </Grid>\n\n                <Grid xs={12} md={9} lg={6}>\n                <div style={{margin:'10px 0px'}}>\n                <Button\n                id='mandarina'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Lastest\n      </Button> <Button\n         id='verde'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Popular\n      </Button>\n       <Button\n         id='morado'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        People\n      </Button> \n      <Button\n        id='azul'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Personal Health\n      </Button>\n\n\n                   </div>            \n\n                </Grid>\n                </Grid>\n                </div>\n\n                <Grid container>\n                    <Grid  xs={12}>\n                            {\n                            cargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                           { listapaper.length==0 ?\n                              <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>\n\n\n                           :\n\n                           <div>\n                                {\n\n                            listapaper.map((valor)=>(\n\n                                        <Paper key={valor.id} className={clases.caja} elevation={3}>\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={9}>\n\n\n                                                    <Grid container >    \n                                                        <Grid xs={12} sm={12} md={4} >\n                                                                <div  >\n\n                                                                {valor.imagen==null?\n\n                                                                <div className={clases.divFoto}>\n                                                                                < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n\n                                                                </div> :\n                                                                <div   className={clases.divImagen} style={{\n                                                                backgroundImage:`url(${valor.imagen})`,\n\n                                                                }} >\n\n\n                                                                        </div>\n\n                                                                }\n                                                                </div>\n                                                              \n\n                                                        </Grid>\n\n\n                                                        <Grid  xs={12} sm={12} md={8}>\n                                                        <div className={clases.divTexto}>\n                                                        \n                                                        <Typography variant=\"h5\" className={clases.titulo} >\n                                                                        {valor.info==true?\n\n                                                                        <a  style={{textDecoration:\"none\"}} href={`/information/${valor.id}`} >\n\n\n                                                                           {valor.titulo}\n                                                                        </a>        \n                                                                        :\n                                                                         valor.titulo\n                                                                        }\n                                                        </Typography>\n\n                                                                <Typography className={clases.fecha} variant=\"subtitle2\">\n                                                                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}\n                                                        </Typography>\n\n\n\n\n\n                                                        <Typography variant=\"body2\" className={clases.resumen}>\n                                                                {valor.resumen}\n                                                        </Typography>\n\n                                                    \n\n                                                        </div>\n\n                                                        </Grid>\n                                                                        \n                                                             \n                                                        <Grid xs={12} sm={12} md={4}>\n                                                                <Typography variant=\"subtitle1\" align=\"center\">  \n                                                                aplicaciones en :\n                                                                </Typography>\n\n                                                                \n                                                          </Grid>    \n\n                                                           <Grid xs={12} sm={12} md={8}>\n\n                                                                <Typography variant=\"subtitle1\">\n\n                                                                        {valor.etiquetas.map((valor)=>(\n                                                                        //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>\n                                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                                        //    </Link>\n                                                                                        ))}\n\n\n                                                                </Typography>\n                                                                \n                                                                \n                                                          </Grid>                     \n                                                     </Grid>\n                                                \n                                                \n                                                 </Grid>  \n                                        <Grid xs={12} sm={12} md={2}>\n                                                        <div className={clases.cajaMeGusta}>\n                                                                        <Typography className={clases.centrarComponente} variant=\"subtitle1\" >\n\n                                                                        <Button onClick={()=>megustaSinValidarUsuario(valor)}\n                                                                        className={clases.botonLikes}\n                                                                        startIcon={\n\n                                                                        funcionCorazondos(valor)?\n                                                                        // <CorazonLleno></CorazonLleno>\n                                                                        <>\n                                                                        <img height=\"25\" src={CorazonLleno}></img>\n                                                                        \n                                                                        </>\n                                                                        :\n\n                                                                        //  <Corazon></Corazon>\n                                                                        <>\n                                                                        <img  height=\"25\"  src={Corazon}></img>\n                                                                \n                                                                        </>\n\n                                                                }\n                                                                        >\n\n                                                                                {valor.likes}\n                                                                        </Button>\n\n                                                                        <Typography className={clases.textUpVote} variant='subtitle2' >\n                                                                        upvote\n                                                                        </Typography>\n                                                                        \n\n                                                        </Typography>\n                                                        </div>\n                                                \n                                                \n                                                \n                                                <div className={clases.botonPdf}>\n                                                        <Typography  className={clases.centrarComponente} variant=\"subtitle1\"\n                                                                >\n\n\n\n\n                                                        <a href={valor.pdf==null?\n                                                        valor.link:valor.pdf\n                                                        }  style={{textDecoration:\"none\"}} target=\"_blank\">\n                                                        <Button  className=\"botoneditar\" variant=\"contained\"\n\n                                                \n\n                                                        >\n\n                                                                get it\n                                                        </Button>\n\n                                                        </a>\n\n                                                        </Typography>\n                                                        </div>        \n\n                                                {usuario==null?\n\n\n\n                                                                <div></div>\n                                                                :\n\n\n                                                                usuario.administrador?\n\n                                                                <div className={clases.diveditarborrar}>\n\n                                                                <Grid container>\n\n                                                                        <Grid xs={6}>\n\n                                                                                <Typography variant=\"subtitle1\" align=\"center\">\n                                                                           \n                                                                                        {/* <Link to={`/editarpaper/${valor.id}`}> */}\n                                                                                                \n                                                                                                <BotonMenu setlistapaper={setlistapaper} id={valor.id}></BotonMenu>\n                                   \n\n                                                                                        {/* </Link> */}\n\n                                                                                </Typography>\n                                                                        </Grid>\n                                                                        <Grid  xs={6}>\n                                                                                <Typography variant=\"subtitle1\" align=\"center\">\n\n                                                                                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                                                                                        <Basurero></Basurero>\n                                                                                </IconButton>\n\n                                                                                </Typography>\n                                                                        </Grid>\n                                                                </Grid>\n                                                </div>\n\n                                                        :\n                                                        <div></div>\n\n                                                                }\n        </Grid>\n\n\n\n                                         </Grid>\n\n\n\n\n\n\n                                        </Paper>\n                            ))\n                            }\n\n\n\n\n\n\n\n\n\n                            </div>\n                         }\n\n                            {cargandodos?\n\n<div className={clases.divCircular} >\n<CircularProgress className={clases.circular}></CircularProgress>\n</div>\n\n\n\n:\n\n// vacio==true &&\n\n        <Typography align=\"center\">\n        <Button\n\n                endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                variant =\"contained\"\n                className=\"botonVerMas\"\n\n        onClick={()=>{\n                pedirMas()\n        }} >\n        See More\n\n                </Button>\n</Typography>   }\n\n\n\n\n\n\n                            </div>\n                            }\n\n\n\n\n                     </Grid>\n\n\n                </Grid>\n\n\n        </div>\n</>\n )\n}\n\nexport default Populares\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Recientes.jsx",["820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863"],"import React,{useEffect,useState} from 'react'\nimport {Grid,makeStyles, Typography, Button,IconButton,CircularProgress, setRef} from \"@material-ui/core\"\nimport Paper from '@material-ui/core/Paper';\nimport firebase from '../firebase/firebase'\nimport moment from 'moment'\nimport Swal from 'sweetalert2'\nimport {Chip} from '@material-ui/core'\nimport \"moment/locale/es\"\nimport SaveIcon from '@material-ui/icons/Save';\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {UsuarioContext} from \"../Provedores/UsuarioContext\"\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CorazonLleno from \"../imagen/iconos/arbolLleno.png\"\nimport Corazon from \"../imagen/iconos/arbolVacio.png\"\n import BotonMenu from '../Componetes/Tarjeta/BotonMenu'\n import BotonFlotante from '../Componetes/BotonFlotante';\nimport Titulo from '../Componetes/Titulo/Titulo';\n\n   \n      \n\n const  estilos = makeStyles((theme)=>({\n        button: {\n                margin: '3px'\n              },\n\n    margen:{\n\n            margin:\"0px auto \",\n\n\n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n      \n\n            \" & #mandarina .MuiSvgIcon-root\" :{\n              \n                color:\"#EC6933\",\n              \n            },\n            \" & #verde .MuiSvgIcon-root\" :{\n              \n                color:\"#4B9965\",\n              \n            },\n            \" & #morado .MuiSvgIcon-root\" :{\n              \n                color:\"#9372B6\",\n              \n            },\n            \" & #azul .MuiSvgIcon-root\" :{\n              \n                color:\"#4CA9B2\",\n              \n            },\n\n\n\n            \" & .MuiButton-containedPrimary\" :{\n              \n                color:\"#434343\",\n                backgroundColor:\"#ffffff\",\n                boxShadow:\"none\"\n            },\n          \n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n                marginTop:\"10px\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    }\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n        tituloGeneral:{\n\n        fontWeight:\"700\",\n        fontFamily:\"Lato\",\n        fontSize:\"27px\"\n        }\n,\ndivTituloGeneral:{\n        margin:\"0px auto\",\n        width:\"85vw\"\n},\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\ncontenedor:{\n        margin:\"18px auto\"\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n        position:\"absolute\",\n        bottom:\"0\",\n        right:\"9px\",\n        width:\"90px\"\n},\ndivFoto:{\n\n        width:\"250px\",\n        height:\"160px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\",\n        [theme.breakpoints.down(\"sm\")]:{\n                margin:\"30px auto\"\n        }\n    },\n    divImagen:{\n\n         height:\"160px\",\n         width:\"260px\",\n         backgroundSize:\"260px auto\",\n         backgroundRepeat:\"no-repeat\",\n         backgroundPosition:\"50%\",\n         borderRadius:\"16px\",\n         display:\"block\",\n         margin:\"auto\",\n         marginTop:\"15px\",\n         [theme.breakpoints.down(\"sm\")]:{\n                 marginTop:\"30px\"\n         }\n\n\n\n      },\n\n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    cajaMeGusta:{\n            position:'absolute',\n            top:'8px',\n            right:'12px',\n    [theme.breakpoints.down(\"sm\")]:{\n            position:'unset'\n    }\n\n\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    }\n    ,botonLikes:{\n        color:\"#35b37c\",\n        margin:\"8px 0px 0x 0px\",\n        border:\"1px solid\"\n\n\n    },\n    margenChip:{\n\n        margin:\"0px 3px\",\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        divTexto:{\n                [theme.breakpoints.down(\"md\")]:{\n\n                        margin:\"0vw 5vw 0\"\n                },\n\n\n\n                [theme.breakpoints.down(\"sm\")]:{\n\n                        margin:\"5vw 5vw 0\"\n                }\n        },\n        textNoDisponible:{\n\n\n                fontFamily:\"Nunito\",\n                color:\"#808080\"\n\n\n\n\n        },\n        centrarComponente:{\n                textAlign:\"end\",\n                marginRight:\"10px\",\n                [theme.breakpoints.down(\"md\")]:{\n\n                        textAlign:\"center\",\n                }\n\n        },\n        botonPdf:{\n                position:\"absolute\",\n                bottom:\"55px\",\n                right:'0px',\n                [theme.breakpoints.down(\"sm\")]:{\n                        position:'unset'\n                }\n        }\n,\n        textUpVote:{\n           fontFamily:\"nunito\",\n           textAlign:\"center\",\n           color:\"#808080\"     \n        }\n\n\n\n\n\n }))\n\n\n\n\nconst Populares = (props) => {\n\n    const history = useHistory();\n    const clases =estilos()\n    const recientes =true \n    const populares = false \n    const usuario =useContext(UsuarioContext)\n    const [listapaper,setlistapaper]=useState([])\n    const [cargando, setcargando] = useState(false)\n    const [cargandodos, setcargandodos] = useState(false)\n    const [paper, setpaper] = useState({})\n    const [ultimoDocumento, setultimoDocumento] = useState(0)\n   const [vacio, setvacio] = useState(false)\n   \n  const [tituloGeneral,setTituloGeneral]=useState(\"The Lastest\")\n\n\n\n  \n\n\n      \n const listadepaper=async(recientes,valorados)=>{\n        console.log(\"inicio\")\n    \n        try {\n\n        if(recientes){\n                setlistapaper([])\n                await firebase.db.collection(\"paper\").orderBy(\"subida\",\"desc\").limit\n                (5).get().then((coleccion)=>\n                {\n\n                            if(coleccion.size!=0){\n                                        console.log(\"paso por aca \")\n                                        const lista =coleccion.docs.map((paperObje)=>{return {...paperObje.data(),\n                                        click:false\n                                        }})\n                                        setultimoDocumento(lista[lista.length-1].id)\n                                        setlistapaper((listapaper)=>[...listapaper,...lista])\n                                        setcargando(false)\n\n                                }\n                                if(coleccion.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                }\n\n                )\n        }else{\n                if(valorados){\n                        setlistapaper([])\n                       await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n\n                         let nuevalista=[]\n                            await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                                nuevalista=valor.docs.map(doc=>{\n\n                                                          return{\n                                                                id:doc.id,\n                                                                ...doc.data()\n                                                            }\n\n                                })\n\n                                if(nuevalista.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                                if(nuevalista.length==0){\n                                        setultimoDocumento(0)\n                                }else{\n                                setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                                 }\n\n\n                           })\n\n\n\n\n                           console.log(\"paso por aca \")\n                        setlistapaper(nuevalista)\n\n\n\n\n\n\n                }\n\n\n        }\n\n        } catch (error) {\n                console.log(error)\n        }\n        console.log(\"final\")\n\n        setcargando(false)\n }\n\n//  const  manejarSnapshot=(snapshot)=>{\n\n\n\n//         console.log(listapaper)\n//         const  lista =snapshot.docs.map(doc=>{\n//             return{\n//                 id:doc.id,\n//                 ...doc.data()\n//             }\n//         })\n//         console.log(lista)\n//         setcargando(false)\n\n//                 if(lista.length!=0){\n//                         setvacio(false)\n//                         setultimoDocumento(lista[lista.length-1].id)\n\n//                 }else{\n\n//                         setvacio(true)\n\n//                 }\n//         setlistapaper(lista)\n//     }\n\n\n\n\n\n//nueva funcion de busqueda\n\nconst buscarTexto=async(texto_busqueda,recientes,valorados)=>{\n\n\n        setcargando(true)\n\n        try {\n\n                if(recientes){\n                        console.log(texto_busqueda)\n                        setlistapaper([])\n                        await firebase.db.collection(\"paper\").orderBy(\"busqueda\")\n                        .startAt(texto_busqueda).endAt(texto_busqueda+'\\uf8ff')\n                       .limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                console.log(lista)\n                                                console.log(listapaper)\n\n\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n                        // if(valorados){\n                        //         setlistapaper([])\n                        //        await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1].id)\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                        //                                 setcargando(false)\n\n                        //                         }\n                        //                         if(coleccion.length==5){\n                        //                                 setvacio(true)\n                        //                         }else{\n                        //                                 setvacio(false)\n                        //                         }\n\n                        //         }\n\n                        //         )\n                        // }else{\n\n                        //          let nuevalista=[]\n                        //             await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                        //                 nuevalista=valor.docs.map(doc=>{\n\n                        //                                           return{\n                        //                                                 id:doc.id,\n                        //                                                 ...doc.data()\n                        //                                             }\n\n                        //                 })\n\n                        //                 if(nuevalista.length==5){\n                        //                         setvacio(true)\n                        //                 }else{\n                        //                         setvacio(false)\n                        //                 }\n\n                        //                 if(nuevalista.length==0){\n                        //                         setultimoDocumento(0)\n                        //                 }else{\n                        //                 setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                        //                  }\n\n\n                        //            })\n\n\n\n\n                        //            console.log(\"paso por aca \")\n                        //         setlistapaper(nuevalista)\n\n\n\n\n\n\n                        // }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n                setcargando(false)\n\n\n\n}\n\n\nconst pedirpaper=()=>{\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\n  // LLAMAR A LOS PAPER\n\n  listadepaper(props.recientes,props.valorados)\n\n\n\n}\n\n\n\n\n\n\n\nconst borrar=(e)=>{\n\n\n\n\n        Swal.fire({\n                title: '¿Esta seguro que desea borrar el siguiente registro?',\n                text:`${e.titulo}`,\n                showDenyButton: true,\n                confirmButtonColor: '#21cbce',\n                confirmButtonText: `Borrar`,\n                denyButtonText: `Cancelar`,\n              }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n\n                 if (result.isConfirmed) {\n                                firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                        let nuevaLista=[]\n                                        listapaper.map((valor)=>{\n                                                        if(valor.id!=e.id){\n                                                                console.log(valor)\n                                                                nuevaLista.push(valor)\n                                                        }\n\n                                        })\n\n\n                                        //pedirpaper()\n\n                                console.log(\"borrado\")\n\n                                }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n\n\n                                e.etiquetas.map( valor=>{\n\n                                        firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                             //  console.log(\"Document successfully deleted!\");\n\n\n\n                                              let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                        return{...doc.data()}\n\n                                              })\n\n                                                console.log(soloTag)\n                                                let nuevoObjeto={  ...soloTag,\n                                                        contar:soloTag.contar-1}\n\n                                                  console.log(nuevoObjeto)\n\n                                                firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                        }).catch((error) => {\n                                            console.error(\"Error removing document: \", error);\n                                        });\n\n\n                                    })\n\n\n\n\n\n\n\n\n                                   try {\n                                        var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)\n                                        var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)\n\n\n                                   } catch (error) {\n                                    console.log(error)\n                                   }\n\n\n\n\n                              console.log(borrarArchivo)\n                              console.log(borrarImagen)\n\n\n                                   if(borrarArchivo!=undefined){\n                                                borrarArchivo.delete().then(function() {\n                                                        //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                }).catch(function(error) {\n\n                                                                console.log(error)\n                                                        //console.log(error)\n                                                        // Uh-oh, an error occurred!m\n                                                });\n\n                                        }\n                                if(borrarImagen!=undefined){\n\n\n                                                if(e.imagen!=null){ borrarImagen.delete().then(function() {\n                                                                //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                        }).catch(function(error) {\n                                                                console.log(error)\n                                                        // Uh-oh, an error occurred!\n                                                        }); }\n                                }\n\n\n                  Swal.fire({title:'Borrado!', confirmButtonColor:'#21cbce',icon: 'success'}).then(()=>{\n                          pedirpaper()\n                  })\n                } else if (result.isDenied) {\n\n                }\n              })\n\n\n}\n\n\n\n\n useEffect(() => {\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\n\n\n  // LLAMAR A LOS PAPER\n\n\n\n  listadepaper(recientes, populares)\n\n\n\n                // if(props.busqueda!=undefined){\n                //         const texto_busqueda=props.busqueda.buscado\n                //         buscarTexto(texto_busqueda,props.recientes,props.valorados)\n                // }\n                //else{\n                // pedirpaper()\n                // }\n\n                //    console.log(listapaper)\n                //    setlistapaper([])\n\n }, [props.recientes,props.paperid,props.busqueda])\n\n\n\n\n const funcionCorazon=(valor)=>{\n\n        let votos_usuarios=[]\n\n        if(valor.haVotado==undefined){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n        votos_usuarios=valor.haVotado\n        if(votos_usuarios.length==0){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n                if(usuario!=undefined){\n                if(votos_usuarios.includes(usuario.uid)){\n                        return true\n                }else{\n                        return false\n                }}\n\n        }\n}\n\n\n\n }\n\n\n\n\n const funcionCorazondos=(valor)=>{\n\n             if(valor.likes>0){\n                 return true       \n             }else{\n                return false\n             }\n\n\n\n }\n\n\n\n\n\n  const pedirMas=async()=>{\n                setcargandodos(true)\n                const recientes=props.recientes\n                const valorados=props.valorados\n                const paperRef=firebase.db.collection(\"paper\")\n\n\n        try {\n\n                if(recientes){\n\n\n\n\n                        return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                        {\n                           //     console.log(doc)\n                          var valoradosOrdenados = await paperRef.orderBy(\"subida\",\"desc\").startAfter(doc).limit(5).get()\n\n                                if(valoradosOrdenados.size!=0){\n\n                             //      console.log(valoradosOrdenados)\n                                 const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                 setultimoDocumento(lista[lista.length-1].id)\n                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                                 setcargandodos(false)\n                        }else{\n\n                                setvacio(false)\n                                setcargandodos(false)\n                          }\n\n                        }\n                        )\n\n\n\n\n\n\n                }else{\n\n\n                        if(valorados){\n\n\n\n                                // const valoradosRef=firebase.db.collection(\"paper\")\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"likes\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                           console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n                                // firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimoDocumento).limit(5).get().then((coleccion)=>\n                                // {\n\n\n                                //                 console.log(\"dentro de la coleccion \")\n\n                                //             if(coleccion.size!=0){\n\n                                //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                //                         setultimoDocumento(lista[lista.length-1].likes)\n                                //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                                //                 }else{\n\n                                //                       setvacio(true)\n                                //                 }\n                                // }\n\n                                // )\n                        }else{\n\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        //console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"id\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                          // console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n\n\n\n\n\n                                // comentar\n                        //       firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimoDocumento).limit(1).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1])\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                        //                         }else{\n\n                        //                               setvacio(true)\n                        //                         }\n                        //         }\n\n                        //         )\n                        }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n\n  }\n\n\n // buscar por id del paper\n\n  const buscarPorId=async(id)=>{\n//  alert(id)\n  var variable=await firebase.db.collection(\"paper\").doc(id)\n //console.log(variable)\n\n\n variable.get().then((doc) => {\n        // Document was found in the cache. If no cached document exists,\n        // an error will be returned to the 'catch' block below.\n       // console.log(\"Cached document data:\", doc.data());\n        setlistapaper([doc.data()])\n\n        setcargando(false)\n        setvacio(false)\n\n    }).catch((error) => {\n        console.log(\"Error getting cached document:\", error);\n    });\n\n\n\n  }\n\n\n  const buscarChips=(valor)=>{\n\n\n        history.push(`/tag/${valor.id}`)\n\n  }\n\n\n\nconst megusta=(valor)=>{\n\n\n        // if(usuario==null) {\n        //         return history.push(\"/login\")\n        // }\n\n\n\n\n          console.log(valor.haVotado)\n\n        if(valor.haVotado==undefined){\n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n\n     if(antiguoHaVotado.includes(usuario.uid)){\n             console.log(antiguoHaVotado)\n\n        antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                return obj!==usuario.uid\n        })\n        valor.likes=valor.likes-1\n\n        let  nuevoValor={\n                ...valor,\n                 likes:valor.likes,\n                haVotado:antiguoHaVotado\n        }\n\n\n        firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n\n        // armar de nuevo el arreglo con el valor\n\n         armararreglo(nuevoValor)\n\n       // mapear etiquetas\n\n        valor.etiquetas.map(valordos=>{\n                firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                       haVotado:antiguoHaVotado\n\n                })\n        })\n\n\n         //setpaper({...valor,likes:valor.likes})\n        // actualizar la etiquetas\n\n\n\n\n\n\n\n     }else{\n\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     valor.likes=valor.likes+1\n\n\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\nfirebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas\n\n      valor.etiquetas.map(valordos=>{\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n      }\n      console.log(\"final\")\n}\n\n\nconst megustaSinValidarUsuario=(valor)=>{\n    \n\n   if(valor.click){    \n     valor.likes=valor.likes-1\n     valor.click=false\n}else{\n     valor.likes=valor.likes+1\n     valor.click=true\n}\n\n     const nuevoHaVotado = [];\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\n\n\n\n       //guarda datos en el paper\n       firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n        likes:valor.likes,\n        haVotado:nuevoHaVotado\n\n})\n\n      // mapear etiquetas\n      valor.etiquetas.map(valordos=>{\n\n        //guarda datos  en las etiquetas\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n     // }\n      console.log(\"final\")\n}\n\nconst armararreglo=(nuevoValor)=>{\n\n\n                 let   nuevalista=listapaper.map(valor=>{\n\n                                if (nuevoValor.id==valor.id){\n\n                                        return{\n                                                ...nuevoValor\n                                        }\n                                }else{\n\n                                        return{ ...valor}\n                                }\n\n\n\n                 })\n\n\n                 console.log(nuevalista)\n                 setlistapaper(nuevalista)\n\n\n}\n\n\n\n    return (\n\n\n\n// <Button onClick={()=>{pedirMas()}} >\n//                             ver mas\n// </Button>\n\n\n\n\n\n        <div  className={clases.margen}>\n                {usuario?\n        <div>\n            {usuario.administrador? <div>\n             <BotonFlotante>\n            \n            </BotonFlotante>\n            </div>:\n            <div></div>\n            }\n        \n         </div>:\n         <></>\n     }\n\n\n                <div className={clases.divTituloGeneral}>\n\n                <Titulo></Titulo>\n\n                <Grid container>\n                <Grid xs={12} md={3} lg={6}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                        </Typography>\n                </Grid>\n\n                <Grid xs={12} md={9} lg={6}>\n                <div style={{margin:\"10px 0px\"}}>\n                <Button\n                id='mandarina'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Lastest\n      </Button> <Button\n         id='verde'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Popular\n      </Button>\n       <Button\n         id='morado'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        People\n      </Button> \n      <Button\n        id='azul'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        className={clases.button}\n        startIcon={<SaveIcon />}\n      >\n        Personal Health\n      </Button>\n\n\n              </div>                 \n\n                </Grid>\n                </Grid>\n                </div>\n\n                <Grid container>\n                    <Grid  xs={12}>\n                            {\n                            cargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                           { listapaper.length==0 ?\n                              <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>\n\n\n                           :\n\n                           <div>\n                                {\n\n                            listapaper.map((valor)=>(\n\n                                        <Paper key={valor.id} className={clases.caja} elevation={3}>\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={9}>\n\n\n                                                    <Grid container >    \n                                                        <Grid xs={12} sm={12} md={4} >\n                                                                <div  >\n\n                                                                {valor.imagen==null?\n\n                                                                <div className={clases.divFoto}>\n                                                                                < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n\n                                                                </div> :\n                                                                <div   className={clases.divImagen} style={{\n                                                                backgroundImage:`url(${valor.imagen})`,\n\n                                                                }} >\n\n\n                                                                        </div>\n\n                                                                }\n                                                                </div>\n                                                              \n\n                                                        </Grid>\n\n\n                                                        <Grid  xs={12} sm={12} md={8}>\n                                                        <div className={clases.divTexto}>\n                                                        \n                                                        <Typography variant=\"h5\" className={clases.titulo} >\n                                                                        {valor.info==true?\n\n                                                                        <a  style={{textDecoration:\"none\"}} href={`/information/${valor.id}`} >\n\n\n                                                                           {valor.titulo}\n                                                                        </a>        \n                                                                        :\n                                                                         valor.titulo\n                                                                        }\n                                                        </Typography>\n\n                                                                <Typography className={clases.fecha} variant=\"subtitle2\">\n                                                                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}\n                                                        </Typography>\n\n\n\n\n\n                                                        <Typography variant=\"body2\" className={clases.resumen}>\n                                                                {valor.resumen}\n                                                        </Typography>\n\n                                                    \n\n                                                        </div>\n\n                                                        </Grid>\n                                                                        \n                                                             \n                                                        <Grid xs={12} sm={12} md={4}>\n                                                                <Typography variant=\"subtitle1\" align=\"center\">  \n                                                                aplicaciones en :\n                                                                </Typography>\n\n                                                                \n                                                          </Grid>    \n\n                                                           <Grid xs={12} sm={12} md={8}>\n\n                                                                <Typography variant=\"subtitle1\">\n\n                                                                        {valor.etiquetas.map((valor)=>(\n                                                                        //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>\n                                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                                        //    </Link>\n                                                                                        ))}\n\n\n                                                                </Typography>\n                                                                \n                                                                \n                                                          </Grid>                     \n                                                     </Grid>\n                                                \n                                                \n                                                 </Grid>  \n                                        <Grid xs={12} sm={12} md={2}>\n                                                        <div className={clases.cajaMeGusta}>\n                                                                        <Typography className={clases.centrarComponente} variant=\"subtitle1\" >\n\n                                                                        <Button onClick={()=>megustaSinValidarUsuario(valor)}\n                                                                        className={clases.botonLikes}\n                                                                        startIcon={\n\n                                                                        funcionCorazondos(valor)?\n                                                                        // <CorazonLleno></CorazonLleno>\n                                                                        <>\n                                                                        <img height=\"25\" src={CorazonLleno}></img>\n                                                                        \n                                                                        </>\n                                                                        :\n\n                                                                        //  <Corazon></Corazon>\n                                                                        <>\n                                                                        <img  height=\"25\"  src={Corazon}></img>\n                                                                \n                                                                        </>\n\n                                                                }\n                                                                        >\n\n                                                                                {valor.likes}\n                                                                        </Button>\n\n                                                                        <Typography className={clases.textUpVote} variant='subtitle2' >\n                                                                        upvote\n                                                                        </Typography>\n                                                                        \n\n                                                        </Typography>\n                                                        </div>\n                                                \n                                                \n                                                \n                                                <div className={clases.botonPdf}>\n                                                        <Typography  className={clases.centrarComponente} variant=\"subtitle1\"\n                                                                >\n\n\n\n\n                                                        <a href={valor.pdf==null?\n                                                        valor.link:valor.pdf\n                                                        }  style={{textDecoration:\"none\"}} target=\"_blank\">\n                                                        <Button  className=\"botoneditar\" variant=\"contained\"\n\n                                                \n\n                                                        >\n\n                                                                get it\n                                                        </Button>\n\n                                                        </a>\n\n                                                        </Typography>\n                                                        </div>        \n\n                                                {usuario==null?\n\n\n\n                                                                <div></div>\n                                                                :\n\n\n                                                                usuario.administrador?\n\n                                                                <div className={clases.diveditarborrar}>\n\n                                                                <Grid container>\n\n                                                                        <Grid xs={6}>\n\n                                                                                <Typography variant=\"subtitle1\" align=\"center\">\n                                                                           \n                                                                                        {/* <Link to={`/editarpaper/${valor.id}`}> */}\n                                                                                                \n                                                                                                <BotonMenu setlistapaper={setlistapaper} id={valor.id}></BotonMenu>\n                                   \n\n                                                                                        {/* </Link> */}\n\n                                                                                </Typography>\n                                                                        </Grid>\n                                                                        <Grid  xs={6}>\n                                                                                <Typography variant=\"subtitle1\" align=\"center\">\n\n                                                                                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                                                                                        <Basurero></Basurero>\n                                                                                </IconButton>\n\n                                                                                </Typography>\n                                                                        </Grid>\n                                                                </Grid>\n                                                </div>\n\n                                                        :\n                                                        <div></div>\n\n                                                                }\n        </Grid>\n\n\n\n                                         </Grid>\n\n\n\n\n\n\n                                        </Paper>\n                            ))\n                            }\n\n\n\n\n\n\n\n\n\n                            </div>\n                         }\n\n                            {cargandodos?\n\n<div className={clases.divCircular} >\n<CircularProgress className={clases.circular}></CircularProgress>\n</div>\n\n\n\n:\n\n// vacio==true &&\n\n        <Typography align=\"center\">\n        <Button\n\n                endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                variant =\"contained\"\n                className=\"botonVerMas\"\n\n        onClick={()=>{\n                pedirMas()\n        }} >\n        See More\n\n                </Button>\n</Typography>   }\n\n\n\n\n\n\n                            </div>\n                            }\n\n\n\n\n                     </Grid>\n\n\n                </Grid>\n\n\n        </div>\n\n )\n}\n\nexport default Populares\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/WhyPag.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Why/Componentes.jsx",["864"],"import React from 'react'\nimport {Grid, Typography} from '@material-ui/core'\nimport Estilos from '../Estilos'\n\n\n\n\n\n\nconst Componentes = (props) => {\n    const estilos=Estilos()\n    return (\n        \n\n                <Grid  xs={12} md={4}>\n                \n                    <div className={estilos.divImgWhy}>\n                        <img style={{width:'100%',height:'100%'}} src={props.componentes.foto}></img>\n                    </div>\n\n                    <Typography align=\"center\" variant=\"h6\">\n                    {props.componentes.titulo}\n\n                    </Typography>\n                    <Typography align=\"center\" variant=\"subtitle1\">\n                    {props.componentes.descripcion}\n                    </Typography>\n                    \n                 </Grid>\n              \n            \n            \n        \n    )\n}\n\nexport default Componentes\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Why/Why.jsx",["865","866"],"import React,{useEffect,useState} from 'react'\nimport {Typography} from '@material-ui/core'\nimport Estilos from '../Estilos'\n\nconst Why = (props) => {\n\n        const estilos=Estilos()\n\n    \n\n\n\n\n\n    return (\n        <div>\n\n            <Typography className={estilos.tituloWhy} variant=\"h5\" align=\"center\">\n                    {props.cabeza.titulo}\n            </Typography>\n            <Typography className={estilos.descripcionWhy} variant=\"h6\" align=\"center\">\n                    {props.cabeza.descripcion}\n            </Typography>\n            \n        </div>\n    )\n}\n\nexport default Why\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/WhyPagAdmin.jsx",["867"],"import React,{useState,useEffect} from 'react'\nimport {Grid,TextField,Button} from '@material-ui/core'\nimport Estilos from '../../Componetes/Estilos'\nimport AdminComponentes from './AdminComponentes'\nimport FuncionesFirebase from '../../Funciones/FuncionesFirebase'\nimport Swal from 'sweetalert2'\nimport Cargando from '../../Componetes/Cargando'\n\n\n\n\n\n\n\nconst WhyPagAdmin = (props) => {\n    const estilos=Estilos()\n    const [cargando, setcargando] = useState(true)\n    const [cargandoGuardar, setcargandoGuardar] = useState(false)\n    const [principal, setPrincipal] = useState({\n        titulo:'',descripcion:''\n    })\n    const [componente, setcomponente] = useState([])\n    const actualizarStatePrincipal=(e)=>{\n        e.preventDefault()\n        setPrincipal({...principal,\n        [e.target.name]:e.target.value\n        })\n    }\nconst armarLista=async()=>{\n      let listaComp=[]\n      let compUno=await FuncionesFirebase.pedirComponenteUno()\n      let compDos=await FuncionesFirebase.pedirComponenteDos()\n      let compTres=await FuncionesFirebase.pedirComponenterTres()\n      listaComp.push(compUno,compDos,compTres)\n      setcomponente(listaComp)\n      setcargando(false)\n}\nconst editarCabeza=async()=>{\n    setcargandoGuardar(true)\n    try{\n        await FuncionesFirebase.editarCabeza(principal)\n            Swal.fire(\n                'Exito!',\n                'Los cambios se realizaron con exito',\n                \"success\"\n\n            )\n            setcargandoGuardar(false)\n    }\n    catch(e){\n        console.log(\"hubo en un error\")\n    }\n}\n    useEffect(async() => {\n            let consultaCabeza=await FuncionesFirebase.pedirCabeza()\n             setPrincipal(consultaCabeza)\n            //peticiones a la base de datos\n            armarLista()\n             //setPrincipal(prin)      \n            // setcomponente(list)         \n           \n    }, [])\n    return (\n        <div className={estilos.cajaAdminWhy} >\n            <Grid container>\n                <Grid  sm={2} xs={12}> </Grid>\n                <Grid sm={8} xs={12}>\n\n\n                {cargando ?\n                    <Cargando></Cargando>\n                    :\n\n                \n                    <>\n                     {cargandoGuardar ?\n                        <Cargando></Cargando>\n                        :\n                        <>  \n                    <TextField \n                        variant='outlined'\n                        label='Titulo'\n                        name=\"titulo\"\n                        fullWidth\n                        onChange={actualizarStatePrincipal}\n                        value={principal.titulo}\n                    >\n\n                    </TextField>\n                    <TextField \n                        variant='outlined'\n                        label='Descripcion'\n                        name='descripcion'\n                        fullWidth\n                        multiline\n                        onChange={actualizarStatePrincipal}\n                        rowsMax={8}\n                        value={principal.descripcion}\n        \n                    ></TextField>\n                \n\n                <Button\n                    className={estilos.botonVerde}\n                     onClick={()=>{\n                         editarCabeza()\n                     }}       \n                >\n\n                        Guardar        \n                </Button>\n                </> }\n                 {componente.map((doc,index)=>(\n \n                        <AdminComponentes key={doc.titulo} index={index} componente={doc}  componentes={componente} >\n                                            \n                        </AdminComponentes>        \n\n\n                 ))\n                 }               \n            \n                    \n                </>  \n            }\n                </Grid>\n                <Grid sm={2} xs={12}></Grid>\n            </Grid>\n\n\n        </div>\n    )\n}\n\nexport default WhyPagAdmin\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/AdminComponentes.jsx",["868","869","870"],"import React,{useState} from 'react'\nimport {Grid,TextField,Button,Typography} from '@material-ui/core'\nimport Estilos from '../../Componetes/Estilos'\nimport FuncionesFirebase from '../../Funciones/FuncionesFirebase'\nimport Swal from 'sweetalert2'\nimport Cargando from '../../Componetes/Cargando'\n\nconst AdminComponentes = (props) => {\nconst estilos=Estilos()\nconst [guardarCargando, setguardarCargando] = useState(false)\nconst [state, setstate] = useState(props.componente)\nconst [imagen, setimagen] = useState({file:null,imagen:null})\nconst index=props.index\nconst actualizar=(e)=>{\n    e.preventDefault()\n    setstate({...state,[e.target.name]:e.target.value})\n}\n\nconst cambiarImagen=imagen=>{\n    const agregarImagen=imagen.target.files[0]\n    if(agregarImagen!=undefined){\n        setimagen({imagen:agregarImagen,file:URL.createObjectURL(agregarImagen)})\n        setstate({...state,\n            foto:URL.createObjectURL(agregarImagen)  \n        })\n    }\n}\nconst editarComponente=async()=>{    \n    setguardarCargando(true)\n\n    try{\n        switch(index){\n            case 0:\n            if(imagen.imagen!==null){   \n            let prueba= await FuncionesFirebase.subirImagenWhy('ComponenteUno',imagen)\n            state.foto=prueba\n             }\n            await FuncionesFirebase.editarComponenteUno(state)  \n            break;\n            case 1:\n\n            if(imagen.imagen!==null){\n            state.foto=await FuncionesFirebase.subirImagenWhy(\"ComponenteDos\",imagen)\n            }\n            await FuncionesFirebase.editarComponenteDos(state)  \n            break\n            case 2:\n            if(imagen.imagen!==null){\n            state.foto=await FuncionesFirebase.subirImagen('ComponenteTres',imagen)\n            }\n            await FuncionesFirebase.editarComponenteTres(state)\n            break\n        }\n\n        Swal.fire('Exito!','se han guardados los cambios','success')\n        setguardarCargando(false)\n    \n    }catch(e){\n        console.log(\"hubo un error\")\n        console.log(e)\n        Swal.fire(\"Error\",\"ups! ha ocurrido un error\",\"error\")\n    }\n}\n\n\n    return (\n        <div className={estilos.margenAdmynWhy}>\n\n            {guardarCargando ?\n            \n                <Cargando></Cargando>\n                :\n                <Grid container>\n                <Grid xs={12} md={4}>\n                \n                    <div>\n                    <div className={estilos.divImgWhyDos}>     \n                    <img src={state.foto} style={{width:'100%',height:'100%'}} ></img>           \n                    </div>\n                    <div>\n                        <Typography align=\"center\" >\n\n                        <input \n                            type=\"file\"\n                            id={\"subir\"+index}\n                            accept=\"image/*\"\n                            style={{display:\"none\"}}\n                            onChange={(e)=>cambiarImagen(e)}\n                        />\n\n                         <Button\n                            variant='outlined'\n                            className={estilos.botonVerde + ' '+estilos.margenBotonImagen}\n                         >\n                           <label \n                            htmlFor={\"subir\"+index}\n                           >     \n                             Cambiar imagen\n                           </label>     \n                         </Button>\n                        </Typography>    \n                    </div>\n                    </div>\n                </Grid> \n                <Grid xs={12} md={8}>        \n                       <TextField\n                        fullWidth\n                        value={state.titulo}  \n                        variant='outlined'\n                        label='Titulo'\n                        name='titulo'\n                        onChange={actualizar}\n                       >\n                        </TextField>     \n                        <TextField\n                        onChange={actualizar}\n                        fullWidth\n                        value={state.descripcion}  \n                        variant='outlined'\n                        label='Descripcion'\n                        name='descripcion'\n                        multiline \n                        rowsMax={8}\n                       >\n                        </TextField>                         \n                </Grid> \n                <Grid xs={12} md={12}>\n                    <Typography align=\"right\">\n                    <Button variant='outlined   ' className={estilos.botonVerde}\n                    onClick={()=>editarComponente()}                 \n                    >\n                    Guardar\n                    </Button>\n                    </Typography>\n\n                 \n                </Grid>\n            </Grid>\n                \n        }\n\n          \n          \n        </div>\n    )\n}\n\nexport default AdminComponentes\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/Dialogo.jsx",["871","872","873","874","875","876"],"import React ,{ useState,useEffect}from 'react'\n// import Button from '@mui/material/Button';\n// import TextField from '@mui/material/TextField';\n// import Dialog from '@mui/material/Dialog';\n// import DialogActions from '@mui/material/DialogActions';\n// import DialogContent from '@mui/material/DialogContent';\n// import DialogContentText from '@mui/material/DialogContentText';\n// import DialogTitle from '@mui/material/DialogTitle';\nimport {Button,TextField,Dialog,DialogActions,DialogContent,DialogContentText,DialogTitle} from '@material-ui/core'\nimport Estilos from '../Estilos'\nimport FuncionesFirebase from '../../Funciones/FuncionesFirebase'\nimport Swal from \"sweetalert2\"\nimport Cargando from '../Cargando'\n\n\nconst Dialogo = (props) => {\n    const estilos=Estilos()\n    const [state, setstate] = useState({\n        usuario:\"\",\n        website:\"\",\n        comentario:\"\"\n    })\n    const [cargando, setcargando] = useState(false)\n    const [abierto, setabierto] = useState(props.abierto)\n    const [errores, setErrores] = useState([])\n    const handleClose=props.cerrar\n    useEffect(() => {   \n        setabierto(props.abierto)\n\n    }, [props])\n\n\n    const validaciones=()=>{\n\n        console.log(state)\n        let err=[]\n        var regex= /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/\n       \n        if(state.usuario.trim()==\"\"){\n\n            err.usuario='please enter a name'\n\n        }\n        if(state.website.trim()==\"\"){\n            err.website='please enter a url'\n        }\n            else\n        {\n            if(!regex.test(state.website))\n            err.website='please enter valid url'\n        }\n        if(state.comentario.trim()==''){\n            err.comentario='please enter comment'\n        }\n        return err\n    }\n    const actualizarState=(e)=>{\n        e.preventDefault()\n        setstate({...state,[e.target.name]:e.target.value})\n    }\n    const guardarComentario=async()=>{\n\n        try{\n      \n           let err=validaciones()\n           console.log(err)\n           if(Object.keys(err).length){\n               setcargando(false)\n               setErrores(err)\n            \n           }else{ \n            setcargando(true)\n            state.fecha=new Date()\n            state.anonimo=true\n            await FuncionesFirebase.IngresarColaboracion(state).then(()=>{\n                Swal.fire(\"Exito\",\"informacion guardada\",\"success\")\n                handleClose()\n                setcargando(false)\n            })\n            }\n        }catch(e){\n            Swal.fire(\"Ups!\",\"ha ocurrido un error\",\"error\")\n            console.log(e)\n\n        }\n\n\n\n    }\n    return (\n        <div>\n        <Dialog open={abierto} onClose={handleClose}>\n\n         {cargando? \n            <>\n           <DialogTitle> wait a moment...</DialogTitle>\n       \n            </>:\n            <>\n            <DialogTitle>Grow your audience by including your environmental website in PlanetColab</DialogTitle>\n        <DialogContent>\n\n\n        {errores.usuario!=null? \n             <TextField\n             error\n             autoFocus\n             margin=\"dense\"\n             id=\"name\"\n             name=\"usuario\"\n             label=\"Name\"\n             fullWidth\n             variant=\"outlined\"\n             onChange={actualizarState}\n             helperText={errores.usuario}\n           />  \n            :\n            <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            name=\"usuario\"\n            label=\"Name\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={actualizarState}\n          \n          />      \n        }    \n        {errores.website!=null?\n\n            <TextField\n            error       \n            margin=\"dense\"\n            id=\"website\"\n            name='website'\n            label=\"Website\"\n            placeholder='https://www.example.com'\n            fullWidth\n            type=\"url\"\n            variant=\"outlined\"\n            onChange={actualizarState}\n            helperText={errores.website}\n            />\n\n            :\n            <TextField\n                    \n            margin=\"dense\"\n            id=\"website\"\n            name='website'\n            label=\"Website\"\n            placeholder='https://www.example.com'\n            fullWidth\n            type=\"url\"\n            variant=\"outlined\"\n            onChange={actualizarState}\n            />\n\n\n\n        }\n\n\n\n    {errores.comentario?\n    \n    <TextField\n    error\n    margin=\"dense\"\n    id=\"comentario\"\n    name='comentario'\n    placeholder=\"Please describe shortly the information included on your environmental website\"\n    fullWidth\n    variant=\"outlined\"\n    multiline\n    rowsMax={4}\n    rows={4}\n    onChange={actualizarState}\n    helperText={errores.comentario}\n  />:\n  <TextField\n  margin=\"dense\"\n  id=\"comentario\"\n  name='comentario'\n  placeholder=\"Please describe shortly the information included on your environmental website\"\n  fullWidth\n  variant=\"outlined\"\n  multiline\n  rowsMax={4}\n  rows={4}\n  onChange={actualizarState}\n/>\n\n    }\n\n        \n          \n        </DialogContent>\n        <DialogActions>\n          <Button className={estilos.botonRojoAlert} onClick={handleClose}>Cancel</Button>\n          <Button className={estilos.botonVerdeAlert} onClick={()=>guardarComentario()}>Send</Button>\n        </DialogActions>\n            \n            \n            </>\n        }   \n        \n      </Dialog>\n            \n        </div>\n    )\n}\n\nexport default Dialogo\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Titulo/Titulo.jsx",["877"],"import React ,{useState,useEffect} from 'react'\nimport FuncionesFirebase from '../../Funciones/FuncionesFirebase'\nimport {Typography} from '@material-ui/core'\nimport Estilos from '../Estilos'\nconst Titulo = () => {\n\n    const estilos = Estilos()\nconst [titulo, setTitulo] = useState({\n    titulo: '',\n    subtitulo:'',\n    descripcion:''\n})      \n\n\n\nuseEffect(async() => {\n   // pedir titulo a la base de datos  firebase\n    const consultaTitulo=await FuncionesFirebase.pedirTitulo();\n    setTitulo(consultaTitulo)\n\n\n\n}, [])\n\n\n    return (\n        <div className={estilos.tituloMargen}>\n            <Typography className={estilos.tituloSubtitulo} variant='h7' align='left'> \n                {titulo.subtitulo}\n             </Typography >\n             <Typography className={estilos.tituloTitulo} align=\"left\" variant=\"h4\">\n                 {titulo.titulo}\n             </Typography>\n             <Typography align=\"left\" variant=\"h6\">\n                 {titulo.descripcion}\n             </Typography>\n        </div>\n    )\n}\n\nexport default Titulo\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Titulo/Titulo.jsx",["878","879"],"import { TextField,Button,Grid  } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport FuncionesFirebase from '../../../Funciones/FuncionesFirebase'\nimport Swal from 'sweetalert2'\nimport Estilos from '../../../Componetes/Estilos'\n\n\nconst Titulo = (props) => {\n    const estilos=Estilos()\n    const [titulo, settitulo] = useState({\n        titulo:'',\n        subtitulo:'',\n        descripcion:''\n        \n    })\n\n   const actualizarState=(e)=>{\n       e.preventDefault()\n       settitulo({...titulo,[e.target.name]:e.target.value})\n   } \n\n\n\n   const tituloGuardar=async()=>{\n\n        try{\n            const query=await  FuncionesFirebase.guardarTitulo(titulo).then(()=>{\n                Swal.fire('Exito!','Informacion guardada','success')\n            })\n\n        }catch(e){\n            console.log(e)\n            Swal.fire(\"Error\",\"No se pudo guardar la informacion\",\"error\")\n        }\n\n   }\n\nuseEffect(async() => {\n   \n    const consulta =await FuncionesFirebase.pedirTitulo();\n    settitulo(consulta)\n}, [])\n\n\n\n    return (\n        <div>\n            <Grid container>\n            <Grid xs={1} md={2}></Grid>\n            <Grid xs={10} md={8}>\n             <TextField \n            className={estilos.tituloMargenInput}\n            onChange={actualizarState}\n            name='subtitulo'\n            label='Subtitulo'\n            value={titulo.subtitulo}\n            placeholder='ingrese subtitulo' \n            variant=\"outlined\"  \n            fullWidth           \n            >\n            </TextField>              \n            <TextField\n            className={estilos.tituloMargenInput}\n            value={titulo.titulo}\n            name='titulo'\n            label=\"Titulo\"\n            placeholder='ingrese  titulo'\n            onChange={actualizarState}\n            variant=\"outlined\"\n            fullWidth\n            >\n            </TextField>\n            <TextField\n            className={estilos.tituloMargenInput}\n            onChange={actualizarState}\n            name='descripcion'\n            label='Descripcion'\n\n            placeholder='ingrese la descripcion'\n            value={titulo.descripcion}\n            variant='outlined'\n            fullWidth\n            >\n            </TextField>\n            <Button onClick={()=>tituloGuardar()}\n            fullWidth\n            \n            className={estilos.tituloMargenInput + ' '+estilos.tituloBotonVerde}\n            >\n                    Guardar \n\n            </Button>\n            <Button\n            variant='contained'\n            className={estilos.tituloMargenInput +' ' +estilos.botonRojo}\n            onClick={()=>{props.history.push('/')}}\n            fullWidth>\n                volver\n            </Button>\n            </Grid>\n            <Grid xs={1} md={2}></Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Titulo\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Buscador.jsx",["880","881","882","883","884","885"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Buscador.jsx",["886","887","888","889","890","891","892","893","894","895","896"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Select.jsx",["897"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Tabla.jsx",["898","899","900","901","902","903"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/Navegacion.jsx",["904"],"import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport AdmEtiquetas from '../../AdmEtiquetas'\nimport AdmInformacion from './AdmInformacion'\nimport AdmRegion from './AdmRegion'\nimport MenuNav from './MenuNav'\nconst Navegacion = () => {\n    return (\n        <Router>\n        <div >\n            <MenuNav></MenuNav>\n           \n            <Switch>\n            <Route  path=\"/adminetiquetas/region\" component={AdmRegion}></Route>\n            <Route  path=\"/adminetiquetas/tipoinformacion\" component={AdmInformacion}></Route>\n            <Route  path=\"/\" component={AdmEtiquetas}></Route>\n\n            </Switch>\n           \n        </div>\n        </Router>\n    )\n}\n\nexport default Navegacion\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/MenuNav.jsx",["905","906","907","908","909","910","911","912"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/AdmInformacion.jsx",["913","914","915","916","917"],"import { Grid, Typography,Button,TextField } from '@material-ui/core'\nimport React,{useState,useEffect} from 'react'\nimport Swal from 'sweetalert2'\nimport FuncionesFirebase from '../../../Funciones/FuncionesFirebase'\nimport Formulario from './Formulario'\nimport Tabla from './Tabla'\nimport Cargando from '../../../Componetes/Cargando'\n\nconst AdmInformacion = () => {\n \n    const [informacion, setinformacion] = useState({descripcion:''})\n    const [errores, seterrores] = useState({descripcion:''})\n    const [tipoInformacion, settipoInformacion] = useState([])\n    const [cargando, setcargando] = useState(false)\n    const handleChange=(e)=>{\n        e.preventDefault()\n        setinformacion({...informacion,[e.target.name]:e.target.value})\n    }\n    const validar=()=>{\n        let err={}\n    if(informacion.descripcion.trim()==''){\n        err.descripcion='este campo es requerido'\n    }\n    return err\n    }\n    const Guardar=async()=>{\n        let erro=validar()\n        if(Object.keys(erro).length){\n            Swal.fire('Error','Ha ocurrido en un error','error')\n        \n        }else{\n            let repetido=await FuncionesFirebase.noRepeatInfo(informacion)\n            if(repetido){\n                Swal.fire('Dato repetido','El registro ya existe','warning')\n            }else{\n                GuardarInformacion()\n                Swal.fire('Exito!','Informacion Guardada','success')\n            }\n\n        }\n        seterrores(erro)\n    }\n// guardar en la base de datos \n    const GuardarInformacion=async()=>{\n        informacion.descripcion=informacion.descripcion.toLowerCase()\n        await FuncionesFirebase.guardarTopicoInformacion(informacion)\n        settipoInformacion([...tipoInformacion,informacion])\n        setinformacion({descripcion:''})\n\n    }\n    //  llamar a los tipo de informcion en un useEffect \n     const llamarTipoInformacion=async()=>{\n         let lista =[]\n         lista= await FuncionesFirebase.llamarTopicos()\n         settipoInformacion(lista)\n         \n     }\n\n     //borrar topico de informacion \n     const borrar=async(state)=>{\n        Swal.fire({\n            title: `Estas seguro que deseas borrar '${state.descripcion}' ?`,\n            showDenyButton: true,\n            confirmButtonText: 'Borrar',\n            denyButtonText: `Cancelar`,\n          }).then(async(result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n                setcargando(true)\n                filtrar(state)\n                await FuncionesFirebase.borrarInfo(state)\n                setcargando(false)\n              Swal.fire('Borrado!', '', 'success')\n            } else if (result.isDenied) {\n              Swal.fire('El registro no ha sido borrado', '', 'info')\n            }\n          })\n     }\n\n     //filtrar nuevo state  \n     const filtrar=(state)=>{\n        var filtered = tipoInformacion.filter(function(el) { return el.id != state.id ; }); \n        settipoInformacion(filtered)\n     }\n     //Editar informacion\n     const editar=async(state)=>{\n    let descripcionAntiguo=state.descripcion\n    const { value: descripcion } = await Swal.fire({\n  title: 'Ingrese su nueva informacion',\n  input: 'text',\n  inputLabel: 'Descripcion',\n  inputValue: state.descripcion,\n  showCancelButton: true,\n  inputValidator: (value) => {\n    if (!value) {\n      return 'debes completar la informacion!'\n    }\n  }\n})\n\n\nif (descripcion) {\nsetcargando(true)\nstate.descripcion=descripcion\n//validar no repetido\nlet repetido=await FuncionesFirebase.noRepeatInfo(state)\nconsole.log(repetido)\nif(repetido==false){ \nlet editado=await FuncionesFirebase.editarTopicoInformacion(state)\nif(editado){ \nSwal.fire(`Su informacion ha sido modificada a  '${descripcion}'`)\n}else{\nSwal.fire(`Error`,'su informacion no ha sido editada','error')\n}}else{\n    state.descripcion=descripcionAntiguo\n    Swal.fire(`Error`,'el registro ya existe','error')\n}\nsetcargando(false)\n}\n     }\n    useEffect(() => {\n       // llamar a la  lista de tipo de informacion \n       llamarTipoInformacion()\n    }, [])\n    return (\n        <div>\n            <Typography align=\"center\" variant='h3'>\n                Tipo de informacion \n            </Typography>\n            <Grid container>\n                <Grid item xs={2}></Grid>\n                <Grid item xs={8}>\n                  <Formulario  label=\"Tipo de informacion\" state={informacion} Guardar={Guardar} handleChange={handleChange} errores={errores}></Formulario>\n                  {cargando?\n                  <Cargando></Cargando>:\n\n                  <Tabla data={tipoInformacion} editar={editar} borrar={borrar}></Tabla>\n                }\n                  \n                </Grid>\n                <Grid item xs={2}></Grid>\n\n            </Grid>\n            \n        </div>\n    )\n}\n\nexport default AdmInformacion\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/AdmRegion.jsx",["918","919","920"],"import { Typography } from '@material-ui/core'\nimport React,{useEffect, useState} from 'react'\nimport Swal from 'sweetalert2'\nimport FuncionesFirebase from '../../../Funciones/FuncionesFirebase'\nimport Formulario from './Formulario'\nimport Tabla from './Tabla'\nimport Cargando from '../../../Componetes/Cargando'\n\n\nconst AdmRegion = () => {\n    const [region, setregion] = useState({\n        descripcion:''\n    })\n    const [errores, seterrores] = useState({\n        descripcion:null\n    })\n    const [regiones, setregiones] = useState([])\n    const [cargando, setcargando] = useState(false)\n    const handleChange=(e)=>{\n        e.preventDefault()\n        setregion({...region,[e.target.name]:e.target.value})\n    }\n    const validar=()=>{\n        let err={}\n       \n            if(region.descripcion.trim()==''){\n                console.log('dentro')\n                err.descripcion='este campo es requerido'\n            }\n        console.log(err)\n            return err\n    }\n  \n    const Guardar=async()=>{\n       let erro= validar()  \n        if(Object.keys(erro).length){\n            Swal.fire('Error','ha ocurrido un error','error')\n        }else{\n            setcargando(true)\n            let repetido=await FuncionesFirebase.noRepeatRegion(region)\n            if(repetido){\n                Swal.fire('Dato repetido','El registro ya existe','warning')\n            }else{\n                GuardarRegion()\n                Swal.fire('Exito!','Informacion Guardada','success')\n            }\n            setcargando(false)\n        }\n        console.log(erro)\n        seterrores(erro)\n    }\n\n    const GuardarRegion=async()=>{\n        region.descripcion=region.descripcion.toLowerCase().trim()\n        await FuncionesFirebase.guardarRegion(region)\n        setregiones([...regiones,region])\n        setregion({descripcion:''})\n    }\n\n\n\n    //llamar a los topicos e regiones en el useEffect \n    const llamarRegiones=async()=>{\n        let lista =[]\n        lista =await  FuncionesFirebase.llamarRegion()\n        setregiones(lista)\n\n    }\n\n    // borrar region \nconst borrar =(state)=>{\n    Swal.fire({\n        title: `Estas seguro que deseas borrar '${state.descripcion}' ?`,\n        showDenyButton: true,\n        confirmButtonText: 'Borrar',\n        denyButtonText: `Cancelar`,\n      }).then(async(result) => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n            setcargando(true)\n            filtrar(state)\n            await FuncionesFirebase.borrarRegion(state)\n            setcargando(false)\n          Swal.fire('Borrado!', '', 'success')\n        } else if (result.isDenied) {\n          Swal.fire('El registro no ha sido borrado', '', 'info')\n        }\n      })\n}\n\n     //filtrar nuevo state  \n     const filtrar=(state)=>{\n        var filtered = regiones.filter(function(el) { return el.id != state.id ; }); \n        setregiones(filtered)\n     }\n     // editar region\n     const editar=async(state)=>{\n        let descripcionAntiguo=state.descripcion\n        const { value: descripcion } = await Swal.fire({\n      title: 'Ingrese su nueva informacion',\n      input: 'text',\n      inputLabel: 'Descripcion',\n      inputValue: state.descripcion,\n      showCancelButton: true,\n      inputValidator: (value) => {\n        if (!value) {\n          return 'debes completar la informacion!'\n        }\n        \n      }\n    })\n\nif (descripcion) {\n    setcargando(true)\n    state.descripcion=descripcion\n    //validar no repetido\n    let repetido=await FuncionesFirebase.noRepeatRegion(state)\n    console.log(repetido)\n    if(repetido==false){ \n    let editado=await FuncionesFirebase.editarRegion(state)\n    if(editado){ \n    Swal.fire(`Su informacion ha sido modificada a  '${descripcion}'`)\n    }else{\n    Swal.fire(`Error`,'su informacion no ha sido editada','error')\n    }}else{\n        state.descripcion=descripcionAntiguo\n        Swal.fire(`Error`,'el registro ya existe','error')\n    }\n    setcargando(false)\n    }\n\n\n\n\n}\n\n    useEffect(() => {\n    llamarRegiones()\n        \n    }, [])\n    return (\n        <div>\n            <Typography align=\"center\" variant='h3'>\n                Regiones\n            </Typography>\n            <Formulario label='Region' state={region} Guardar={Guardar} handleChange={handleChange} errores={errores}></Formulario>\n            {cargando?\n                  <Cargando></Cargando>:\n\n                  <Tabla data={regiones} editar={editar} borrar={borrar}></Tabla>\n                }\n                  \n        </div>\n    )\n}\n\nexport default AdmRegion\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/Formulario.jsx",["921"],"import { Button, Grid, makeStyles, TextField } from '@material-ui/core'\nimport React,{useState,useEffect} from 'react'\nconst estilos=makeStyles((theme)=>({\n    margen:{\n        margin:'10px 0px'\n    }\n}))\n\nconst Formulario = (props) => {\n    const clases=estilos()\n    useEffect(() => {\n    }, [])\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={4}></Grid>\n                <Grid item xs={4}>\n                    <div className={clases.margen}>\n                    {props.errores.descripcion?\n                      <TextField \n                      error\n                      name='descripcion'\n                      label={props.label}\n                      variant='outlined'\n                      onChange={props.handleChange}\n                      value={props.state.descripcion}\n                      helperText={props.errores.descripcion}\n                      fullWidth\n                      ></TextField>\n                    \n                    :\n                    <TextField\n                    name='descripcion'\n                    label={props.label}\n                    variant='outlined'\n                    onChange={props.handleChange}\n                    value={props.state.descripcion}\n                    fullWidth\n                    ></TextField>}\n                  \n                    </div>\n                    <div className={clases.margen}>\n                    <Button\n                    fullWidth\n                    onClick={()=>props.Guardar()}\n                    >\n                        Guardar\n                    </Button>\n                    </div>\n              \n                </Grid>\n                <Grid item xs={4}></Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Formulario\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/admin/Etiquetas/Tabla.jsx",["922"],"import { Paper,Grid,makeStyles, Typography, IconButton } from '@material-ui/core'\nimport React,{useState} from 'react'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Delete from '@material-ui/icons/Delete'\nconst estilos = makeStyles((theme)=>({\n    margenPaper:{\n        margin:'20px 0px',\n        padding:'20px'\n    }\n}))\n\nconst Tabla = (props) => {\n// colocar la mayuscula en la primera letra de la palabra\n\nconst enMayuscula=(texto)=> {\n  return texto[0].toUpperCase()+texto.slice(1)\n}\nconst clases=estilos()\n    return (\n        <div>\n            <Grid container>\n                <Grid item xs={2}>\n\n                </Grid>\n                <Grid item xs={8}>\n                    {props.data.map(doc=>(\n                             <Paper className={clases.margenPaper}>\n                                 <Grid container>\n                                     <Grid item xs={8}>\n                                        <Typography variant=\"h4\"> {enMayuscula(doc.descripcion)} </Typography> </Grid>\n                                     <Grid item xs={2}>\n                                         <IconButton onClick={()=>props.editar(doc)}>\n                                             <EditIcon />\n                                         </IconButton>\n                                     </Grid>\n                                     <Grid item xs={2}>\n                                     <IconButton onClick ={()=>props.borrar(doc)}>\n                                             <Delete />\n                                         </IconButton>\n                                     </Grid>\n\n                                 </Grid>\n\n                             </Paper>\n\n                    ))}\n                </Grid>\n                 <Grid item xs={2}>\n                    \n                 </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Tabla\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Tag/Mostrar.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AdministrarEtiqueta/adminEtiqueta.jsx",["923","924","925"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nexport default function ContinuousSlider(props) {\n  const classes = useStyles();\n\n\n  const handleChange = (event, newValue) => {\n  props.settransparencia(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n  \n      <Grid container spacing={2}>\n       \n        <Grid item xs>\n          <Slider value={props.transparencia} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\n        </Grid>\n        \n      </Grid>\n    \n    </div>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/CrearPaper/SliderNota.jsx",["926"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AdministrarEtiqueta/VentanaEmergente.jsx",["927","928","929"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Cargando from '../Cargando';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: '100px',\n  },\n  ventana:{\n    width:'500px'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\n const  VentanaEmergente=(props)=>{\n\n \n\n  return (\n    <div>\n      <Dialog  aria-labelledby=\"customized-dialog-title\" open={props.open}>\n        <DialogContent style={{margin:'0px 50px'}} dividers>\n            <Cargando></Cargando>\n         \n          <Typography align=\"center\" variant='h4' style={{margin:'50px 0px'}}>\n           Editando Etiqueta\n          </Typography>\n        </DialogContent>\n      \n      </Dialog>\n    </div>\n  );\n}\nexport default VentanaEmergente",{"ruleId":"930","replacedBy":"931"},{"ruleId":"932","replacedBy":"933"},{"ruleId":"934","severity":1,"message":"935","line":7,"column":24,"nodeType":"936","messageId":"937","endLine":7,"endColumn":39},{"ruleId":"934","severity":1,"message":"938","line":13,"column":8,"nodeType":"936","messageId":"937","endLine":13,"endColumn":20},{"ruleId":"934","severity":1,"message":"939","line":54,"column":9,"nodeType":"936","messageId":"937","endLine":54,"endColumn":16},{"ruleId":"934","severity":1,"message":"940","line":57,"column":8,"nodeType":"936","messageId":"937","endLine":57,"endColumn":13},{"ruleId":"934","severity":1,"message":"941","line":57,"column":15,"nodeType":"936","messageId":"937","endLine":57,"endColumn":23},{"ruleId":"934","severity":1,"message":"942","line":58,"column":7,"nodeType":"936","messageId":"937","endLine":58,"endColumn":14},{"ruleId":"943","severity":1,"message":"944","line":124,"column":28,"nodeType":"945","messageId":"946","endLine":124,"endColumn":30},{"ruleId":"943","severity":1,"message":"944","line":156,"column":20,"nodeType":"945","messageId":"946","endLine":156,"endColumn":22},{"ruleId":"943","severity":1,"message":"944","line":164,"column":23,"nodeType":"945","messageId":"946","endLine":164,"endColumn":25},{"ruleId":"943","severity":1,"message":"944","line":202,"column":22,"nodeType":"945","messageId":"946","endLine":202,"endColumn":24},{"ruleId":"943","severity":1,"message":"944","line":216,"column":22,"nodeType":"945","messageId":"946","endLine":216,"endColumn":24},{"ruleId":"943","severity":1,"message":"944","line":235,"column":31,"nodeType":"945","messageId":"946","endLine":235,"endColumn":33},{"ruleId":"943","severity":1,"message":"944","line":261,"column":17,"nodeType":"945","messageId":"946","endLine":261,"endColumn":19},{"ruleId":"943","severity":1,"message":"947","line":325,"column":30,"nodeType":"945","messageId":"946","endLine":325,"endColumn":32},{"ruleId":"943","severity":1,"message":"947","line":330,"column":34,"nodeType":"945","messageId":"946","endLine":330,"endColumn":36},{"ruleId":"943","severity":1,"message":"947","line":335,"column":37,"nodeType":"945","messageId":"946","endLine":335,"endColumn":39},{"ruleId":"948","severity":1,"message":"949","line":414,"column":1,"nodeType":"950","endLine":414,"endColumn":20},{"ruleId":"951","severity":1,"message":"952","line":465,"column":14,"nodeType":"953","endLine":465,"endColumn":80},{"ruleId":"934","severity":1,"message":"954","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":13},{"ruleId":"934","severity":1,"message":"955","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":21},{"ruleId":"956","severity":1,"message":"957","line":75,"column":5,"nodeType":"958","messageId":"946","endLine":75,"endColumn":16},{"ruleId":"934","severity":1,"message":"959","line":117,"column":8,"nodeType":"936","messageId":"937","endLine":117,"endColumn":20},{"ruleId":"934","severity":1,"message":"960","line":118,"column":8,"nodeType":"936","messageId":"937","endLine":118,"endColumn":17},{"ruleId":"934","severity":1,"message":"961","line":120,"column":8,"nodeType":"936","messageId":"937","endLine":120,"endColumn":13},{"ruleId":"934","severity":1,"message":"962","line":120,"column":15,"nodeType":"936","messageId":"937","endLine":120,"endColumn":23},{"ruleId":"934","severity":1,"message":"963","line":192,"column":10,"nodeType":"936","messageId":"937","endLine":192,"endColumn":25},{"ruleId":"934","severity":1,"message":"964","line":213,"column":7,"nodeType":"936","messageId":"937","endLine":213,"endColumn":28},{"ruleId":"934","severity":1,"message":"965","line":217,"column":7,"nodeType":"936","messageId":"937","endLine":217,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":239,"column":47,"nodeType":"945","messageId":"946","endLine":239,"endColumn":49},{"ruleId":"943","severity":1,"message":"944","line":278,"column":22,"nodeType":"945","messageId":"946","endLine":278,"endColumn":24},{"ruleId":"966","severity":1,"message":"967","line":281,"column":17,"nodeType":"936","messageId":"968","endLine":281,"endColumn":32},{"ruleId":"943","severity":1,"message":"944","line":378,"column":44,"nodeType":"945","messageId":"946","endLine":378,"endColumn":46},{"ruleId":"966","severity":1,"message":"969","line":424,"column":13,"nodeType":"936","messageId":"968","endLine":424,"endColumn":21},{"ruleId":"943","severity":1,"message":"947","line":448,"column":31,"nodeType":"945","messageId":"946","endLine":448,"endColumn":33},{"ruleId":"970","severity":1,"message":"971","line":513,"column":15,"nodeType":"972","endLine":532,"endColumn":6},{"ruleId":"970","severity":1,"message":"973","line":532,"column":8,"nodeType":"974","endLine":532,"endColumn":15,"suggestions":"975"},{"ruleId":"943","severity":1,"message":"947","line":559,"column":47,"nodeType":"945","messageId":"946","endLine":559,"endColumn":49},{"ruleId":"951","severity":1,"message":"952","line":574,"column":61,"nodeType":"953","endLine":574,"endColumn":92},{"ruleId":"943","severity":1,"message":"947","line":580,"column":78,"nodeType":"945","messageId":"946","endLine":580,"endColumn":80},{"ruleId":"943","severity":1,"message":"947","line":611,"column":70,"nodeType":"945","messageId":"946","endLine":611,"endColumn":72},{"ruleId":"943","severity":1,"message":"947","line":612,"column":71,"nodeType":"945","messageId":"946","endLine":612,"endColumn":73},{"ruleId":"976","severity":1,"message":"977","line":635,"column":78,"nodeType":"978","messageId":"979","endLine":635,"endColumn":79,"fix":"980"},{"ruleId":"976","severity":1,"message":"977","line":715,"column":50,"nodeType":"978","messageId":"979","endLine":715,"endColumn":51,"fix":"981"},{"ruleId":"934","severity":1,"message":"982","line":2,"column":50,"nodeType":"936","messageId":"937","endLine":2,"endColumn":66},{"ruleId":"970","severity":1,"message":"983","line":248,"column":4,"nodeType":"974","endLine":248,"endColumn":13,"suggestions":"984"},{"ruleId":"943","severity":1,"message":"944","line":283,"column":28,"nodeType":"945","messageId":"946","endLine":283,"endColumn":30},{"ruleId":"985","severity":1,"message":"986","line":298,"column":30,"nodeType":"972","messageId":"987","endLine":298,"endColumn":32},{"ruleId":"943","severity":1,"message":"944","line":300,"column":35,"nodeType":"945","messageId":"946","endLine":300,"endColumn":37},{"ruleId":"943","severity":1,"message":"944","line":359,"column":38,"nodeType":"945","messageId":"946","endLine":359,"endColumn":40},{"ruleId":"985","severity":1,"message":"986","line":430,"column":50,"nodeType":"972","messageId":"987","endLine":430,"endColumn":52},{"ruleId":"943","severity":1,"message":"947","line":435,"column":45,"nodeType":"945","messageId":"946","endLine":435,"endColumn":47},{"ruleId":"934","severity":1,"message":"988","line":497,"column":7,"nodeType":"936","messageId":"937","endLine":497,"endColumn":22},{"ruleId":"985","severity":1,"message":"986","line":506,"column":24,"nodeType":"972","messageId":"987","endLine":506,"endColumn":26},{"ruleId":"943","severity":1,"message":"947","line":508,"column":21,"nodeType":"945","messageId":"946","endLine":508,"endColumn":23},{"ruleId":"934","severity":1,"message":"989","line":548,"column":8,"nodeType":"936","messageId":"937","endLine":548,"endColumn":27},{"ruleId":"985","severity":1,"message":"986","line":555,"column":34,"nodeType":"972","messageId":"987","endLine":555,"endColumn":36},{"ruleId":"943","severity":1,"message":"944","line":557,"column":31,"nodeType":"945","messageId":"946","endLine":557,"endColumn":33},{"ruleId":"934","severity":1,"message":"990","line":599,"column":8,"nodeType":"936","messageId":"937","endLine":599,"endColumn":23},{"ruleId":"943","severity":1,"message":"944","line":630,"column":25,"nodeType":"945","messageId":"946","endLine":630,"endColumn":27},{"ruleId":"934","severity":1,"message":"991","line":666,"column":7,"nodeType":"936","messageId":"937","endLine":666,"endColumn":17},{"ruleId":"934","severity":1,"message":"992","line":670,"column":8,"nodeType":"936","messageId":"937","endLine":670,"endColumn":18},{"ruleId":"985","severity":1,"message":"986","line":670,"column":38,"nodeType":"972","messageId":"987","endLine":670,"endColumn":40},{"ruleId":"934","severity":1,"message":"993","line":673,"column":15,"nodeType":"936","messageId":"937","endLine":673,"endColumn":30},{"ruleId":"985","severity":1,"message":"986","line":673,"column":55,"nodeType":"972","messageId":"987","endLine":673,"endColumn":57},{"ruleId":"943","severity":1,"message":"944","line":675,"column":33,"nodeType":"945","messageId":"946","endLine":675,"endColumn":35},{"ruleId":"943","severity":1,"message":"947","line":696,"column":27,"nodeType":"945","messageId":"946","endLine":696,"endColumn":29},{"ruleId":"934","severity":1,"message":"994","line":708,"column":7,"nodeType":"936","messageId":"937","endLine":708,"endColumn":19},{"ruleId":"934","severity":1,"message":"995","line":729,"column":26,"nodeType":"936","messageId":"937","endLine":729,"endColumn":34},{"ruleId":"943","severity":1,"message":"944","line":756,"column":54,"nodeType":"945","messageId":"946","endLine":756,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":759,"column":57,"nodeType":"945","messageId":"946","endLine":759,"endColumn":59},{"ruleId":"951","severity":1,"message":"952","line":868,"column":37,"nodeType":"953","endLine":868,"endColumn":84},{"ruleId":"951","severity":1,"message":"952","line":956,"column":37,"nodeType":"953","endLine":956,"endColumn":85},{"ruleId":"943","severity":1,"message":"944","line":998,"column":31,"nodeType":"945","messageId":"946","endLine":998,"endColumn":33},{"ruleId":"943","severity":1,"message":"947","line":1001,"column":37,"nodeType":"945","messageId":"946","endLine":1001,"endColumn":39},{"ruleId":"976","severity":1,"message":"977","line":1053,"column":54,"nodeType":"978","messageId":"979","endLine":1053,"endColumn":55,"fix":"996"},{"ruleId":"934","severity":1,"message":"997","line":3,"column":10,"nodeType":"936","messageId":"937","endLine":3,"endColumn":22},{"ruleId":"934","severity":1,"message":"998","line":4,"column":11,"nodeType":"936","messageId":"937","endLine":4,"endColumn":23},{"ruleId":"934","severity":1,"message":"999","line":4,"column":25,"nodeType":"936","messageId":"937","endLine":4,"endColumn":40},{"ruleId":"934","severity":1,"message":"1000","line":6,"column":10,"nodeType":"936","messageId":"937","endLine":6,"endColumn":21},{"ruleId":"970","severity":1,"message":"971","line":55,"column":16,"nodeType":"972","endLine":77,"endColumn":7},{"ruleId":"943","severity":1,"message":"947","line":64,"column":26,"nodeType":"945","messageId":"946","endLine":64,"endColumn":28},{"ruleId":"970","severity":1,"message":"1001","line":77,"column":9,"nodeType":"974","endLine":77,"endColumn":11,"suggestions":"1002"},{"ruleId":"934","severity":1,"message":"1003","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":21},{"ruleId":"934","severity":1,"message":"1004","line":6,"column":8,"nodeType":"936","messageId":"937","endLine":6,"endColumn":17},{"ruleId":"934","severity":1,"message":"1005","line":11,"column":8,"nodeType":"936","messageId":"937","endLine":11,"endColumn":22},{"ruleId":"934","severity":1,"message":"1006","line":16,"column":10,"nodeType":"936","messageId":"937","endLine":16,"endColumn":16},{"ruleId":"934","severity":1,"message":"1007","line":17,"column":10,"nodeType":"936","messageId":"937","endLine":17,"endColumn":14},{"ruleId":"934","severity":1,"message":"1008","line":176,"column":11,"nodeType":"936","messageId":"937","endLine":176,"endColumn":29},{"ruleId":"943","severity":1,"message":"947","line":181,"column":26,"nodeType":"945","messageId":"946","endLine":181,"endColumn":28},{"ruleId":"943","severity":1,"message":"947","line":199,"column":27,"nodeType":"945","messageId":"946","endLine":199,"endColumn":29},{"ruleId":"943","severity":1,"message":"944","line":256,"column":20,"nodeType":"945","messageId":"946","endLine":256,"endColumn":22},{"ruleId":"943","severity":1,"message":"944","line":261,"column":21,"nodeType":"945","messageId":"946","endLine":261,"endColumn":23},{"ruleId":"943","severity":1,"message":"944","line":266,"column":31,"nodeType":"945","messageId":"946","endLine":266,"endColumn":33},{"ruleId":"934","severity":1,"message":"1009","line":441,"column":21,"nodeType":"936","messageId":"937","endLine":441,"endColumn":35},{"ruleId":"985","severity":1,"message":"986","line":443,"column":30,"nodeType":"972","messageId":"987","endLine":443,"endColumn":32},{"ruleId":"934","severity":1,"message":"1010","line":505,"column":9,"nodeType":"936","messageId":"937","endLine":505,"endColumn":24},{"ruleId":"943","severity":1,"message":"947","line":516,"column":26,"nodeType":"945","messageId":"946","endLine":516,"endColumn":28},{"ruleId":"943","severity":1,"message":"947","line":554,"column":39,"nodeType":"945","messageId":"946","endLine":554,"endColumn":41},{"ruleId":"985","severity":1,"message":"986","line":673,"column":30,"nodeType":"972","messageId":"987","endLine":673,"endColumn":32},{"ruleId":"985","severity":1,"message":"986","line":674,"column":31,"nodeType":"972","messageId":"987","endLine":674,"endColumn":33},{"ruleId":"943","severity":1,"message":"944","line":677,"column":39,"nodeType":"945","messageId":"946","endLine":677,"endColumn":41},{"ruleId":"985","severity":1,"message":"986","line":740,"column":20,"nodeType":"972","messageId":"987","endLine":740,"endColumn":22},{"ruleId":"985","severity":1,"message":"986","line":747,"column":17,"nodeType":"972","messageId":"987","endLine":747,"endColumn":19},{"ruleId":"970","severity":1,"message":"1011","line":979,"column":4,"nodeType":"974","endLine":979,"endColumn":21,"suggestions":"1012"},{"ruleId":"943","severity":1,"message":"947","line":1009,"column":19,"nodeType":"945","messageId":"946","endLine":1009,"endColumn":21},{"ruleId":"943","severity":1,"message":"947","line":1013,"column":28,"nodeType":"945","messageId":"946","endLine":1013,"endColumn":30},{"ruleId":"1013","severity":1,"message":"1014","line":1331,"column":36,"nodeType":"953","endLine":1331,"endColumn":97},{"ruleId":"1015","severity":1,"message":"1016","line":1343,"column":25,"nodeType":"953","endLine":1343,"endColumn":57},{"ruleId":"934","severity":1,"message":"1017","line":3,"column":10,"nodeType":"936","messageId":"937","endLine":3,"endColumn":20},{"ruleId":"934","severity":1,"message":"1018","line":3,"column":22,"nodeType":"936","messageId":"937","endLine":3,"endColumn":32},{"ruleId":"934","severity":1,"message":"982","line":3,"column":40,"nodeType":"936","messageId":"937","endLine":3,"endColumn":56},{"ruleId":"934","severity":1,"message":"1019","line":3,"column":58,"nodeType":"936","messageId":"937","endLine":3,"endColumn":64},{"ruleId":"934","severity":1,"message":"1020","line":3,"column":66,"nodeType":"936","messageId":"937","endLine":3,"endColumn":89},{"ruleId":"934","severity":1,"message":"939","line":13,"column":11,"nodeType":"936","messageId":"937","endLine":13,"endColumn":18},{"ruleId":"934","severity":1,"message":"942","line":14,"column":11,"nodeType":"936","messageId":"937","endLine":14,"endColumn":18},{"ruleId":"943","severity":1,"message":"944","line":82,"column":35,"nodeType":"945","messageId":"946","endLine":82,"endColumn":37},{"ruleId":"943","severity":1,"message":"944","line":88,"column":39,"nodeType":"945","messageId":"946","endLine":88,"endColumn":41},{"ruleId":"943","severity":1,"message":"947","line":96,"column":40,"nodeType":"945","messageId":"946","endLine":96,"endColumn":42},{"ruleId":"943","severity":1,"message":"944","line":134,"column":21,"nodeType":"945","messageId":"946","endLine":134,"endColumn":23},{"ruleId":"985","severity":1,"message":"1021","line":144,"column":25,"nodeType":"972","messageId":"1022","endLine":144,"endColumn":27},{"ruleId":"943","severity":1,"message":"947","line":146,"column":30,"nodeType":"945","messageId":"946","endLine":146,"endColumn":32},{"ruleId":"985","severity":1,"message":"986","line":159,"column":30,"nodeType":"972","messageId":"987","endLine":159,"endColumn":32},{"ruleId":"943","severity":1,"message":"947","line":161,"column":32,"nodeType":"945","messageId":"946","endLine":161,"endColumn":34},{"ruleId":"985","severity":1,"message":"986","line":162,"column":40,"nodeType":"972","messageId":"987","endLine":162,"endColumn":42},{"ruleId":"943","severity":1,"message":"944","line":163,"column":41,"nodeType":"945","messageId":"946","endLine":163,"endColumn":43},{"ruleId":"985","severity":1,"message":"986","line":180,"column":30,"nodeType":"972","messageId":"987","endLine":180,"endColumn":32},{"ruleId":"943","severity":1,"message":"947","line":182,"column":41,"nodeType":"945","messageId":"946","endLine":182,"endColumn":43},{"ruleId":"985","severity":1,"message":"986","line":183,"column":49,"nodeType":"972","messageId":"987","endLine":183,"endColumn":51},{"ruleId":"943","severity":1,"message":"944","line":184,"column":41,"nodeType":"945","messageId":"946","endLine":184,"endColumn":43},{"ruleId":"985","severity":1,"message":"986","line":198,"column":25,"nodeType":"972","messageId":"987","endLine":198,"endColumn":27},{"ruleId":"943","severity":1,"message":"947","line":199,"column":39,"nodeType":"945","messageId":"946","endLine":199,"endColumn":41},{"ruleId":"970","severity":1,"message":"971","line":214,"column":15,"nodeType":"972","endLine":220,"endColumn":6},{"ruleId":"970","severity":1,"message":"1023","line":220,"column":8,"nodeType":"974","endLine":220,"endColumn":10,"suggestions":"1024"},{"ruleId":"943","severity":1,"message":"944","line":118,"column":25,"nodeType":"945","messageId":"946","endLine":118,"endColumn":27},{"ruleId":"943","severity":1,"message":"944","line":125,"column":25,"nodeType":"945","messageId":"946","endLine":125,"endColumn":27},{"ruleId":"943","severity":1,"message":"944","line":136,"column":27,"nodeType":"945","messageId":"946","endLine":136,"endColumn":29},{"ruleId":"943","severity":1,"message":"944","line":140,"column":28,"nodeType":"945","messageId":"946","endLine":140,"endColumn":30},{"ruleId":"943","severity":1,"message":"947","line":146,"column":36,"nodeType":"945","messageId":"946","endLine":146,"endColumn":38},{"ruleId":"943","severity":1,"message":"944","line":203,"column":30,"nodeType":"945","messageId":"946","endLine":203,"endColumn":32},{"ruleId":"943","severity":1,"message":"944","line":210,"column":30,"nodeType":"945","messageId":"946","endLine":210,"endColumn":32},{"ruleId":"934","severity":1,"message":"1025","line":13,"column":12,"nodeType":"936","messageId":"937","endLine":13,"endColumn":22},{"ruleId":"934","severity":1,"message":"1026","line":2,"column":21,"nodeType":"936","messageId":"937","endLine":2,"endColumn":25},{"ruleId":"934","severity":1,"message":"1027","line":5,"column":15,"nodeType":"936","messageId":"937","endLine":5,"endColumn":19},{"ruleId":"934","severity":1,"message":"1028","line":5,"column":21,"nodeType":"936","messageId":"937","endLine":5,"endColumn":25},{"ruleId":"934","severity":1,"message":"1029","line":10,"column":8,"nodeType":"936","messageId":"937","endLine":10,"endColumn":18},{"ruleId":"934","severity":1,"message":"1030","line":11,"column":8,"nodeType":"936","messageId":"937","endLine":11,"endColumn":17},{"ruleId":"934","severity":1,"message":"1031","line":17,"column":8,"nodeType":"936","messageId":"937","endLine":17,"endColumn":16},{"ruleId":"934","severity":1,"message":"1032","line":325,"column":17,"nodeType":"936","messageId":"937","endLine":325,"endColumn":23},{"ruleId":"934","severity":1,"message":"1033","line":330,"column":12,"nodeType":"936","messageId":"937","endLine":330,"endColumn":19},{"ruleId":"934","severity":1,"message":"1034","line":345,"column":7,"nodeType":"936","messageId":"937","endLine":345,"endColumn":27},{"ruleId":"934","severity":1,"message":"1035","line":406,"column":7,"nodeType":"936","messageId":"937","endLine":406,"endColumn":18},{"ruleId":"934","severity":1,"message":"1036","line":418,"column":12,"nodeType":"936","messageId":"937","endLine":418,"endColumn":23},{"ruleId":"966","severity":1,"message":"1037","line":425,"column":17,"nodeType":"936","messageId":"968","endLine":425,"endColumn":33},{"ruleId":"934","severity":1,"message":"1038","line":430,"column":12,"nodeType":"936","messageId":"937","endLine":430,"endColumn":26},{"ruleId":"966","severity":1,"message":"1037","line":439,"column":13,"nodeType":"936","messageId":"968","endLine":439,"endColumn":29},{"ruleId":"934","severity":1,"message":"1039","line":450,"column":12,"nodeType":"936","messageId":"937","endLine":450,"endColumn":18},{"ruleId":"934","severity":1,"message":"1040","line":460,"column":14,"nodeType":"936","messageId":"937","endLine":460,"endColumn":20},{"ruleId":"976","severity":1,"message":"977","line":460,"column":58,"nodeType":"978","messageId":"979","endLine":460,"endColumn":59,"fix":"1041"},{"ruleId":"943","severity":1,"message":"944","line":483,"column":22,"nodeType":"945","messageId":"946","endLine":483,"endColumn":24},{"ruleId":"934","severity":1,"message":"1042","line":498,"column":9,"nodeType":"936","messageId":"937","endLine":498,"endColumn":26},{"ruleId":"943","severity":1,"message":"944","line":561,"column":29,"nodeType":"945","messageId":"946","endLine":561,"endColumn":31},{"ruleId":"943","severity":1,"message":"944","line":577,"column":31,"nodeType":"945","messageId":"946","endLine":577,"endColumn":33},{"ruleId":"943","severity":1,"message":"944","line":577,"column":77,"nodeType":"945","messageId":"946","endLine":577,"endColumn":79},{"ruleId":"970","severity":1,"message":"1043","line":590,"column":4,"nodeType":"974","endLine":590,"endColumn":43,"suggestions":"1044"},{"ruleId":"934","severity":1,"message":"1045","line":610,"column":8,"nodeType":"936","messageId":"937","endLine":610,"endColumn":24},{"ruleId":"934","severity":1,"message":"1046","line":622,"column":7,"nodeType":"936","messageId":"937","endLine":622,"endColumn":16},{"ruleId":"948","severity":1,"message":"949","line":762,"column":23,"nodeType":"950","endLine":762,"endColumn":42},{"ruleId":"948","severity":1,"message":"949","line":763,"column":23,"nodeType":"950","endLine":763,"endColumn":38},{"ruleId":"948","severity":1,"message":"949","line":856,"column":17,"nodeType":"950","endLine":856,"endColumn":28},{"ruleId":"1047","severity":1,"message":"1048","line":949,"column":21,"nodeType":"1049","messageId":"1050","endLine":951,"endColumn":50},{"ruleId":"1047","severity":1,"message":"1048","line":959,"column":21,"nodeType":"1049","messageId":"1050","endLine":961,"endColumn":48},{"ruleId":"948","severity":1,"message":"949","line":997,"column":37,"nodeType":"950","endLine":997,"endColumn":56},{"ruleId":"948","severity":1,"message":"949","line":998,"column":37,"nodeType":"950","endLine":998,"endColumn":52},{"ruleId":"970","severity":1,"message":"971","line":77,"column":15,"nodeType":"972","endLine":119,"endColumn":6},{"ruleId":"985","severity":1,"message":"986","line":26,"column":34,"nodeType":"972","messageId":"987","endLine":26,"endColumn":36},{"ruleId":"985","severity":1,"message":"986","line":37,"column":34,"nodeType":"972","messageId":"987","endLine":37,"endColumn":36},{"ruleId":"985","severity":1,"message":"986","line":52,"column":38,"nodeType":"972","messageId":"987","endLine":52,"endColumn":40},{"ruleId":"985","severity":1,"message":"986","line":55,"column":54,"nodeType":"972","messageId":"987","endLine":55,"endColumn":56},{"ruleId":"934","severity":1,"message":"982","line":2,"column":53,"nodeType":"936","messageId":"937","endLine":2,"endColumn":69},{"ruleId":"934","severity":1,"message":"1007","line":2,"column":93,"nodeType":"936","messageId":"937","endLine":2,"endColumn":97},{"ruleId":"934","severity":1,"message":"1051","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":13},{"ruleId":"934","severity":1,"message":"1052","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":27},{"ruleId":"934","severity":1,"message":"1053","line":18,"column":8,"nodeType":"936","messageId":"937","endLine":18,"endColumn":22},{"ruleId":"934","severity":1,"message":"1054","line":19,"column":9,"nodeType":"936","messageId":"937","endLine":19,"endColumn":22},{"ruleId":"934","severity":1,"message":"1055","line":19,"column":23,"nodeType":"936","messageId":"937","endLine":19,"endColumn":46},{"ruleId":"956","severity":1,"message":"1056","line":73,"column":5,"nodeType":"958","messageId":"946","endLine":73,"endColumn":21},{"ruleId":"934","severity":1,"message":"1057","line":250,"column":16,"nodeType":"936","messageId":"937","endLine":250,"endColumn":24},{"ruleId":"934","severity":1,"message":"1058","line":250,"column":26,"nodeType":"936","messageId":"937","endLine":250,"endColumn":37},{"ruleId":"934","severity":1,"message":"1059","line":251,"column":16,"nodeType":"936","messageId":"937","endLine":251,"endColumn":31},{"ruleId":"934","severity":1,"message":"1060","line":251,"column":33,"nodeType":"936","messageId":"937","endLine":251,"endColumn":51},{"ruleId":"934","severity":1,"message":"1061","line":253,"column":15,"nodeType":"936","messageId":"937","endLine":253,"endColumn":22},{"ruleId":"934","severity":1,"message":"1062","line":254,"column":15,"nodeType":"936","messageId":"937","endLine":254,"endColumn":21},{"ruleId":"934","severity":1,"message":"1063","line":255,"column":16,"nodeType":"936","messageId":"937","endLine":255,"endColumn":31},{"ruleId":"934","severity":1,"message":"1064","line":255,"column":33,"nodeType":"936","messageId":"937","endLine":255,"endColumn":51},{"ruleId":"985","severity":1,"message":"986","line":300,"column":61,"nodeType":"972","messageId":"987","endLine":300,"endColumn":63},{"ruleId":"985","severity":1,"message":"986","line":356,"column":50,"nodeType":"972","messageId":"987","endLine":356,"endColumn":52},{"ruleId":"934","severity":1,"message":"1065","line":424,"column":7,"nodeType":"936","messageId":"937","endLine":424,"endColumn":18},{"ruleId":"943","severity":1,"message":"944","line":436,"column":26,"nodeType":"945","messageId":"946","endLine":436,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":439,"column":21,"nodeType":"936","messageId":"968","endLine":439,"endColumn":36},{"ruleId":"934","severity":1,"message":"1066","line":529,"column":7,"nodeType":"936","messageId":"937","endLine":529,"endColumn":20},{"ruleId":"943","severity":1,"message":"944","line":537,"column":26,"nodeType":"945","messageId":"946","endLine":537,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":540,"column":21,"nodeType":"936","messageId":"968","endLine":540,"endColumn":36},{"ruleId":"943","severity":1,"message":"944","line":629,"column":28,"nodeType":"945","messageId":"946","endLine":629,"endColumn":30},{"ruleId":"934","severity":1,"message":"1067","line":656,"column":7,"nodeType":"936","messageId":"937","endLine":656,"endColumn":21},{"ruleId":"943","severity":1,"message":"944","line":660,"column":26,"nodeType":"945","messageId":"946","endLine":660,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":666,"column":33,"nodeType":"945","messageId":"946","endLine":666,"endColumn":35},{"ruleId":"943","severity":1,"message":"947","line":671,"column":27,"nodeType":"945","messageId":"946","endLine":671,"endColumn":29},{"ruleId":"970","severity":1,"message":"971","line":688,"column":11,"nodeType":"972","endLine":743,"endColumn":2},{"ruleId":"943","severity":1,"message":"944","line":788,"column":12,"nodeType":"945","messageId":"946","endLine":788,"endColumn":14},{"ruleId":"951","severity":1,"message":"952","line":847,"column":65,"nodeType":"953","endLine":847,"endColumn":101},{"ruleId":"951","severity":1,"message":"952","line":853,"column":65,"nodeType":"953","endLine":853,"endColumn":98},{"ruleId":"1015","severity":1,"message":"1016","line":872,"column":49,"nodeType":"953","endLine":874,"endColumn":100},{"ruleId":"934","severity":1,"message":"1068","line":9,"column":8,"nodeType":"936","messageId":"937","endLine":9,"endColumn":19},{"ruleId":"934","severity":1,"message":"1069","line":10,"column":8,"nodeType":"936","messageId":"937","endLine":10,"endColumn":17},{"ruleId":"970","severity":1,"message":"1070","line":56,"column":7,"nodeType":"974","endLine":56,"endColumn":14,"suggestions":"1071"},{"ruleId":"985","severity":1,"message":"986","line":106,"column":34,"nodeType":"972","messageId":"987","endLine":106,"endColumn":36},{"ruleId":"943","severity":1,"message":"944","line":108,"column":35,"nodeType":"945","messageId":"946","endLine":108,"endColumn":37},{"ruleId":"934","severity":1,"message":"1072","line":120,"column":17,"nodeType":"936","messageId":"937","endLine":120,"endColumn":19},{"ruleId":"934","severity":1,"message":"1073","line":3,"column":8,"nodeType":"936","messageId":"937","endLine":3,"endColumn":14},{"ruleId":"934","severity":1,"message":"1074","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":16},{"ruleId":"934","severity":1,"message":"1075","line":6,"column":8,"nodeType":"936","messageId":"937","endLine":6,"endColumn":16},{"ruleId":"934","severity":1,"message":"1076","line":21,"column":9,"nodeType":"936","messageId":"937","endLine":21,"endColumn":14},{"ruleId":"934","severity":1,"message":"1077","line":26,"column":9,"nodeType":"936","messageId":"937","endLine":26,"endColumn":21},{"ruleId":"956","severity":1,"message":"1056","line":65,"column":5,"nodeType":"958","messageId":"946","endLine":65,"endColumn":21},{"ruleId":"934","severity":1,"message":"1078","line":190,"column":15,"nodeType":"936","messageId":"937","endLine":190,"endColumn":23},{"ruleId":"934","severity":1,"message":"961","line":191,"column":8,"nodeType":"936","messageId":"937","endLine":191,"endColumn":13},{"ruleId":"943","severity":1,"message":"944","line":248,"column":26,"nodeType":"945","messageId":"946","endLine":248,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":251,"column":21,"nodeType":"936","messageId":"968","endLine":251,"endColumn":36},{"ruleId":"1015","severity":1,"message":"1016","line":388,"column":9,"nodeType":"953","endLine":388,"endColumn":78},{"ruleId":"934","severity":1,"message":"1079","line":2,"column":74,"nodeType":"936","messageId":"937","endLine":2,"endColumn":80},{"ruleId":"934","severity":1,"message":"1007","line":6,"column":9,"nodeType":"936","messageId":"937","endLine":6,"endColumn":13},{"ruleId":"934","severity":1,"message":"1051","line":14,"column":8,"nodeType":"936","messageId":"937","endLine":14,"endColumn":13},{"ruleId":"956","severity":1,"message":"1056","line":82,"column":13,"nodeType":"958","messageId":"946","endLine":82,"endColumn":29},{"ruleId":"934","severity":1,"message":"961","line":300,"column":12,"nodeType":"936","messageId":"937","endLine":300,"endColumn":17},{"ruleId":"934","severity":1,"message":"962","line":300,"column":19,"nodeType":"936","messageId":"937","endLine":300,"endColumn":27},{"ruleId":"934","severity":1,"message":"1080","line":302,"column":11,"nodeType":"936","messageId":"937","endLine":302,"endColumn":16},{"ruleId":"934","severity":1,"message":"1081","line":303,"column":10,"nodeType":"936","messageId":"937","endLine":303,"endColumn":23},{"ruleId":"934","severity":1,"message":"1082","line":303,"column":24,"nodeType":"936","messageId":"937","endLine":303,"endColumn":40},{"ruleId":"943","severity":1,"message":"947","line":322,"column":46,"nodeType":"945","messageId":"946","endLine":322,"endColumn":48},{"ruleId":"943","severity":1,"message":"944","line":332,"column":52,"nodeType":"945","messageId":"946","endLine":332,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":347,"column":54,"nodeType":"945","messageId":"946","endLine":347,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":355,"column":60,"nodeType":"945","messageId":"946","endLine":355,"endColumn":62},{"ruleId":"943","severity":1,"message":"944","line":379,"column":53,"nodeType":"945","messageId":"946","endLine":379,"endColumn":55},{"ruleId":"943","severity":1,"message":"944","line":385,"column":53,"nodeType":"945","messageId":"946","endLine":385,"endColumn":55},{"ruleId":"934","severity":1,"message":"1083","line":450,"column":7,"nodeType":"936","messageId":"937","endLine":450,"endColumn":18},{"ruleId":"943","severity":1,"message":"947","line":465,"column":54,"nodeType":"945","messageId":"946","endLine":465,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":477,"column":60,"nodeType":"945","messageId":"946","endLine":477,"endColumn":62},{"ruleId":"985","severity":1,"message":"986","line":616,"column":63,"nodeType":"972","messageId":"987","endLine":616,"endColumn":65},{"ruleId":"943","severity":1,"message":"947","line":617,"column":68,"nodeType":"945","messageId":"946","endLine":617,"endColumn":70},{"ruleId":"985","severity":1,"message":"986","line":634,"column":55,"nodeType":"972","messageId":"987","endLine":634,"endColumn":57},{"ruleId":"943","severity":1,"message":"947","line":687,"column":52,"nodeType":"945","messageId":"946","endLine":687,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":699,"column":48,"nodeType":"945","messageId":"946","endLine":699,"endColumn":50},{"ruleId":"970","severity":1,"message":"1084","line":759,"column":5,"nodeType":"974","endLine":759,"endColumn":51,"suggestions":"1085"},{"ruleId":"934","severity":1,"message":"1067","line":764,"column":8,"nodeType":"936","messageId":"937","endLine":764,"endColumn":22},{"ruleId":"943","severity":1,"message":"944","line":768,"column":26,"nodeType":"945","messageId":"946","endLine":768,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":774,"column":33,"nodeType":"945","messageId":"946","endLine":774,"endColumn":35},{"ruleId":"943","severity":1,"message":"947","line":779,"column":27,"nodeType":"945","messageId":"946","endLine":779,"endColumn":29},{"ruleId":"943","severity":1,"message":"947","line":831,"column":59,"nodeType":"945","messageId":"946","endLine":831,"endColumn":61},{"ruleId":"943","severity":1,"message":"947","line":866,"column":67,"nodeType":"945","messageId":"946","endLine":866,"endColumn":69},{"ruleId":"943","severity":1,"message":"947","line":911,"column":67,"nodeType":"945","messageId":"946","endLine":911,"endColumn":69},{"ruleId":"934","severity":1,"message":"1061","line":1001,"column":7,"nodeType":"936","messageId":"937","endLine":1001,"endColumn":14},{"ruleId":"943","severity":1,"message":"944","line":1013,"column":26,"nodeType":"945","messageId":"946","endLine":1013,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":1016,"column":21,"nodeType":"936","messageId":"968","endLine":1016,"endColumn":36},{"ruleId":"985","severity":1,"message":"986","line":1044,"column":37,"nodeType":"972","messageId":"987","endLine":1044,"endColumn":39},{"ruleId":"985","severity":1,"message":"986","line":1078,"column":35,"nodeType":"972","messageId":"987","endLine":1078,"endColumn":37},{"ruleId":"985","severity":1,"message":"986","line":1124,"column":35,"nodeType":"972","messageId":"987","endLine":1124,"endColumn":37},{"ruleId":"943","severity":1,"message":"944","line":1147,"column":50,"nodeType":"945","messageId":"946","endLine":1147,"endColumn":52},{"ruleId":"943","severity":1,"message":"944","line":1251,"column":47,"nodeType":"945","messageId":"946","endLine":1251,"endColumn":49},{"ruleId":"976","severity":1,"message":"977","line":1252,"column":60,"nodeType":"978","messageId":"979","endLine":1252,"endColumn":61,"fix":"1086"},{"ruleId":"943","severity":1,"message":"944","line":1300,"column":84,"nodeType":"945","messageId":"946","endLine":1300,"endColumn":86},{"ruleId":"951","severity":1,"message":"952","line":1369,"column":73,"nodeType":"953","endLine":1369,"endColumn":109},{"ruleId":"951","severity":1,"message":"952","line":1376,"column":73,"nodeType":"953","endLine":1376,"endColumn":106},{"ruleId":"1015","severity":1,"message":"1016","line":1403,"column":57,"nodeType":"953","endLine":1405,"endColumn":108},{"ruleId":"985","severity":1,"message":"986","line":22,"column":22,"nodeType":"972","messageId":"987","endLine":22,"endColumn":24},{"ruleId":"970","severity":1,"message":"1087","line":42,"column":4,"nodeType":"974","endLine":42,"endColumn":11,"suggestions":"1088"},{"ruleId":"934","severity":1,"message":"1079","line":2,"column":74,"nodeType":"936","messageId":"937","endLine":2,"endColumn":80},{"ruleId":"934","severity":1,"message":"1052","line":10,"column":8,"nodeType":"936","messageId":"937","endLine":10,"endColumn":27},{"ruleId":"934","severity":1,"message":"1089","line":20,"column":8,"nodeType":"936","messageId":"937","endLine":20,"endColumn":13},{"ruleId":"956","severity":1,"message":"1056","line":51,"column":13,"nodeType":"958","messageId":"946","endLine":51,"endColumn":29},{"ruleId":"934","severity":1,"message":"961","line":282,"column":12,"nodeType":"936","messageId":"937","endLine":282,"endColumn":17},{"ruleId":"934","severity":1,"message":"962","line":282,"column":19,"nodeType":"936","messageId":"937","endLine":282,"endColumn":27},{"ruleId":"943","severity":1,"message":"947","line":301,"column":46,"nodeType":"945","messageId":"946","endLine":301,"endColumn":48},{"ruleId":"943","severity":1,"message":"944","line":309,"column":52,"nodeType":"945","messageId":"946","endLine":309,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":324,"column":54,"nodeType":"945","messageId":"946","endLine":324,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":332,"column":60,"nodeType":"945","messageId":"946","endLine":332,"endColumn":62},{"ruleId":"943","severity":1,"message":"944","line":356,"column":53,"nodeType":"945","messageId":"946","endLine":356,"endColumn":55},{"ruleId":"943","severity":1,"message":"944","line":362,"column":53,"nodeType":"945","messageId":"946","endLine":362,"endColumn":55},{"ruleId":"985","severity":1,"message":"986","line":630,"column":63,"nodeType":"972","messageId":"987","endLine":630,"endColumn":65},{"ruleId":"943","severity":1,"message":"947","line":633,"column":68,"nodeType":"945","messageId":"946","endLine":633,"endColumn":70},{"ruleId":"985","severity":1,"message":"986","line":650,"column":55,"nodeType":"972","messageId":"987","endLine":650,"endColumn":57},{"ruleId":"943","severity":1,"message":"947","line":738,"column":34,"nodeType":"945","messageId":"946","endLine":738,"endColumn":36},{"ruleId":"970","severity":1,"message":"1084","line":749,"column":5,"nodeType":"974","endLine":749,"endColumn":51,"suggestions":"1090"},{"ruleId":"934","severity":1,"message":"1067","line":754,"column":8,"nodeType":"936","messageId":"937","endLine":754,"endColumn":22},{"ruleId":"943","severity":1,"message":"944","line":758,"column":26,"nodeType":"945","messageId":"946","endLine":758,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":764,"column":33,"nodeType":"945","messageId":"946","endLine":764,"endColumn":35},{"ruleId":"943","severity":1,"message":"947","line":769,"column":27,"nodeType":"945","messageId":"946","endLine":769,"endColumn":29},{"ruleId":"943","severity":1,"message":"947","line":804,"column":59,"nodeType":"945","messageId":"946","endLine":804,"endColumn":61},{"ruleId":"943","severity":1,"message":"947","line":839,"column":67,"nodeType":"945","messageId":"946","endLine":839,"endColumn":69},{"ruleId":"943","severity":1,"message":"947","line":884,"column":67,"nodeType":"945","messageId":"946","endLine":884,"endColumn":69},{"ruleId":"934","severity":1,"message":"1091","line":941,"column":8,"nodeType":"936","messageId":"937","endLine":941,"endColumn":17},{"ruleId":"934","severity":1,"message":"1061","line":983,"column":7,"nodeType":"936","messageId":"937","endLine":983,"endColumn":14},{"ruleId":"943","severity":1,"message":"944","line":995,"column":26,"nodeType":"945","messageId":"946","endLine":995,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":998,"column":21,"nodeType":"936","messageId":"968","endLine":998,"endColumn":36},{"ruleId":"985","severity":1,"message":"986","line":1026,"column":37,"nodeType":"972","messageId":"987","endLine":1026,"endColumn":39},{"ruleId":"985","severity":1,"message":"986","line":1060,"column":35,"nodeType":"972","messageId":"987","endLine":1060,"endColumn":37},{"ruleId":"943","severity":1,"message":"944","line":1081,"column":50,"nodeType":"945","messageId":"946","endLine":1081,"endColumn":52},{"ruleId":"985","severity":1,"message":"986","line":1132,"column":40,"nodeType":"972","messageId":"987","endLine":1132,"endColumn":42},{"ruleId":"943","severity":1,"message":"944","line":1183,"column":47,"nodeType":"945","messageId":"946","endLine":1183,"endColumn":49},{"ruleId":"976","severity":1,"message":"977","line":1184,"column":60,"nodeType":"978","messageId":"979","endLine":1184,"endColumn":61,"fix":"1092"},{"ruleId":"951","severity":1,"message":"952","line":1264,"column":65,"nodeType":"953","endLine":1264,"endColumn":101},{"ruleId":"951","severity":1,"message":"952","line":1271,"column":65,"nodeType":"953","endLine":1271,"endColumn":98},{"ruleId":"1015","severity":1,"message":"1016","line":1298,"column":49,"nodeType":"953","endLine":1300,"endColumn":100},{"ruleId":"943","severity":1,"message":"944","line":1382,"column":6,"nodeType":"945","messageId":"946","endLine":1382,"endColumn":8},{"ruleId":"934","severity":1,"message":"1019","line":2,"column":63,"nodeType":"936","messageId":"937","endLine":2,"endColumn":69},{"ruleId":"934","severity":1,"message":"1053","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":22},{"ruleId":"934","severity":1,"message":"1080","line":71,"column":8,"nodeType":"936","messageId":"937","endLine":71,"endColumn":13},{"ruleId":"943","severity":1,"message":"944","line":97,"column":26,"nodeType":"945","messageId":"946","endLine":97,"endColumn":28},{"ruleId":"934","severity":1,"message":"1093","line":109,"column":11,"nodeType":"936","messageId":"937","endLine":109,"endColumn":19},{"ruleId":"943","severity":1,"message":"944","line":128,"column":42,"nodeType":"945","messageId":"946","endLine":128,"endColumn":44},{"ruleId":"943","severity":1,"message":"944","line":150,"column":46,"nodeType":"945","messageId":"946","endLine":150,"endColumn":48},{"ruleId":"970","severity":1,"message":"1094","line":172,"column":8,"nodeType":"974","endLine":172,"endColumn":10,"suggestions":"1095"},{"ruleId":"976","severity":1,"message":"977","line":284,"column":70,"nodeType":"978","messageId":"979","endLine":284,"endColumn":71,"fix":"1096"},{"ruleId":"934","severity":1,"message":"1097","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":14},{"ruleId":"1098","severity":1,"message":"1099","line":9,"column":1,"nodeType":"1100","endLine":481,"endColumn":2},{"ruleId":"934","severity":1,"message":"1101","line":70,"column":13,"nodeType":"936","messageId":"937","endLine":70,"endColumn":22},{"ruleId":"934","severity":1,"message":"1102","line":72,"column":15,"nodeType":"936","messageId":"937","endLine":72,"endColumn":25},{"ruleId":"934","severity":1,"message":"1101","line":79,"column":13,"nodeType":"936","messageId":"937","endLine":79,"endColumn":22},{"ruleId":"934","severity":1,"message":"1102","line":82,"column":15,"nodeType":"936","messageId":"937","endLine":82,"endColumn":25},{"ruleId":"934","severity":1,"message":"1103","line":143,"column":9,"nodeType":"936","messageId":"937","endLine":143,"endColumn":12},{"ruleId":"934","severity":1,"message":"1104","line":292,"column":8,"nodeType":"936","messageId":"937","endLine":292,"endColumn":16},{"ruleId":"934","severity":1,"message":"1105","line":295,"column":4,"nodeType":"936","messageId":"937","endLine":295,"endColumn":11},{"ruleId":"934","severity":1,"message":"1105","line":309,"column":4,"nodeType":"936","messageId":"937","endLine":309,"endColumn":11},{"ruleId":"930","replacedBy":"1106"},{"ruleId":"932","replacedBy":"1107"},{"ruleId":"934","severity":1,"message":"1019","line":2,"column":26,"nodeType":"936","messageId":"937","endLine":2,"endColumn":32},{"ruleId":"934","severity":1,"message":"1073","line":2,"column":33,"nodeType":"936","messageId":"937","endLine":2,"endColumn":39},{"ruleId":"934","severity":1,"message":"954","line":2,"column":69,"nodeType":"936","messageId":"937","endLine":2,"endColumn":74},{"ruleId":"934","severity":1,"message":"1108","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":26},{"ruleId":"934","severity":1,"message":"1053","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":22},{"ruleId":"934","severity":1,"message":"1109","line":61,"column":12,"nodeType":"936","messageId":"937","endLine":61,"endColumn":32},{"ruleId":"934","severity":1,"message":"1080","line":68,"column":12,"nodeType":"936","messageId":"937","endLine":68,"endColumn":17},{"ruleId":"970","severity":1,"message":"971","line":71,"column":15,"nodeType":"972","endLine":77,"endColumn":6},{"ruleId":"970","severity":1,"message":"1110","line":77,"column":8,"nodeType":"974","endLine":77,"endColumn":10,"suggestions":"1111"},{"ruleId":"943","severity":1,"message":"944","line":95,"column":26,"nodeType":"945","messageId":"946","endLine":95,"endColumn":28},{"ruleId":"934","severity":1,"message":"1093","line":109,"column":11,"nodeType":"936","messageId":"937","endLine":109,"endColumn":19},{"ruleId":"943","severity":1,"message":"944","line":124,"column":26,"nodeType":"945","messageId":"946","endLine":124,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":162,"column":36,"nodeType":"945","messageId":"946","endLine":162,"endColumn":38},{"ruleId":"976","severity":1,"message":"977","line":163,"column":48,"nodeType":"978","messageId":"979","endLine":163,"endColumn":49,"fix":"1112"},{"ruleId":"934","severity":1,"message":"982","line":2,"column":46,"nodeType":"936","messageId":"937","endLine":2,"endColumn":62},{"ruleId":"943","severity":1,"message":"947","line":55,"column":57,"nodeType":"945","messageId":"946","endLine":55,"endColumn":59},{"ruleId":"943","severity":1,"message":"944","line":63,"column":49,"nodeType":"945","messageId":"946","endLine":63,"endColumn":51},{"ruleId":"1015","severity":1,"message":"1016","line":72,"column":37,"nodeType":"953","endLine":72,"endColumn":82},{"ruleId":"934","severity":1,"message":"1113","line":77,"column":11,"nodeType":"936","messageId":"937","endLine":77,"endColumn":30},{"ruleId":"970","severity":1,"message":"971","line":138,"column":15,"nodeType":"972","endLine":181,"endColumn":6},{"ruleId":"943","severity":1,"message":"947","line":148,"column":26,"nodeType":"945","messageId":"946","endLine":148,"endColumn":28},{"ruleId":"934","severity":1,"message":"1114","line":1,"column":16,"nodeType":"936","messageId":"937","endLine":1,"endColumn":24},{"ruleId":"934","severity":1,"message":"1115","line":1,"column":25,"nodeType":"936","messageId":"937","endLine":1,"endColumn":34},{"ruleId":"934","severity":1,"message":"997","line":2,"column":10,"nodeType":"936","messageId":"937","endLine":2,"endColumn":22},{"ruleId":"934","severity":1,"message":"1116","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":19},{"ruleId":"934","severity":1,"message":"1117","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":19},{"ruleId":"934","severity":1,"message":"1118","line":24,"column":9,"nodeType":"936","messageId":"937","endLine":24,"endColumn":15},{"ruleId":"934","severity":1,"message":"1019","line":2,"column":26,"nodeType":"936","messageId":"937","endLine":2,"endColumn":32},{"ruleId":"934","severity":1,"message":"1073","line":2,"column":33,"nodeType":"936","messageId":"937","endLine":2,"endColumn":39},{"ruleId":"934","severity":1,"message":"954","line":2,"column":69,"nodeType":"936","messageId":"937","endLine":2,"endColumn":74},{"ruleId":"934","severity":1,"message":"1108","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":26},{"ruleId":"934","severity":1,"message":"1053","line":5,"column":8,"nodeType":"936","messageId":"937","endLine":5,"endColumn":22},{"ruleId":"934","severity":1,"message":"1109","line":61,"column":12,"nodeType":"936","messageId":"937","endLine":61,"endColumn":32},{"ruleId":"934","severity":1,"message":"1080","line":68,"column":12,"nodeType":"936","messageId":"937","endLine":68,"endColumn":17},{"ruleId":"970","severity":1,"message":"971","line":71,"column":15,"nodeType":"972","endLine":77,"endColumn":6},{"ruleId":"970","severity":1,"message":"1110","line":77,"column":8,"nodeType":"974","endLine":77,"endColumn":10,"suggestions":"1119"},{"ruleId":"943","severity":1,"message":"944","line":95,"column":26,"nodeType":"945","messageId":"946","endLine":95,"endColumn":28},{"ruleId":"934","severity":1,"message":"1093","line":109,"column":11,"nodeType":"936","messageId":"937","endLine":109,"endColumn":19},{"ruleId":"943","severity":1,"message":"944","line":124,"column":26,"nodeType":"945","messageId":"946","endLine":124,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":162,"column":36,"nodeType":"945","messageId":"946","endLine":162,"endColumn":38},{"ruleId":"976","severity":1,"message":"977","line":163,"column":48,"nodeType":"978","messageId":"979","endLine":163,"endColumn":49,"fix":"1120"},{"ruleId":"934","severity":1,"message":"1019","line":1,"column":26,"nodeType":"936","messageId":"937","endLine":1,"endColumn":32},{"ruleId":"934","severity":1,"message":"1027","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":12},{"ruleId":"934","severity":1,"message":"1121","line":67,"column":9,"nodeType":"936","messageId":"937","endLine":67,"endColumn":13},{"ruleId":"1122","severity":1,"message":"1123","line":131,"column":5,"nodeType":"1124","messageId":"1125","endLine":154,"endColumn":6},{"ruleId":"1126","severity":1,"message":"1127","line":135,"column":11,"nodeType":"1128","messageId":"1129","endLine":135,"endColumn":17},{"ruleId":"1126","severity":1,"message":"1127","line":140,"column":9,"nodeType":"1128","messageId":"1129","endLine":140,"endColumn":15},{"ruleId":"1126","severity":1,"message":"1127","line":145,"column":9,"nodeType":"1128","messageId":"1129","endLine":145,"endColumn":15},{"ruleId":"1126","severity":1,"message":"1127","line":150,"column":9,"nodeType":"1128","messageId":"1129","endLine":150,"endColumn":15},{"ruleId":"970","severity":1,"message":"1130","line":166,"column":7,"nodeType":"974","endLine":166,"endColumn":9,"suggestions":"1131"},{"ruleId":"1132","severity":1,"message":"1133","line":202,"column":35,"nodeType":"953","endLine":202,"endColumn":103},{"ruleId":"951","severity":1,"message":"952","line":205,"column":33,"nodeType":"953","endLine":205,"endColumn":80},{"ruleId":"1132","severity":1,"message":"1133","line":215,"column":29,"nodeType":"953","endLine":215,"endColumn":97},{"ruleId":"951","severity":1,"message":"952","line":218,"column":29,"nodeType":"953","endLine":218,"endColumn":120},{"ruleId":"934","severity":1,"message":"1019","line":3,"column":8,"nodeType":"936","messageId":"937","endLine":3,"endColumn":14},{"ruleId":"934","severity":1,"message":"1134","line":8,"column":8,"nodeType":"936","messageId":"937","endLine":8,"endColumn":17},{"ruleId":"934","severity":1,"message":"1135","line":2,"column":20,"nodeType":"936","messageId":"937","endLine":2,"endColumn":29},{"ruleId":"970","severity":1,"message":"971","line":95,"column":11,"nodeType":"972","endLine":131,"endColumn":2},{"ruleId":"943","severity":1,"message":"947","line":103,"column":23,"nodeType":"945","messageId":"946","endLine":103,"endColumn":25},{"ruleId":"943","severity":1,"message":"947","line":109,"column":20,"nodeType":"945","messageId":"946","endLine":109,"endColumn":22},{"ruleId":"970","severity":1,"message":"1136","line":131,"column":4,"nodeType":"974","endLine":131,"endColumn":13,"suggestions":"1137"},{"ruleId":"943","severity":1,"message":"944","line":183,"column":26,"nodeType":"945","messageId":"946","endLine":183,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":188,"column":27,"nodeType":"945","messageId":"946","endLine":188,"endColumn":29},{"ruleId":"934","severity":1,"message":"1114","line":1,"column":25,"nodeType":"936","messageId":"937","endLine":1,"endColumn":33},{"ruleId":"934","severity":1,"message":"1028","line":2,"column":30,"nodeType":"936","messageId":"937","endLine":2,"endColumn":34},{"ruleId":"934","severity":1,"message":"1027","line":2,"column":42,"nodeType":"936","messageId":"937","endLine":2,"endColumn":46},{"ruleId":"934","severity":1,"message":"1138","line":3,"column":8,"nodeType":"936","messageId":"937","endLine":3,"endColumn":16},{"ruleId":"948","severity":1,"message":"949","line":104,"column":17,"nodeType":"950","endLine":104,"endColumn":36},{"ruleId":"1015","severity":1,"message":"1016","line":145,"column":24,"nodeType":"953","endLine":145,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":53,"column":18,"nodeType":"945","messageId":"946","endLine":53,"endColumn":20},{"ruleId":"951","severity":1,"message":"952","line":77,"column":33,"nodeType":"953","endLine":77,"endColumn":100},{"ruleId":"970","severity":1,"message":"971","line":34,"column":15,"nodeType":"972","endLine":45,"endColumn":6},{"ruleId":"943","severity":1,"message":"947","line":39,"column":24,"nodeType":"945","messageId":"946","endLine":39,"endColumn":26},{"ruleId":"970","severity":1,"message":"1136","line":45,"column":8,"nodeType":"974","endLine":45,"endColumn":10,"suggestions":"1139"},{"ruleId":"943","severity":1,"message":"944","line":65,"column":57,"nodeType":"945","messageId":"946","endLine":65,"endColumn":59},{"ruleId":"934","severity":1,"message":"1140","line":1,"column":8,"nodeType":"936","messageId":"937","endLine":1,"endColumn":13},{"ruleId":"970","severity":1,"message":"1141","line":22,"column":8,"nodeType":"974","endLine":22,"endColumn":10,"suggestions":"1142"},{"ruleId":"1015","severity":1,"message":"1016","line":43,"column":24,"nodeType":"953","endLine":43,"endColumn":54},{"ruleId":"934","severity":1,"message":"1018","line":2,"column":20,"nodeType":"936","messageId":"937","endLine":2,"endColumn":30},{"ruleId":"934","severity":1,"message":"1003","line":3,"column":8,"nodeType":"936","messageId":"937","endLine":3,"endColumn":21},{"ruleId":"934","severity":1,"message":"1143","line":7,"column":8,"nodeType":"936","messageId":"937","endLine":7,"endColumn":22},{"ruleId":"934","severity":1,"message":"1144","line":15,"column":12,"nodeType":"936","messageId":"937","endLine":15,"endColumn":15},{"ruleId":"934","severity":1,"message":"1032","line":15,"column":17,"nodeType":"936","messageId":"937","endLine":15,"endColumn":23},{"ruleId":"970","severity":1,"message":"971","line":19,"column":11,"nodeType":"972","endLine":62,"endColumn":2},{"ruleId":"934","severity":1,"message":"1040","line":31,"column":11,"nodeType":"936","messageId":"937","endLine":31,"endColumn":17},{"ruleId":"934","severity":1,"message":"1145","line":49,"column":9,"nodeType":"936","messageId":"937","endLine":49,"endColumn":12},{"ruleId":"951","severity":1,"message":"952","line":77,"column":33,"nodeType":"953","endLine":77,"endColumn":100},{"ruleId":"934","severity":1,"message":"1146","line":17,"column":7,"nodeType":"936","messageId":"937","endLine":17,"endColumn":22},{"ruleId":"970","severity":1,"message":"1147","line":40,"column":4,"nodeType":"974","endLine":40,"endColumn":6,"suggestions":"1148"},{"ruleId":"1015","severity":1,"message":"1016","line":48,"column":21,"nodeType":"953","endLine":48,"endColumn":62},{"ruleId":"934","severity":1,"message":"1149","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":13},{"ruleId":"934","severity":1,"message":"1079","line":2,"column":74,"nodeType":"936","messageId":"937","endLine":2,"endColumn":80},{"ruleId":"934","severity":1,"message":"1051","line":11,"column":8,"nodeType":"936","messageId":"937","endLine":11,"endColumn":13},{"ruleId":"956","severity":1,"message":"1056","line":81,"column":13,"nodeType":"958","messageId":"946","endLine":81,"endColumn":29},{"ruleId":"934","severity":1,"message":"961","line":301,"column":12,"nodeType":"936","messageId":"937","endLine":301,"endColumn":17},{"ruleId":"934","severity":1,"message":"962","line":301,"column":19,"nodeType":"936","messageId":"937","endLine":301,"endColumn":27},{"ruleId":"934","severity":1,"message":"1080","line":303,"column":11,"nodeType":"936","messageId":"937","endLine":303,"endColumn":16},{"ruleId":"934","severity":1,"message":"1081","line":304,"column":10,"nodeType":"936","messageId":"937","endLine":304,"endColumn":23},{"ruleId":"934","severity":1,"message":"1082","line":304,"column":24,"nodeType":"936","messageId":"937","endLine":304,"endColumn":40},{"ruleId":"943","severity":1,"message":"947","line":323,"column":46,"nodeType":"945","messageId":"946","endLine":323,"endColumn":48},{"ruleId":"943","severity":1,"message":"944","line":333,"column":52,"nodeType":"945","messageId":"946","endLine":333,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":348,"column":54,"nodeType":"945","messageId":"946","endLine":348,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":356,"column":60,"nodeType":"945","messageId":"946","endLine":356,"endColumn":62},{"ruleId":"943","severity":1,"message":"944","line":380,"column":53,"nodeType":"945","messageId":"946","endLine":380,"endColumn":55},{"ruleId":"943","severity":1,"message":"944","line":386,"column":53,"nodeType":"945","messageId":"946","endLine":386,"endColumn":55},{"ruleId":"934","severity":1,"message":"1083","line":451,"column":7,"nodeType":"936","messageId":"937","endLine":451,"endColumn":18},{"ruleId":"943","severity":1,"message":"947","line":466,"column":54,"nodeType":"945","messageId":"946","endLine":466,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":478,"column":60,"nodeType":"945","messageId":"946","endLine":478,"endColumn":62},{"ruleId":"985","severity":1,"message":"986","line":600,"column":63,"nodeType":"972","messageId":"987","endLine":600,"endColumn":65},{"ruleId":"943","severity":1,"message":"947","line":601,"column":68,"nodeType":"945","messageId":"946","endLine":601,"endColumn":70},{"ruleId":"985","severity":1,"message":"986","line":618,"column":55,"nodeType":"972","messageId":"987","endLine":618,"endColumn":57},{"ruleId":"943","severity":1,"message":"947","line":671,"column":52,"nodeType":"945","messageId":"946","endLine":671,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":683,"column":48,"nodeType":"945","messageId":"946","endLine":683,"endColumn":50},{"ruleId":"970","severity":1,"message":"1150","line":734,"column":5,"nodeType":"974","endLine":734,"endColumn":51,"suggestions":"1151"},{"ruleId":"934","severity":1,"message":"1067","line":736,"column":8,"nodeType":"936","messageId":"937","endLine":736,"endColumn":22},{"ruleId":"943","severity":1,"message":"944","line":740,"column":26,"nodeType":"945","messageId":"946","endLine":740,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":746,"column":33,"nodeType":"945","messageId":"946","endLine":746,"endColumn":35},{"ruleId":"943","severity":1,"message":"947","line":751,"column":27,"nodeType":"945","messageId":"946","endLine":751,"endColumn":29},{"ruleId":"943","severity":1,"message":"947","line":792,"column":59,"nodeType":"945","messageId":"946","endLine":792,"endColumn":61},{"ruleId":"943","severity":1,"message":"947","line":827,"column":67,"nodeType":"945","messageId":"946","endLine":827,"endColumn":69},{"ruleId":"943","severity":1,"message":"947","line":872,"column":67,"nodeType":"945","messageId":"946","endLine":872,"endColumn":69},{"ruleId":"934","severity":1,"message":"1152","line":929,"column":9,"nodeType":"936","messageId":"937","endLine":929,"endColumn":20},{"ruleId":"934","severity":1,"message":"1061","line":962,"column":7,"nodeType":"936","messageId":"937","endLine":962,"endColumn":14},{"ruleId":"943","severity":1,"message":"944","line":974,"column":26,"nodeType":"945","messageId":"946","endLine":974,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":977,"column":21,"nodeType":"936","messageId":"968","endLine":977,"endColumn":36},{"ruleId":"985","severity":1,"message":"986","line":1005,"column":37,"nodeType":"972","messageId":"987","endLine":1005,"endColumn":39},{"ruleId":"985","severity":1,"message":"986","line":1039,"column":35,"nodeType":"972","messageId":"987","endLine":1039,"endColumn":37},{"ruleId":"985","severity":1,"message":"986","line":1085,"column":35,"nodeType":"972","messageId":"987","endLine":1085,"endColumn":37},{"ruleId":"943","severity":1,"message":"944","line":1108,"column":50,"nodeType":"945","messageId":"946","endLine":1108,"endColumn":52},{"ruleId":"943","severity":1,"message":"944","line":1223,"column":47,"nodeType":"945","messageId":"946","endLine":1223,"endColumn":49},{"ruleId":"976","severity":1,"message":"977","line":1224,"column":60,"nodeType":"978","messageId":"979","endLine":1224,"endColumn":61,"fix":"1153"},{"ruleId":"943","severity":1,"message":"944","line":1272,"column":84,"nodeType":"945","messageId":"946","endLine":1272,"endColumn":86},{"ruleId":"951","severity":1,"message":"952","line":1341,"column":73,"nodeType":"953","endLine":1341,"endColumn":109},{"ruleId":"951","severity":1,"message":"952","line":1348,"column":73,"nodeType":"953","endLine":1348,"endColumn":106},{"ruleId":"1015","severity":1,"message":"1016","line":1375,"column":57,"nodeType":"953","endLine":1377,"endColumn":108},{"ruleId":"934","severity":1,"message":"1079","line":2,"column":74,"nodeType":"936","messageId":"937","endLine":2,"endColumn":80},{"ruleId":"934","severity":1,"message":"1051","line":11,"column":8,"nodeType":"936","messageId":"937","endLine":11,"endColumn":13},{"ruleId":"956","severity":1,"message":"1056","line":81,"column":13,"nodeType":"958","messageId":"946","endLine":81,"endColumn":29},{"ruleId":"934","severity":1,"message":"961","line":302,"column":12,"nodeType":"936","messageId":"937","endLine":302,"endColumn":17},{"ruleId":"934","severity":1,"message":"962","line":302,"column":19,"nodeType":"936","messageId":"937","endLine":302,"endColumn":27},{"ruleId":"934","severity":1,"message":"1080","line":304,"column":11,"nodeType":"936","messageId":"937","endLine":304,"endColumn":16},{"ruleId":"934","severity":1,"message":"1081","line":306,"column":10,"nodeType":"936","messageId":"937","endLine":306,"endColumn":23},{"ruleId":"934","severity":1,"message":"1082","line":306,"column":24,"nodeType":"936","messageId":"937","endLine":306,"endColumn":40},{"ruleId":"943","severity":1,"message":"947","line":325,"column":46,"nodeType":"945","messageId":"946","endLine":325,"endColumn":48},{"ruleId":"943","severity":1,"message":"944","line":335,"column":52,"nodeType":"945","messageId":"946","endLine":335,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":350,"column":54,"nodeType":"945","messageId":"946","endLine":350,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":358,"column":60,"nodeType":"945","messageId":"946","endLine":358,"endColumn":62},{"ruleId":"943","severity":1,"message":"944","line":382,"column":53,"nodeType":"945","messageId":"946","endLine":382,"endColumn":55},{"ruleId":"943","severity":1,"message":"944","line":388,"column":53,"nodeType":"945","messageId":"946","endLine":388,"endColumn":55},{"ruleId":"934","severity":1,"message":"1083","line":453,"column":7,"nodeType":"936","messageId":"937","endLine":453,"endColumn":18},{"ruleId":"943","severity":1,"message":"947","line":468,"column":54,"nodeType":"945","messageId":"946","endLine":468,"endColumn":56},{"ruleId":"943","severity":1,"message":"944","line":480,"column":60,"nodeType":"945","messageId":"946","endLine":480,"endColumn":62},{"ruleId":"985","severity":1,"message":"986","line":609,"column":63,"nodeType":"972","messageId":"987","endLine":609,"endColumn":65},{"ruleId":"943","severity":1,"message":"947","line":610,"column":68,"nodeType":"945","messageId":"946","endLine":610,"endColumn":70},{"ruleId":"985","severity":1,"message":"986","line":627,"column":55,"nodeType":"972","messageId":"987","endLine":627,"endColumn":57},{"ruleId":"943","severity":1,"message":"947","line":680,"column":52,"nodeType":"945","messageId":"946","endLine":680,"endColumn":54},{"ruleId":"943","severity":1,"message":"947","line":692,"column":48,"nodeType":"945","messageId":"946","endLine":692,"endColumn":50},{"ruleId":"970","severity":1,"message":"1150","line":746,"column":5,"nodeType":"974","endLine":746,"endColumn":51,"suggestions":"1154"},{"ruleId":"934","severity":1,"message":"1067","line":751,"column":8,"nodeType":"936","messageId":"937","endLine":751,"endColumn":22},{"ruleId":"943","severity":1,"message":"944","line":755,"column":26,"nodeType":"945","messageId":"946","endLine":755,"endColumn":28},{"ruleId":"943","severity":1,"message":"944","line":761,"column":33,"nodeType":"945","messageId":"946","endLine":761,"endColumn":35},{"ruleId":"943","severity":1,"message":"947","line":766,"column":27,"nodeType":"945","messageId":"946","endLine":766,"endColumn":29},{"ruleId":"943","severity":1,"message":"947","line":818,"column":59,"nodeType":"945","messageId":"946","endLine":818,"endColumn":61},{"ruleId":"943","severity":1,"message":"947","line":853,"column":67,"nodeType":"945","messageId":"946","endLine":853,"endColumn":69},{"ruleId":"943","severity":1,"message":"947","line":898,"column":67,"nodeType":"945","messageId":"946","endLine":898,"endColumn":69},{"ruleId":"934","severity":1,"message":"1152","line":955,"column":9,"nodeType":"936","messageId":"937","endLine":955,"endColumn":20},{"ruleId":"934","severity":1,"message":"1061","line":988,"column":7,"nodeType":"936","messageId":"937","endLine":988,"endColumn":14},{"ruleId":"943","severity":1,"message":"944","line":1000,"column":26,"nodeType":"945","messageId":"946","endLine":1000,"endColumn":28},{"ruleId":"966","severity":1,"message":"967","line":1003,"column":21,"nodeType":"936","messageId":"968","endLine":1003,"endColumn":36},{"ruleId":"985","severity":1,"message":"986","line":1031,"column":37,"nodeType":"972","messageId":"987","endLine":1031,"endColumn":39},{"ruleId":"985","severity":1,"message":"986","line":1065,"column":35,"nodeType":"972","messageId":"987","endLine":1065,"endColumn":37},{"ruleId":"985","severity":1,"message":"986","line":1111,"column":35,"nodeType":"972","messageId":"987","endLine":1111,"endColumn":37},{"ruleId":"943","severity":1,"message":"944","line":1134,"column":50,"nodeType":"945","messageId":"946","endLine":1134,"endColumn":52},{"ruleId":"943","severity":1,"message":"944","line":1252,"column":47,"nodeType":"945","messageId":"946","endLine":1252,"endColumn":49},{"ruleId":"976","severity":1,"message":"977","line":1253,"column":60,"nodeType":"978","messageId":"979","endLine":1253,"endColumn":61,"fix":"1155"},{"ruleId":"943","severity":1,"message":"944","line":1301,"column":84,"nodeType":"945","messageId":"946","endLine":1301,"endColumn":86},{"ruleId":"951","severity":1,"message":"952","line":1370,"column":73,"nodeType":"953","endLine":1370,"endColumn":109},{"ruleId":"951","severity":1,"message":"952","line":1377,"column":73,"nodeType":"953","endLine":1377,"endColumn":106},{"ruleId":"1015","severity":1,"message":"1016","line":1404,"column":57,"nodeType":"953","endLine":1406,"endColumn":108},{"ruleId":"951","severity":1,"message":"952","line":18,"column":25,"nodeType":"953","endLine":18,"endColumn":96},{"ruleId":"934","severity":1,"message":"1115","line":1,"column":15,"nodeType":"936","messageId":"937","endLine":1,"endColumn":24},{"ruleId":"934","severity":1,"message":"1114","line":1,"column":25,"nodeType":"936","messageId":"937","endLine":1,"endColumn":33},{"ruleId":"970","severity":1,"message":"971","line":54,"column":15,"nodeType":"972","endLine":62,"endColumn":6},{"ruleId":"943","severity":1,"message":"947","line":21,"column":21,"nodeType":"945","messageId":"946","endLine":21,"endColumn":23},{"ruleId":"1122","severity":1,"message":"1123","line":32,"column":9,"nodeType":"1124","messageId":"1125","endLine":53,"endColumn":10},{"ruleId":"951","severity":1,"message":"952","line":78,"column":21,"nodeType":"953","endLine":78,"endColumn":81},{"ruleId":"934","severity":1,"message":"1156","line":9,"column":61,"nodeType":"936","messageId":"937","endLine":9,"endColumn":78},{"ruleId":"934","severity":1,"message":"1157","line":13,"column":8,"nodeType":"936","messageId":"937","endLine":13,"endColumn":16},{"ruleId":"1158","severity":1,"message":"1159","line":37,"column":90,"nodeType":"1160","messageId":"1161","endLine":37,"endColumn":91,"suggestions":"1162"},{"ruleId":"943","severity":1,"message":"944","line":39,"column":32,"nodeType":"945","messageId":"946","endLine":39,"endColumn":34},{"ruleId":"943","severity":1,"message":"944","line":44,"column":32,"nodeType":"945","messageId":"946","endLine":44,"endColumn":34},{"ruleId":"943","severity":1,"message":"944","line":52,"column":35,"nodeType":"945","messageId":"946","endLine":52,"endColumn":37},{"ruleId":"970","severity":1,"message":"971","line":16,"column":11,"nodeType":"972","endLine":23,"endColumn":2},{"ruleId":"934","severity":1,"message":"1163","line":27,"column":19,"nodeType":"936","messageId":"937","endLine":27,"endColumn":24},{"ruleId":"970","severity":1,"message":"971","line":38,"column":11,"nodeType":"972","endLine":42,"endColumn":2},{"ruleId":"934","severity":1,"message":"1115","line":1,"column":15,"nodeType":"936","messageId":"937","endLine":1,"endColumn":24},{"ruleId":"966","severity":1,"message":"1037","line":30,"column":15,"nodeType":"936","messageId":"968","endLine":30,"endColumn":31},{"ruleId":"934","severity":1,"message":"1039","line":36,"column":10,"nodeType":"936","messageId":"937","endLine":36,"endColumn":16},{"ruleId":"934","severity":1,"message":"1040","line":46,"column":11,"nodeType":"936","messageId":"937","endLine":46,"endColumn":17},{"ruleId":"976","severity":1,"message":"977","line":46,"column":55,"nodeType":"978","messageId":"979","endLine":46,"endColumn":56,"fix":"1164"},{"ruleId":"943","severity":1,"message":"944","line":65,"column":20,"nodeType":"945","messageId":"946","endLine":65,"endColumn":22},{"ruleId":"934","severity":1,"message":"1165","line":46,"column":12,"nodeType":"936","messageId":"937","endLine":46,"endColumn":24},{"ruleId":"934","severity":1,"message":"1166","line":46,"column":26,"nodeType":"936","messageId":"937","endLine":46,"endColumn":41},{"ruleId":"934","severity":1,"message":"1167","line":47,"column":11,"nodeType":"936","messageId":"937","endLine":47,"endColumn":23},{"ruleId":"934","severity":1,"message":"1168","line":50,"column":7,"nodeType":"936","messageId":"937","endLine":50,"endColumn":21},{"ruleId":"934","severity":1,"message":"1169","line":54,"column":7,"nodeType":"936","messageId":"937","endLine":54,"endColumn":25},{"ruleId":"934","severity":1,"message":"1170","line":59,"column":7,"nodeType":"936","messageId":"937","endLine":59,"endColumn":18},{"ruleId":"943","severity":1,"message":"944","line":85,"column":22,"nodeType":"945","messageId":"946","endLine":85,"endColumn":24},{"ruleId":"943","severity":1,"message":"947","line":103,"column":31,"nodeType":"945","messageId":"946","endLine":103,"endColumn":33},{"ruleId":"943","severity":1,"message":"947","line":104,"column":38,"nodeType":"945","messageId":"946","endLine":104,"endColumn":40},{"ruleId":"1015","severity":1,"message":"1016","line":105,"column":13,"nodeType":"953","endLine":105,"endColumn":67},{"ruleId":"951","severity":1,"message":"952","line":110,"column":21,"nodeType":"953","endLine":110,"endColumn":83},{"ruleId":"943","severity":1,"message":"947","line":29,"column":18,"nodeType":"945","messageId":"946","endLine":29,"endColumn":20},{"ruleId":"943","severity":1,"message":"944","line":103,"column":24,"nodeType":"945","messageId":"946","endLine":103,"endColumn":26},{"ruleId":"1015","severity":1,"message":"1016","line":116,"column":17,"nodeType":"953","endLine":116,"endColumn":54},{"ruleId":"1015","severity":1,"message":"1016","line":119,"column":17,"nodeType":"953","endLine":119,"endColumn":52},{"ruleId":"943","severity":1,"message":"947","line":126,"column":29,"nodeType":"945","messageId":"946","endLine":126,"endColumn":31},{"ruleId":"943","severity":1,"message":"947","line":135,"column":29,"nodeType":"945","messageId":"946","endLine":135,"endColumn":31},{"ruleId":"943","severity":1,"message":"947","line":143,"column":38,"nodeType":"945","messageId":"946","endLine":143,"endColumn":40},{"ruleId":"934","severity":1,"message":"1017","line":1,"column":10,"nodeType":"936","messageId":"937","endLine":1,"endColumn":20},{"ruleId":"934","severity":1,"message":"1007","line":7,"column":9,"nodeType":"936","messageId":"937","endLine":7,"endColumn":13},{"ruleId":"943","severity":1,"message":"944","line":33,"column":9,"nodeType":"945","messageId":"946","endLine":33,"endColumn":11},{"ruleId":"943","severity":1,"message":"944","line":36,"column":9,"nodeType":"945","messageId":"946","endLine":36,"endColumn":11},{"ruleId":"943","severity":1,"message":"944","line":39,"column":10,"nodeType":"945","messageId":"946","endLine":39,"endColumn":12},{"ruleId":"970","severity":1,"message":"1171","line":42,"column":4,"nodeType":"974","endLine":42,"endColumn":6,"suggestions":"1172"},{"ruleId":"943","severity":1,"message":"944","line":50,"column":18,"nodeType":"945","messageId":"946","endLine":50,"endColumn":20},{"ruleId":"943","severity":1,"message":"944","line":53,"column":18,"nodeType":"945","messageId":"946","endLine":53,"endColumn":20},{"ruleId":"943","severity":1,"message":"944","line":55,"column":20,"nodeType":"945","messageId":"946","endLine":55,"endColumn":22},{"ruleId":"934","severity":1,"message":"1019","line":1,"column":27,"nodeType":"936","messageId":"937","endLine":1,"endColumn":33},{"ruleId":"934","severity":1,"message":"1135","line":1,"column":34,"nodeType":"936","messageId":"937","endLine":1,"endColumn":43},{"ruleId":"943","severity":1,"message":"944","line":21,"column":38,"nodeType":"945","messageId":"946","endLine":21,"endColumn":40},{"ruleId":"943","severity":1,"message":"947","line":82,"column":75,"nodeType":"945","messageId":"946","endLine":82,"endColumn":77},{"ruleId":"943","severity":1,"message":"944","line":108,"column":12,"nodeType":"945","messageId":"946","endLine":108,"endColumn":14},{"ruleId":"943","severity":1,"message":"944","line":26,"column":41,"nodeType":"945","messageId":"946","endLine":26,"endColumn":43},{"ruleId":"943","severity":1,"message":"947","line":93,"column":68,"nodeType":"945","messageId":"946","endLine":93,"endColumn":70},{"ruleId":"943","severity":1,"message":"944","line":119,"column":16,"nodeType":"945","messageId":"946","endLine":119,"endColumn":18},{"ruleId":"934","severity":1,"message":"1114","line":2,"column":15,"nodeType":"936","messageId":"937","endLine":2,"endColumn":23},{"ruleId":"934","severity":1,"message":"1114","line":2,"column":15,"nodeType":"936","messageId":"937","endLine":2,"endColumn":23},{"ruleId":"934","severity":1,"message":"1017","line":4,"column":8,"nodeType":"936","messageId":"937","endLine":4,"endColumn":18},{"ruleId":"934","severity":1,"message":"1173","line":6,"column":8,"nodeType":"936","messageId":"937","endLine":6,"endColumn":18},{"ruleId":"934","severity":1,"message":"1174","line":7,"column":8,"nodeType":"936","messageId":"937","endLine":7,"endColumn":16},{"ruleId":"948","severity":1,"message":"949","line":41,"column":9,"nodeType":"950","endLine":41,"endColumn":31},{"ruleId":"934","severity":1,"message":"1019","line":3,"column":8,"nodeType":"936","messageId":"937","endLine":3,"endColumn":14},{"ruleId":"934","severity":1,"message":"1175","line":29,"column":7,"nodeType":"936","messageId":"937","endLine":29,"endColumn":18},{"ruleId":"934","severity":1,"message":"1176","line":49,"column":7,"nodeType":"936","messageId":"937","endLine":49,"endColumn":20},"no-native-reassign",["1177"],"no-negated-in-lhs",["1178"],"no-unused-vars","'UsuarioProvider' is defined but never used.","Identifier","unusedVar","'AdmEtiquetas' is defined but never used.","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'setmatch' is assigned a value but never used.","'usuario' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Paper' is defined but never used.","'EtiquetasIcon' is defined but never used.","no-dupe-keys","Duplicate key 'divEtiqueta'.","ObjectExpression","'etiquetarray' is assigned a value but never used.","'etiquetas' is assigned a value but never used.","'paper' is assigned a value but never used.","'setpaper' is assigned a value but never used.","'manejarSnapshot' is defined but never used.","'armarconsultrecientes' is assigned a value but never used.","'armarconsultvalorados' is assigned a value but never used.","no-redeclare","'antiguoHaVotado' is already defined.","redeclared","'consulta' is already defined.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'buscaretiquetas' and 'listaconid'. Either include them or remove the dependency array.","ArrayExpression",["1179"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"1180","text":"1181"},{"range":"1182","text":"1183"},"'CircularProgress' is defined but never used.","React Hook useEffect has missing dependencies: 'agregarEtiquetas' and 'props.history'. Either include them or remove the dependency array.",["1184"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'removerEtiqueta' is assigned a value but never used.","'editarTodolosPapers' is assigned a value but never used.","'buscarPaperEdit' is assigned a value but never used.","'editaPaper' is assigned a value but never used.","'nuevaLista' is assigned a value but never used.","'nuevasEtiquetas' is assigned a value but never used.","'createoredit' is assigned a value but never used.","'coincide' is assigned a value but never used.",{"range":"1185","text":"1186"},"'convertToRaw' is defined but never used.","'ContentState' is defined but never used.","'convertFromHTML' is defined but never used.","'EditorState' is defined but never used.","React Hook useEffect has a missing dependency: 'editorState'. Either include it or remove the dependency array.",["1187"],"'AddAPhotoIcon' is defined but never used.","'Etiquetas' is defined but never used.","'LinearProgress' is defined but never used.","'purple' is defined but never used.","'Link' is defined but never used.","'seleccionarArchivo' is assigned a value but never used.","'agregarEtiquet' is assigned a value but never used.","'ActualizarPaper' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'llamarEtiquetas', 'props.history', and 'props.match.params'. Either include them or remove the dependency array.",["1188"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'Button' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'buscarPaper' and 'props.match.params'. Either include them or remove the dependency array.",["1189"],"'papermatch' is assigned a value but never used.","'fade' is defined but never used.","'Icon' is defined but never used.","'Grid' is defined but never used.","'SearchIcon' is defined but never used.","'InputBase' is defined but never used.","'BookIcon' is defined but never used.","'seturl' is assigned a value but never used.","'noFound' is assigned a value but never used.","'dejarUnaColaboracion' is assigned a value but never used.","'buscarPaper' is assigned a value but never used.","'formatTitle' is assigned a value but never used.","'trimmedStringdos' is already defined.","'formatTitleDos' is assigned a value but never used.","'buscar' is assigned a value but never used.","'prueba' is assigned a value but never used.",{"range":"1190","text":"1191"},"'dejarUnComentario' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1192"],"'pruebaFormulario' is assigned a value but never used.","'buscarDos' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Lapiz' is defined but never used.","'InsertDriveFileIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'RetornarPaper' is defined but never used.","'RenovarPaperMapEtiqueta' is defined but never used.","Duplicate key '& .botoneditar'.","'cargando' is assigned a value but never used.","'setcargando' is assigned a value but never used.","'cargandoCorazon' is assigned a value but never used.","'setcargandoCorazon' is assigned a value but never used.","'megusta' is assigned a value but never used.","'tamaño' is assigned a value but never used.","'ultimoDocumento' is assigned a value but never used.","'setultimoDocumento' is assigned a value but never used.","'megustatres' is assigned a value but never used.","'megustacuatro' is assigned a value but never used.","'funcionCorazon' is assigned a value but never used.","'PostAddIcon' is defined but never used.","'LabelIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'recorrertag'. Either include it or remove the dependency array.",["1193"],"'id' is assigned a value but never used.","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'lista' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'setvalor' is assigned a value but never used.","'setRef' is defined but never used.","'vacio' is assigned a value but never used.","'tituloGeneral' is assigned a value but never used.","'setTituloGeneral' is assigned a value but never used.","'buscarTexto' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.valorados'. Either include it or remove the dependency array.",["1194"],{"range":"1195","text":"1196"},"React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["1197"],"'Alert' is defined but never used.",["1198"],"'updateTag' is assigned a value but never used.",{"range":"1199","text":"1196"},"'pedirMas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listAllUsers'. Either include it or remove the dependency array.",["1200"],{"range":"1201","text":"1196"},"'moment' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'pruebados' is assigned a value but never used.","'pruebaTres' is assigned a value but never used.","'ref' is assigned a value but never used.","'consulta' is assigned a value but never used.","'mensaje' is assigned a value but never used.",["1177"],["1178"],"'FuncionesGenerales' is defined but never used.","'comentariosMostrados' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pedirComentarios'. Either include it or remove the dependency array.",["1202"],{"range":"1203","text":"1204"},"'onEditorStateChange' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'draftToHtml' is defined but never used.","'htmlToDraft' is defined but never used.","'clases' is assigned a value but never used.",["1205"],{"range":"1206","text":"1204"},"'test' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has a missing dependency: 'pedirEtiqueta'. Either include it or remove the dependency array.",["1207"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'InboxIcon' is defined but never used.","'TextField' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params'. Either include it or remove the dependency array.",["1208"],"'SendIcon' is defined but never used.",["1209"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'props.informacion'. Either include it or remove the dependency array. If 'setinfo' needs the current value of 'props.informacion', you can also switch to useReducer instead of useState and read 'props.informacion' in the reducer.",["1210"],"'HelmetMetaData' is defined but never used.","'url' is assigned a value but never used.","'img' is assigned a value but never used.","'descargarimagen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.",["1211"],"'Icono' is defined but never used.","React Hook useEffect has missing dependencies: 'populares' and 'recientes'. Either include them or remove the dependency array.",["1212"],"'buscarPorId' is assigned a value but never used.",{"range":"1213","text":"1196"},["1214"],{"range":"1215","text":"1196"},"'DialogContentText' is defined but never used.","'Cargando' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["1216","1217"],"'query' is assigned a value but never used.",{"range":"1218","text":"1219"},"'topicoNombre' is assigned a value but never used.","'settopicoNombre' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'pedirEtiquetas' is assigned a value but never used.","'buscarporetiquetas' is assigned a value but never used.","'tagBuscando' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history.location.pathname'. Either include it or remove the dependency array.",["1220"],"'VolumeDown' is defined but never used.","'VolumeUp' is defined but never used.","'DialogTitle' is assigned a value but never used.","'DialogActions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1221","fix":"1222"},[16464,16518],"\n                                                    .",[20204,20230],"\n                        .",{"desc":"1223","fix":"1224"},[29281,29311],"\n                            .",{"desc":"1225","fix":"1226"},{"desc":"1227","fix":"1228"},{"desc":"1229","fix":"1230"},[9085,9094],"\n       .",{"desc":"1231","fix":"1232"},{"desc":"1233","fix":"1234"},{"desc":"1235","fix":"1236"},[33377,33409],"\n                              .",{"desc":"1237","fix":"1238"},{"desc":"1235","fix":"1239"},[34816,34848],{"desc":"1240","fix":"1241"},[9180,9212],{"desc":"1242","fix":"1243"},[3588,3608],"\n                  .",{"desc":"1242","fix":"1244"},[3595,3615],{"desc":"1245","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1249","fix":"1250"},{"desc":"1251","fix":"1252"},{"desc":"1253","fix":"1254"},{"desc":"1255","fix":"1256"},[33495,33527],{"desc":"1255","fix":"1257"},[33526,33558],{"messageId":"1258","fix":"1259","desc":"1260"},{"messageId":"1261","fix":"1262","desc":"1263"},[1478,1484],"\n    .",{"desc":"1264","fix":"1265"},"Update the dependencies array to be: [buscaretiquetas, listaconid, props]",{"range":"1266","text":"1267"},"Update the dependencies array to be: [agregarEtiquetas, props.history, usuario]",{"range":"1268","text":"1269"},"Update the dependencies array to be: [editorState]",{"range":"1270","text":"1271"},"Update the dependencies array to be: [errores, llamarEtiquetas, props.history, props.match.params, usuario]",{"range":"1272","text":"1273"},"Update the dependencies array to be: [buscarPaper, props.match.params]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [usuario, url, history.location.pathname, history]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [props, recorrertag]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [props.recientes, props.paperid, props.busqueda, props.valorados]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [location.state, props]",{"range":"1282","text":"1283"},{"range":"1284","text":"1281"},"Update the dependencies array to be: [listAllUsers]",{"range":"1285","text":"1286"},"Update the dependencies array to be: [pedirComentarios]",{"range":"1287","text":"1288"},{"range":"1289","text":"1288"},"Update the dependencies array to be: [pedirEtiqueta]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [errores, props.match.params]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [props.match.params]",{"range":"1294","text":"1295"},"Update the dependencies array to be: [props.informacion]",{"range":"1296","text":"1297"},"Update the dependencies array to be: [url]",{"range":"1298","text":"1299"},"Update the dependencies array to be: [props.recientes, props.paperid, props.busqueda, recientes, populares]",{"range":"1300","text":"1301"},{"range":"1302","text":"1301"},"removeEscape",{"range":"1303","text":"1304"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1305","text":"1306"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [history.location.pathname]",{"range":"1307","text":"1308"},[12021,12028],"[buscaretiquetas, listaconid, props]",[5751,5760],"[agregarEtiquetas, props.history, usuario]",[1690,1692],"[editorState]",[23566,23583],"[errores, llamarEtiquetas, props.history, props.match.params, usuario]",[7917,7919],"[buscarPaper, props.match.params]",[11168,11207],"[usuario, url, history.location.pathname, history]",[1451,1458],"[props, recorrertag]",[20802,20848],"[props.recientes, props.paperid, props.busqueda, props.valorados]",[1029,1036],"[location.state, props]",[21974,22020],[4914,4916],"[listAllUsers]",[1590,1592],"[pedirComentarios]",[1591,1593],[3622,3624],"[pedirEtiqueta]",[2925,2934],"[errores, props.match.params]",[1027,1029],"[props.match.params]",[520,522],"[props.informacion]",[1256,1258],"[url]",[20632,20678],"[props.recientes, props.paperid, props.busqueda, recientes, populares]",[20639,20685],[1321,1322],"",[1321,1321],"\\",[1163,1165],"[history.location.pathname]"]
[{"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/index.js":"1","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/reportWebVitals.js":"2","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/App.js":"3","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/UsuarioContext.jsx":"4","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provider/TemaConfig.js":"5","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Login.jsx":"6","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearPaper.jsx":"7","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetas.jsx":"8","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdmEtiquetas.jsx":"9","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearCuenta.jsx":"10","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/inicio.jsx":"11","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/appbar.jsx":"12","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/useAutenticado.jsx":"13","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/firebase.js":"14","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Etiquetas.jsx":"15","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AutoCompletarTres.jsx":"16","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Caja.jsx":"17","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paper.jsx":"18","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/BotonFlotante.jsx":"19","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/config.js":"20","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetasdos.jsx":"21","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paperdos.jsx":"22","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/Funciones.js":"23","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/PaperDoc.js":"24","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetastres.jsx":"25","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Papertres.jsx":"26","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetascuatro.jsx":"27","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Nosotros.jsx":"28"},{"size":608,"mtime":1615496437395,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1611457257907,"results":"31","hashOfConfig":"30"},{"size":3193,"mtime":1621891280797,"results":"32","hashOfConfig":"30"},{"size":374,"mtime":1615487440284,"results":"33","hashOfConfig":"30"},{"size":548,"mtime":1617831342527,"results":"34","hashOfConfig":"30"},{"size":9499,"mtime":1621892401985,"results":"35","hashOfConfig":"30"},{"size":32796,"mtime":1621889909143,"results":"36","hashOfConfig":"30"},{"size":6352,"mtime":1619192777834,"results":"37","hashOfConfig":"38"},{"size":17475,"mtime":1621889909141,"results":"39","hashOfConfig":"30"},{"size":7425,"mtime":1621730249368,"results":"40","hashOfConfig":"30"},{"size":1228,"mtime":1620836722159,"results":"41","hashOfConfig":"30"},{"size":22448,"mtime":1621886611395,"results":"42","hashOfConfig":"30"},{"size":1440,"mtime":1621875251588,"results":"43","hashOfConfig":"30"},{"size":1597,"mtime":1619214169535,"results":"44","hashOfConfig":"30"},{"size":1368,"mtime":1615771018382,"results":"45","hashOfConfig":"30"},{"size":3525,"mtime":1621700456544,"results":"46","hashOfConfig":"30"},{"size":34220,"mtime":1621889909138,"results":"47","hashOfConfig":"30"},{"size":9536,"mtime":1619022171417,"results":"48","hashOfConfig":"30"},{"size":930,"mtime":1621886611394,"results":"49","hashOfConfig":"30"},{"size":420,"mtime":1621889909145,"results":"50","hashOfConfig":"30"},{"size":6783,"mtime":1619331950343,"results":"51","hashOfConfig":"38"},{"size":22484,"mtime":1619332672014,"results":"52","hashOfConfig":"38"},{"size":684,"mtime":1619236368015,"results":"53","hashOfConfig":"30"},{"size":2153,"mtime":1621674997219,"results":"54","hashOfConfig":"30"},{"size":18465,"mtime":1621679667171,"results":"55","hashOfConfig":"30"},{"size":20786,"mtime":1621691065837,"results":"56","hashOfConfig":"30"},{"size":17047,"mtime":1621627380761,"results":"57","hashOfConfig":"30"},{"size":1981,"mtime":1621562139329,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"ghdeqx",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"ipoow4",{"filePath":"79","messages":"80","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"61"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"61"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":2,"source":"124","usedDeprecatedRules":"61"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"61"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"61"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/index.js",[],["133","134"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/reportWebVitals.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/App.js",["135","136","137","138","139"],"import React ,{useState,useContext,useEffect}from 'react'\nimport Login from '../src/Paginas/Login'\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Inicio from './Paginas/inicio'\nimport {ThemeProvider, makeStyles} from  \"@material-ui/core/styles\"\nimport theme  from \"./Provider/TemaConfig\"\nimport {UsuarioContext,UsuarioProvider } from \"./Provedores/UsuarioContext\"\nimport  Navegador  from './Componetes/Navegador/appbar'\nimport CrearPaper from './Paginas/CrearPaper'\nimport Etiquetas from './Paginas/Etiquetastres'\nimport EtiquetasDos from './Paginas/Etiquetascuatro'\nimport {useHistory} from 'react-router-dom'\nimport AdmEtiquetas from './Paginas/AdmEtiquetas'\nimport CrearCuenta from './Paginas/CrearCuenta'\nimport Nosotros from '../src/Paginas/Nosotros'\n\n\nconst estilos =makeStyles((theme)=>({\n\nroot:{\n\n  \"& body\":{\n    backgroundColor:\"#ffffff\"\n  }\n}\n\n\n}))\n\n\n\nconst App = (props) => {\n\n  const clases=estilos()\n  const history=useHistory()\nconst [recientes, setrecientes] = useState(false)\n\nconst [valorados, setvalorados] = useState(false)\n\nconst [match, setmatch] = useState()\n  \n  const usuario=useContext(UsuarioContext)\n\n\n const reciente=()=>{\n\n\n\n  if(recientes)\n  {\n\n  setvalorados(false)\n  setrecientes(false)\n}else\n  {\n    setvalorados(false)\n    setrecientes(true)\n\n  }\n\n}\n\n\n\nconst mejorvalorados=()=>{\n\n    \n      if(valorados){\n\n        setvalorados(false)\n        setrecientes(false)\n      }else\n        {\n          setvalorados(true)\n          setrecientes(false)\n      \n        }\n\n}\n\nuseEffect(() => {\n\n  console.log(\"aleta\")\n\n  // alert(history.location.pathname)\n \n}, [])\n\n  \n  return (\n    <Router>\n  \n    <ThemeProvider theme={theme}>\n   \n          \n\n\n                <div className={clases.root}>\n                  <Navegador  mejorvalorados={mejorvalorados} recientes={recientes} valorados={valorados} reciente ={reciente} ></Navegador>\n\n                <Switch>\n                <Route  path=\"/crearcuenta\" component={CrearCuenta}></Route>\n                <Route  path=\"/nuevopaper\"  render={(props)=>(< CrearPaper {...props}   />)} ></Route>\n                <Route  path=\"/editarpaper/:id\" component={CrearPaper}></Route>\n                <Route  path=\"/etiquetas\"  render={(props)=>(<Etiquetas {...props}  valorados={valorados} recientes={recientes} />)} ></Route>\n                <Route  path=\"/tag/:valor\"  render={(props)=>(<EtiquetasDos {...props}  valorados={valorados} recientes={recientes} />)}></Route>\n                <Route  path=\"/buscar/:papermatch\"  render={(props)=>(<Inicio {...props}  valorados={valorados}  recientes={recientes} />)} ></Route> \n                <Route  path=\"/adminetiquetas\"  render={(props)=>(<AdmEtiquetas {...props}   />)} ></Route>\n                <Route  path=\"/login\" render={(props)=>(<Login {...props}  />)} ></Route>\n                <Route  path=\"/nosotros\" component={Nosotros}></Route>\n                <Route exac path=\"/\"  render={(props)=>(<Inicio {...props}  valorados={valorados} recientes={recientes} />)} ></Route> \n\n              \n                </Switch>\n    \n\n                </div>\n        \n                \n      \n     </ThemeProvider>\n  \n       </Router>\n  )\n}\n\nexport default App\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/UsuarioContext.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provider/TemaConfig.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Login.jsx",["140","141","142","143","144","145","146","147","148","149","150","151"],"import React,{useState,useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Firebase from \"../firebase/firebase\"\nimport Google from '../../src/google.png'\nimport Swal from 'sweetalert2'\n\n\nfunction Copyright() {\n\n\n    \n\n\n\n\n\n\n\n\n\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" >\n        Cris Paper\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '92vh',\n\n  \"& body\":{\n    backgroundColor:\"#ffffff\"\n  },\n   \n\n    \" & .submit\": {\n      margin: theme.spacing(5, 0, 2),\n      background:\"#ffffff\",\n      color:\"#000000\"\n    },\n    \" & .MuiButton-containedPrimary:hover\" :{\n      backgroundColor: \"#303f9f00\",\n      color:\"#5fcccf\",\n      border:\"1px solid\"\n  },\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\"#ffffff\",\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(1, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  botonGoogle:{\n    background:\"#ffffff\",\n    color:\"#000000\"\n  },\n  imagenGoogle:{\n    margin:\"12px\"\n  }\n\n}));\n\nexport default function SignInSide(props) {\n\n\n\n\n  const [recuerdame, setrecuerdame] = useState({\n    recuerdame:false\n  })\n\n  const [user, setuser] = useState({\n    email:\"\",\n   password:\"\" \n\n  })\n  const [errores, seterrores] = useState({\n    email:null,\n    password:null\n\n  })\n\n  const classes = useStyles();\n\n\n\n  const handleChangeCheck=(e)=>{\n   \n\n        if(e.target.checked==false){\n\n          localStorage.clear()\n        }\n\n\n      setrecuerdame({\n        [e.target.name]:e.target.checked\n\n      })\n\n\n}\n\n\n\n\n  const handleChange=e=>{\n      e.preventDefault()\n        setuser({\n          ...user,[e.target.name]:e.target.value\n\n        })\n\n\n  }\n\n\n  const validar=()=>{\n\n      let err={}\n\n      if(user.email==\"\"){\n          err.email=\"debes ingresar un usuario\"\n      }else{ \n      \n            if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(user.email) ) {\n              err.email= \"Email no válido\"\n            }\n        }\n      if(user.password==\"\"){\n        err.password=\"debes ingresar una contraseña\"\n      }\n\n\n        return err\n\n  }\n\n  const iniciarCorreoGmail=()=>{\n       // alert(\"paso por el boton\")\n       Firebase.registrarCorreo()\n\n       \n   }\n\n\n\n  const iniciarSesion=async()=>{\n    let err=validar()\n    seterrores(err)\n\n    if(Object.keys(err).length){\n\n       \n\n    }else{\n\n      try{\n      await Firebase.login(user)\n       recordar()\n\n\n      }catch(error){\n\n        console.log(error.code)\n\n        if(error.code==\"auth/wrong-password\"){\n\n          Swal.fire({\n            title:\"Error\",\n            text:\"contraseña invalida\",\n            icon:\"error\",\n            confirmButtonColor:'#21cbce',\n        })\n  \n  \n        }\n  \n\n\n        if(error.code==\"auth/user-not-found\"){\n\n          Swal.fire({\n            title:\"La cuenta no existe\",\n            icon:\"error\"\n        })\n\n        }\n      }\n    \n    \n\n    }\n\n\n  }\n\n  const recordar =()=>{\n\n      if(recuerdame.recuerdame==true){\n\n           localStorage.user=user.email\n           localStorage.password=user.password\n           localStorage.recuerdame=recuerdame.recuerdame\n\n\n      }else{\n\n        localStorage.clear()\n      }\n\n  }\n\nconst recuperarContrasena=async()=>{\n\n   await Swal.fire({\n    title: 'Recuperar contraseña',\n    input: 'text',\n    confirmButtonColor: '#21cbce',\n    \n    inputPlaceholder: 'Ingrese su  correo',\n    preConfirm: async(login) => {\n      \n      try {\n\n        if(login==\"\"){\n       \n          Swal.showValidationMessage(\n            `Debe ingresar un correo`\n          )\n  \n       \n      }else{ \n        \n        if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(login) ) {\n          Swal.showValidationMessage(\n            `Correo invalido`\n          )\n  \n        }else{\n              console.log(\"hola mundo\")\n          await Firebase.auth.sendPasswordResetEmail(login).then((prueba)=>{\n                  console.log(prueba)\n                  return {\n                    resultado:\"correoenviado\"\n                  }\n\n          }).catch(error=>{ \n            console.log(error)\n          })\n        }\n\n\n\n        }\n        \n      } catch (error) {\n        console.log(error)\n      }\n     \n  \n  \n  \n  },\n    allowOutsideClick: () => !Swal.isLoading()\n  }).then((result) => {\n    \n\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: `correo enviado`,\n        icon:  `success`\n      })\n    }\n  \n  })\n   \n  \n\n\n}\n\n\n useEffect(() => {\n            let prueba={\n              email:\"\",\n              password:\"\"\n            }\n      \n         if(localStorage.user!=undefined){\n       \n                  prueba.email=localStorage.user\n           \n         }\n         if(localStorage.password!=undefined){\n          \n              prueba.password=localStorage.password\n         }\n\n          if(localStorage.recuerdame!=undefined){\n          setrecuerdame({recuerdame:localStorage.recuerdame})\n       }\n     \n       \n\n\n\n      \n        setuser(prueba)\n\n\n \n }, [])\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n         \n        <Avatar className={classes.avatar}>\n            <LockOutlinedIcon color=\"secondary\" />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Ingresar\n          </Typography>\n          <div className={classes.form} >\n\n\n            {errores.email?\n            \n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n           \n              label=\"Correo\"\n              name=\"email\"\n              onChange={handleChange}\n              autoComplete=\"email\"\n           \n              error\n              id=\"standard-error\" \n              helperText={errores.email}\n            />:\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={handleChange}\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Correo\"\n            name=\"email\"\n            autoComplete=\"email\"\n          \n            value={user.email}\n          />\n            }\n\n\n\n\n            {errores.password?\n\n<TextField\nvariant=\"outlined\"\nmargin=\"normal\"\nrequired\nfullWidth\nname=\"password\"\nlabel=\"Contraseña\"\ntype=\"password\"\nid=\"password\"\nautoComplete=\"current-password\"\nerror\nid=\"standard-error\" \nonChange={handleChange}\nhelperText={errores.password}\n/>\n            \n          :\n          <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Contraseña\"\n          type=\"password\"\n          onChange={handleChange}\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={user.password}\n        />\n\n\n\n          \n          }\n          \n            <FormControlLabel\n              control={<Checkbox  checked={recuerdame.recuerdame} name=\"recuerdame\" onChange={handleChangeCheck} value=\"remember\" color=\"primary\" />}\n              label=\"Recuerdame\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={()=>iniciarSesion()}\n            >\n              Iniciar Sesion\n            </Button>\n\n            <Button\n             \n             fullWidth\n             variant=\"contained\"\n             \n             className=\"submit\"\n             onClick={()=>iniciarCorreoGmail()}\n\n\n           >\n\n             <img className={classes.imagenGoogle} src ={Google} height=\"25\" />\n             Iniciar sesion con Google \n           </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link onClick={()=> recuperarContrasena()} variant=\"body2\">\n                  ¿Olvidaste tu contraseña?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link  href=\"/crearcuenta\"  variant=\"body2\">\n                  {\"¿Aun no estas registrado?\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </div>\n           \n        \n           \n        \n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearPaper.jsx",["152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React,{useState,useEffect} from 'react'\n\nimport { Grid, Typography, makeStyles, Button,TextField,IconButton,CircularProgress } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\n\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport Etiquetas from '../Componetes/Etiquetas'\nimport firebase from \"../firebase/firebase\"\nimport AutocompletarTres from '../Componetes/AutoCompletarTres'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\n\nimport swal  from 'sweetalert2'\nimport { purple } from '@material-ui/core/colors';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  \n\n\nconst useStyles=makeStyles((theme)=>({\n\n    root:{\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n       \"& .MuiButton-containedSecondary:hover\" :{\n            backgroundColor: \"rgb(95 204 207)\",\n            color: \"#ffffff\"          \n        }\n\n\n    },\n\n    margenArriba:{\n\n        marginTop:\"100px\"\n    },\n\n    divFoto:{\n\n        width:\"250px\",\n        height:\"250px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\"\n    },\n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    divPrincipal:{\n        margin:\"5px\"\n    },\n    margenButton:{\n\n        margin:\"20px 0px\",\n       \n\n\n\n\n\n\n    },margenButtonDos:{\n\n        margin:\"20px 0px\",\n        padding:\"0px\"\n       \n\n\n\n\n\n        \n    },\n    divPdf:{\n    border: \"1px solid rgba(0, 0, 0, 0.3)\",\n    height:\"-webkit-fill-available\",\n    margin: \"50px auto\"\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        \n        divCircular:{\n            marginTop:\"100px\"\n    \n        },\n        divImagen:{\n       \n            height:\"160px\",\n            width:\"260px\",\n            backgroundSize:\"260px auto\",\n            position:\"relative\",\n            backgroundRepeat:\"no-repeat\",\n            border: \"2px dashed #21cbce\",\n            backgroundPosition:\"50%\",\n            borderRadius:\"0\",\n            display:\"block\",\n            margin:\"auto\",\n            marginTop:\"15px\",\n            [theme.breakpoints.down(\"sm\")]:{\n                    marginTop:\"30px\"\n            }\n        }\n   \n        \n    \n}))\n\n\n\nconst CrearPaper = (props) => {\n\n    const usuario=useContext(UsuarioContext)\n    const clases=useStyles()\n    const [imagen,setimagen]=useState({file:null,imagen:null})\n    const [pdf,setpdf]=useState({file:null,pdf:null})\n    const [etiquetas,setetiquetas]=useState([])\n    const [tag,settag]=useState([]) \n    const [cargando, setcargando] = useState(false)\n    let [paper, setpaper] = useState({\n        imagen:null,\n        pdf:null,\n        subida: null,\n        likes:0,\n        etiquetas:[],\n        titulo:\"\",\n        resumen:\"\"\n\n    })\n\n    const [id, setid] = useState()\n\n    const [errores, seterrores] = useState({\n\n        titulo:null,\n        resumen:null,\n        pdf:null\n\n    } \n    )\n\n\n\n //seleccionar el archivo \n    const seleccionarArchivo=imagen=>{\n       \n            \n            const agregarimg=imagen.target.files[0]\n            console.log(agregarimg)  \n            if(agregarimg!=undefined){\n            setimagen({\n                imagen:agregarimg,\n                file:URL.createObjectURL(agregarimg)\n            })}\n\n\n    }    \n\n \n//seleccionar el pdf \n    const seleccionarPdf=pdf=>{\n\n          \n        \n\n        \n        const agregarpdf=pdf.target.files[0]\n             if(agregarpdf!=undefined){                \n                    setpdf({\n                        pdf:agregarpdf,\n                        file:URL.createObjectURL(agregarpdf)\n                    })\n                }\n\n}\n\n                    //remover etiqueta \n\n const removerEtiqueta=(e)=>{\n\n            \n            //setetiquetas(etiquetas.filter(item=>item.descripcion!==e.descripcion))\n\n }\n\n//manejar snapshot \n\nfunction manejarSnapshot(snapshot){\n    const  lista =snapshot.docs.map(doc=>{\n        return{\n            id:doc.id,\n            ...doc.data()\n        }\n    })\n    setetiquetas(lista)    \n}\n\n//llamar etiquetas\nconst llamarEtiquetas=()=>{\n    firebase.db.collection(\"etiquetas\").onSnapshot(manejarSnapshot)\n    \n  }\n\n\n// validaciones \n\n// primera validacion de vacio \n\n\nconst validacionuno=()=>{\n  \n    let prueba={}\n\n    //validar errores \n\n    if(paper.titulo==\"\"){\n            prueba.titulo=\"el titulo es requerido\"\n    }\n\n\n    if(paper.resumen==\"\"){\n            prueba.resumen=\"el resumen es requerido\"\n    }\n\n\n    if(pdf.file==null){\n        prueba.pdf=\" debe subir un archivo .pdf\"\n}\n\n   \n  return prueba\n\n\n}\n\n\n//nuevo paper \n\nconst NuevoPaper=async()=>{\n\n    \n\n    setcargando(true)\n\n      let  errores  = validacionuno()\n      seterrores(errores)\n\n\n   \n    if(Object.keys(errores).length){\n     \n    }else{\n\n\n\n        const respuesta=await IngresarPaper()\n\n        if(respuesta){\n\n\n            props.history.push(\"/\")\n\n            swal.fire({\n                icon: 'success',\n                title: \"Guardado!\",\n                \n              \n              })\n            \n\n\n        }else{\n            swal.fire({\n                icon: 'Error',\n                title: \"Ha ocurrido un problema!\",\n                text: \"intentalo mas tarde \",\n                timer: 1500\n              })\n            \n\n        }\n\n    }\n   \n\n\n  \n\n\n    // agregar paper \n\n\n\n\n\n    /*\n\n\n      paper.subida=new Date()\n    const id = await firebase.db.collection(\"paper\").add(paper).then((docRef) => {\n        //console.log(\"Document written with ID: \", docRef.id);\n\n        return docRef.id\n    })\n\n   \n\n \n    \n\n\n    const pdf =await subirPDF(id)\n     const img =await subirImagen(id)\n  \n \n     \n     firebase.db.collection(\"paper\").doc(id).update({\n            imagen:img,\n            pdf:pdf\n\n     })\n  \n \n    paper=({...paper,\n            pdf:pdf,\n            imagen:img,\n            etiquetas:tag\n    })\n        // ver los valores de paper \n      \n// retornar al inicio \n\n\n  \n    */\n  \n   setcargando(false)\n  \n\n\n}\n\n\n// ingresar paper  despues de las validacion \nconst IngresarPaper=async()=>{\n\n \n\n\n    \ntry {\n\n\n    //fecha\n    paper.subida=new Date()\n    //titulo para la busqueda \n    paper.busqueda=paper.titulo.toLocaleLowerCase()\n\n\n\n    //crear paper y retornar el id \n    const id = await firebase.db.collection(\"paper\").add(paper).then((docRef) => {\n        //console.log(\"Document written with ID: \", docRef.id);\n\n        return docRef.id\n    })\n    const pdf =await subirPDF(id)\n    const img =await subirImagen(id)\n    \n\n\n\n                console.log(tag)   \n\n                const tagdos=tag.map(valor=>{\n\n                       return {id:valor.id,descripcion:valor.descripcion} \n\n                })\n\n\n                firebase.db.collection(\"paper\").doc(id).update({\n                        imagen:img,\n                        pdf:pdf,\n                        etiquetas:tagdos,\n                        id:id\n                })\n            \n                \n            \n                paper=({...paper,\n                        pdf:pdf,\n                        imagen:img,\n                        etiquetas:tagdos,\n                        id:id\n                })\n\n\n                let agregarEtiquet=[]\n                \n                tag.map(valor=>{\n\n                            firebase.db.collection(\"etiquetas\").doc(valor.id).set({\n                                ...valor,\n                                contar:valor.contar+1\n                            })   \n                             firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(paper.id).set(paper)           \n\n                    })\n\n\n                console.log(agregarEtiquet)\n\n                \n            \n\n      \nreturn true \n    \n} catch (error) {\n    console.log(error)\n    return false \n}\n\n    \n\n\n  \n    \n\n}\n\n\n\nconst AddRemovePaperTag=async(tagdos,paperdos,tag)=>{\n\n    console.log(tagdos)\n    console.log(paperdos)\n    console.log(tag)\n\n     \n    firebase.db.collection(\"etiquetas\").doc(tagdos.id).collection(\"paper\").doc(paperdos.id).set({...paperdos,\n                   etiquetas:tag\n                 })  \n    \n\n    // await firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", tagdos).get().then(valor=>\n    //     {\n    //     const prueba =valor.docs.map(objeto=>{return{id:objeto.id,...objeto.data()}})    \n    //         prueba.map(val1=>{\n    //             firebase.db.collection(\"etiquetas\").doc(val1.id).collection(\"paper\").doc(id).set({...paperdos,\n    //             etiquetas:tag\n    //             })  \n                        \n    //         })\n    //     }\n        \n    //     )\n    }\n\n        \n\n\n\n  // actualizar paper\n\n\n  const ActualizarPaper=async()=>{\n\n    setcargando(true)\n    const imgURL=await subirImagen(id)\n    const pdfURL=await subirPDF(id)\n    //console.log(paper.etiquetas)\n    // etiquetas antiguos \n    let etiquetasOld=paper.etiquetas\n    let newTag=[]\n        tag.map(async(tagOld)=>{\n            etiquetasOld.map(async (tagNew)=>{\n                if(tagNew!=tagOld){\n                             \n                            newTag.push({...tagNew,contar:tagNew.contar+1})\n\n                }else{\n\n                            newTag.push(tagOld)\n                }\n\n\n        })})\n\n\n\n\n    console.log(newTag)\n\n\n let paperSuplente={\n    ...paper,\n    imagen:imgURL,\n    pdf:pdfURL,\n    etiquetas:tag,\n    busqueda:paper.titulo.toLocaleLowerCase()\n}\n\n     await firebase.db.collection(\"paper\").doc(id).update(paperSuplente).then(valor=>{\n       \n    })\n\n\n\n       //borrar papers anteriores  de las etiquetas\n     \n       etiquetasOld.map(async(tagOld)=>{\n              tag.map(async (tagNew)=>{\n                         if (tagNew.id!=tagOld){\n \n                                                     \n                                                    // se edita dentro de la etiqueta el nuevo paper      \n                                                 await firebase.db.collection(\"etiquetas\").doc(tagNew.id).collection(\"paper\").doc(paper.id).set({...paper,\n                                                     etiquetas:tag\n                                                   }).then(()=>{\n                                                 \n                                                         \n \n                                                     firebase.db.collection(\"etiquetas\").doc(tagNew.id).set({\n                                                                 ...tagOld,\n                                                                 contar:tagOld.contar+1\n                                                         })\n \n \n                                                     }).catch((error)=>{\n                                                     console.log(error)\n                                                 })\n \n \n                                                     //se borra si esta en tagOld\n                                                     //se borra el paper dentro de la etiqueta\n                                                 await firebase.db.collection(\"etiquetas\").doc(tagOld.id).collection(\"paper\").doc(paper.id).delete().then(()=>{\n                                                     //se reduce en una la etiqueta\n                                                     firebase.db.collection(\"etiquetas\").doc(tagOld.id).set({\n                                                                 ...tagOld,\n                                                                 contar:tagOld.contar-1\n                                                         })\n \n \n                                                     }).catch((error)=>{\n                                                     console.log(error)\n                                                 })\n \n \n                         }\n \n \n \n                 })\n \n \n                         \n                     \n \n                             // si no coincide con valor borrar la etiqueta \n \n                             \n \n \n                             // await firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", tagOld).get().then(valor=>\n                             //     {\n                             //         const prueba =valor.docs.map(objeto=>{return{id:objeto.id,...objeto.data()}})    \n                             //         prueba.map(val1=>{\n                         \n                             //             firebase.db.collection(\"etiquetas\").doc(val1.id).collection(\"paper\").doc(id).delete().then(()=>\n                             \n                             //             console.log(\"se borro el registro \")\n                             //             ).catch((error)=>{\n                             //                 console.log(error)\n                             //             })\n                                         \n                             //         })\n                             //     }\n                                 \n                             //     )\n                         \n                         }\n                     )\n \n // tengo que agregrar  las etiquetas y borrar las \n//¿que pasa si se repite ??\n\n    tag.map(async(tagEv)=>{\n        try {\n\n            AddRemovePaperTag(tagEv,paperSuplente,tag)\n            \n                            // crear y  remover paper de las etiquetas \n           } catch (error) {\n                console.log(error)\n                }\n\n\n    })\n\n\n\n\n\n    /* agregar fecha\n     const img =await subirImagen(id)\n*/\nsetcargando(false)\nprops.history.push(\"/\")\nswal.fire(\n    'Confirmado',\n    'Registro actualizado',\n    'success'\n  )\n\n}\n\n\n\n// actualizar paper\n\nconst ActualizarPaperDos=async()=>{\n    setcargando(true)\n    const imgURL=await subirImagen(id)\n    const pdfURL=await subirPDF(id)\n \n    let etiquetasOld=[]\n    \n    paper.etiquetas.map(valor=>{      \n        etiquetas.map(valordos=>{\n        \n\n                        if(valordos.id==valor.id){\n                          etiquetasOld.push(valordos)\n                        }\n        })\n    })\n\n    console.log(etiquetasOld)\n  \n    let newTag=[]\n    let deleteTag=[]\n// las nuevas etiquetas \n\nif(tag.length>=etiquetasOld.length){ \n\n\n    const results = tag.filter(({ id: id1 }) => !etiquetasOld.some(({ id: id2 }) => id2 === id1));\n\n    newTag=results\n\n}\n \nif(tag.length<=etiquetasOld.length){\n    const results = etiquetasOld.filter(({ id: id1 }) => !tag.some(({ id: id2 }) => id2 === id1));\n    deleteTag=results\n    \n    // etiquetasOld.map(viejo=>{\n   \n    //                         console.log(viejo)\n    //                         if(tag.length!=0){\n    //                         tag.map(nuevo=>{\n    //                             console.log(nuevo)\n    //                             if(nuevo.id!=viejo.id){\n    //                                 console.log(viejo)\n    //                                 deleteTag.push({...viejo,contar:viejo.contar-1})   \n\n    //                             }\n    //                         })}else{\n    //                             console.log(\"paso por ac??\")\n    //                             deleteTag.push({...viejo,contar:viejo.contar-1})   \n\n    //                         }\n    //             })\n\n}\nlet tagDefinitivo=tag.map(valor=>{\n\n            return{\n                id:valor.id, \n                descripcion:valor.descripcion,\n            }    \n})\n\nlet paperSuplente={\n    ...paper,\n    imagen:imgURL,\n    pdf:pdfURL,\n    etiquetas:tagDefinitivo,\n    busqueda:paper.titulo.toLocaleLowerCase()\n}\n\n\ndeleteTag.map(valor=>{\n\n    firebase.db.collection(\"etiquetas\").doc(valor.id).update({...valor,contar:valor.contar-1})\n    firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(paperSuplente.id).delete().then(()=>{console.log(\"borrado\")}).catch(error=>console.log(error))\n\n})\n\nnewTag.map(valor=>{   \n    firebase.db.collection(\"etiquetas\").doc(valor.id).update({...valor,contar:valor.contar+1})\n    firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(paperSuplente.id).set(paperSuplente).then(()=>{console.log(\"agregado\")}).catch(error=>console.log(error))\n\n})\n  //  actualizar el paper \n\n    firebase.db.collection(\"paper\").doc(paperSuplente.id).update(paperSuplente)\n\n\n    props.history.push(\"/\")\n    swal.fire(\n        'Confirmado',\n        'Registro actualizado',\n        'success'\n      )\n\n\n\nsetcargando(false)\n\n\n \n                 }\n \n \n                         \n                     \n \n                             // si no coincide con valor borrar la etiqueta \n \n                             \n \n \n                             // await firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", tagOld).get().then(valor=>\n                             //     {\n                             //         const prueba =valor.docs.map(objeto=>{return{id:objeto.id,...objeto.data()}})    \n                             //         prueba.map(val1=>{\n                         \n                             //             firebase.db.collection(\"etiquetas\").doc(val1.id).collection(\"paper\").doc(id).delete().then(()=>\n                             \n                             //             console.log(\"se borro el registro \")\n                             //             ).catch((error)=>{\n                             //                 console.log(error)\n                             //             })\n                                         \n                             //         })\n                             //     }\n                                 \n                             //     )\n                      \n // tengo que agregrar  las etiquetas y borrar las \n//¿que pasa si se repite ??\n\n    // tag.map(async(tagEv)=>{\n    //     try {\n\n    //         AddRemovePaperTag(tagEv,paperSuplente,tag)\n            \n    //                         // crear y  remover paper de las etiquetas \n    //        } catch (error) {\n    //             console.log(error)\n    //             }\n\n\n    // })\n\n\n\n\n\n    /* agregar fecha\n     const img =await subirImagen(id)\n*/\n\n\n\n\n\n\n\n  // subir imagen \n\n  const subirImagen =async(id)=>{\n        // prueba de usuario \n\n\n\n    \n\n        // subir  imagen\n            if(imagen.imagen!==null){\n\n\n                    if(imagen.imagen instanceof File){\n                        const imgRef=await firebase.storage.ref().child(\"IMAGEN\").child(id)\n                        await imgRef.put(imagen.imagen)\n                        const imgURL=await imgRef.getDownloadURL() \n                        return imgURL\n                    }else{\n                        return imagen.file \n                    }\n            }else{\n                setpaper({...paper,imagen:\"\"})\n             return null\n            }\n\n  }\n  const subirPDF =async(id)=>{\n  \n\n\n    // subir  imagen\n        if(pdf.pdf!==null){\n\n                   if(pdf.pdf instanceof File){ \n                        const pdfRef =  firebase.storage.ref().child(\"PDF\").child(id)\n                        console.log()\n                        await pdfRef.put(pdf.pdf)\n                        const pdfURL=await pdfRef.getDownloadURL()\n                        return pdfURL\n                   }else{\n                        return pdf.file\n                   }\n        }else{\n            alert(\"debe agregar un paper\")\n   \n        }\n\n}\n\n\n\nconst actualizarState=(e)=>\n{\n    e.preventDefault()\n    setpaper({\n        ...paper,[e.target.name]:e.target.value\n    })\n\n}\n\n\n\n\n\nuseEffect(() => {\n\n    const {id}=props.match.params\n    console.log(usuario)\n \n    if(usuario==null){\n        props.history.push(\"/\")\n\n    }else{\n        \n        if(!usuario.administrador){\n            props.history.push(\"/\")\n        }\n    }\n\n\n\n    // validar si editar o borrar\n    editorcreate(id)\n\n    // armar etiquetas\n\n    \n    \n   llamarEtiquetas()\n\n\n\n\n}, [errores,usuario])\n\nconst editorcreate= async (id)=>{\n\n    if(id){\n        setcargando(true)\n        setid(id)\n      const test=  await firebase.db.collection(\"paper\").doc(id).get().then((doc)=>{\n          console.log(doc)\n            if(doc.exists){\n                console.log(\"Document data:\", doc.data());\n                return doc.data()\n            }else{\n                console.log(\"No such document!\");\n            }\n\n      }) \n      // \n\n\n      setimagen({\n            file:test.imagen\n\n      })  \n\n      setpdf({\n        file:test.pdf\n\n  })  \n\n\n  \n  settag(test.etiquetas)\n    \n    //   test.etiquetas.map((valor)=>{\n       \n    //      settag(prev=>[...prev,valor.descripcion])\n\n    //   }) \n      await  setpaper(test)\n      setcargando(false)\n    \n    }\n\n}\n\n    return (\n \n        <div className={clases.root}  >\n    \n          \n            \n            <div>\n                \n\n                \n             \n            </div>\n\n\n            <Grid container>\n                <Grid xs={4}  sm={2} md={4}>\n\n                </Grid>\n\n                <Grid xs={12} sm={8} md={4}>\n\n\n                        {cargando?\n                        <div>\n                        \n                        \n                        \n                        \n                        <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                              </div> :\n                        <div className={clases.divPrincipal}>\n\n                                        {id?\n\n                                        <Typography className={clases.margenArriba} align=\"center\" variant=\"h3\">\n                                            Editar Paper\n                                    </Typography>:\n\n                                        <Typography className={clases.margenArriba} align=\"center\" variant=\"h3\">\n                                        Nuevo Paper\n                                        </Typography>\n                                    \n                                    }\n\n\n                    <Typography  align=\"center\" variant=\"h3\">\n                            <div className={clases.divImagen}>\n\n\n\n                              \n                                {imagen.file?\n                                \n                                    <img src={imagen.file} style={{height:\"100%\",width:\"100%\"}}/>\n                            \n                                    \n                                    // <div   className={clases.divImagen} style={{\n                                    //     backgroundImage:`url(${imagen.file})`,\n                                       \n                                    //   }} >\n\n                                              \n                                    //     </div>\n\n\n                                    :\n                                    < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n                                    }\n                                \n\n\n                           \n                              \n                            </div>\n                            <Typography align=\"center\" >\n\n                            <div>\n                                    <input\n                                    type=\"file\"\n                                    id=\"subir\"\n                                    accept=\"image/*\"\n                                    style={{display:\"none\"}}\n                                    onChange={(e)=>seleccionarArchivo(e)}\n                                \n                                    >\n                                    </input>\n                                <Button variant=\"contained\"\n                                        color=\"primary\"\n                                        className={clases.margenButtonDos}\n                                  \n                                >\n                                <label\n                                    htmlFor=\"subir\"\n                                    style={{padding:\"6px 36px\"}}\n                                    >\n                                        agregar imagen\n                                    </label>\n                                    </Button>     \n                            </div>\n\n                        </Typography>\n                    </Typography>\n                    <Typography align=\"center\" >\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"titulo\"\n                                    label=\"Titulo\"\n                                    name=\"titulo\"\n                                    autoComplete=\"titulo\"\n                                    onChange={actualizarState}\n                                    \n                                    value={paper.titulo}   \n\n\n\n                                   \n                                    />\n\n\n\n\n                       {errores.titulo?\n\n                        <Alert\n                        \n                        action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                               seterrores({\n                                   ...errores,titulo:null\n                               })\n                              }}\n                            >\n                           <CloseIcon></CloseIcon>\n\n                            </IconButton>\n                            }\n                        \n                        severity=\"error\">{errores.titulo}</Alert>\n\n                            :\n\n                        <div></div>\n\n                       }                 \n                      \n\n\n\n                    </Typography>\n                    <Typography align=\"center\" >\n                    <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"resumen\"\n                                    label=\"Resumen\"\n                                    name=\"resumen\"\n                                    multiline\n                                     rowsMax={4}\n                                    autoComplete=\"resumenrafce\"\n                                    onChange={actualizarState}\n                                 \n                                    value={paper.resumen}\n                                 \n                                    />\n\n\n\n\n\n                    </Typography>\n                   \n                    <Typography align=\"center\" >\n\n\n                        {errores.resumen?\n\n                        <Alert\n                        action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                               seterrores({\n                                   ...errores,resumen:null\n                               })\n                              }}\n                            >\n                           <CloseIcon></CloseIcon>\n\n                            </IconButton>\n                          }\n                        \n                        severity=\"error\">{errores.resumen}</Alert>\n\n                            :\n\n                        <div></div>\n\n                        }               \n\n\n                    </Typography>\n                   \n\n\n                        \n\n\n\n                   \n\n             <Typography align=\"center\" >\n\n                <AutocompletarTres etiquetas={etiquetas} tag={tag} settag={settag}  removerEtiqueta={removerEtiqueta} llamarEtiquetasDos={llamarEtiquetas}\n\n\n\n                ></AutocompletarTres>\n\n                </Typography>\n\n\n\n\n                {id?\n                     <Typography align=\"center\" >\n                     <Button\n                     color=\"secondary\"\n                     variant=\"contained\"\n                     style={{}}\n                     endIcon={<AddIcon></AddIcon>}\n                     onClick={()=>ActualizarPaperDos()}\n                     >\n     \n                            Actualizar Paper\n                     </Button>\n                 \n                 </Typography>\n                :\n\n\n                <Typography align=\"center\" >\n                <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                className={clases.margenButton}\n                endIcon={<AddIcon></AddIcon>}\n                onClick={()=>NuevoPaper()}\n                >\n\n                        Agregar Paper\n                </Button>\n            \n            </Typography>\n            \n            }\n                                    \n                    <Typography align=\"center\" >\n\n                            <div>\n                                    <input\n                                    type=\"file\"\n                                    id=\"pdf\"\n                                    accept=\".pdf\" \n                                    style={{display:\"none\"}}\n                                    onChange={(e)=>seleccionarPdf(e)}\n                                    >\n                                    </input>\n                                <Button variant=\"contained\"\n                                        color=\"primary\"\n                                      \n                                        className={clases.margenButtonDos}\n                             \n                                >\n                                <label\n                                  style={{padding:\"6px 36px\"}}\n                                  htmlFor=\"pdf\"\n                                    >\n                                        agregar PDF\n                                  \n                                    </label>\n                         </Button>     \n                            </div>\n\n\n                            {errores.pdf?\n\n                        <Alert\n                        \n                        \n                        action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                               seterrores({\n                                   ...errores,pdf:null\n                               })\n                              }}\n                            >\n                           <CloseIcon></CloseIcon>\n\n                            </IconButton>\n                        }\n                        \n                        severity=\"error\">{errores.pdf}</Alert>\n\n                            :\n\n                        <div></div>\n\n                            }                 \n\n\n\n\n                    </Typography>\n           \n                    <Typography align=\"center\" >\n                        {\n                        \n                        pdf.file?\n                        \n                        <div style={{ height: '750px' }}>\n                        <div\n                                style={{\n                                    border: '1px solid rgba(0, 0, 0, 0.3)',\n                                    height: '100%',\n                                    margin:\"50px auto\"\n                                }}\n                            >\n                       \n                                   <iframe style={{height:\"100%\",width:\"100%\",}} src={pdf.file}></iframe> \n                            </div>                   \n\n                        </div>\n                    \n                    \n                        :<div></div>}\n                          \n                    </Typography>\n                   </div>\n                   }\n                </Grid>\n                <Grid xs={4} sm={2}  md={4}>\n\n            \n                    \n                </Grid>\n\n            </Grid>\n            \n   \n            \n                       \n     </div>\n    )\n}\n\nexport default CrearPaper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetas.jsx",["171","172","173","174","175","176","177","178","179","180","181"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdmEtiquetas.jsx",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { useEffect,useState ,useContext} from 'react'\nimport { Grid, Typography,IconButton, makeStyles,CircularProgress, TextField, Button, Paper } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Firebase from \"../firebase/firebase\"\nimport Swal  from \"sweetalert2\"\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport {actualizarVariosPaper,ActualizarVariosEtiquetas} from '../Funciones/PaperDoc'\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nconst useStyles=makeStyles((theme)=>({\n\n\n    root:{\n        marginTop:\"100px\",\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n    },\n\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        \n        },\n        divCircular:{\n            margin:\"100px  auto auto auto\"\n    \n        },\n        divAgregar:{\n\n            width:\"100%\",\n            margin:\"0px auto 100px auto\"\n        },\n        formAgregar:{\n\n            display:\"block\",\n            margin:\"auto\",\n            width:\"360px\",\n            [theme.breakpoints.down(\"xs\")]:\n            {\n              \n            }\n        },\n\n\n    \n        buttonAgregar:{\n            margin:\"0px 30px\",\n            padding:\"14px\",\n            [theme.breakpoints.down(\"xs\")]:\n            {\n                width:\"100%\",\n                margin:\"10px auto\",\n                padding:\"14px\"\n            }\n\n        },\n        textoAgregar:{\n            [theme.breakpoints.down(\"xs\")]:\n            {\n                width:\"100%\",\n                margin:\"10px auto\",\n                padding:\"unset\"\n            }\n        },\n        paperEstilo:{\n            width: \"100%\",\n    margin: \"30px 0px\",\n    padding: \"14px\",\n    color: \"#21cbce\",\n    border: \"1px solid #21cbce\",\n        }\n    ,botonEditar:{\n        color:\"\"\n    }\n    ,textNoDisponible:{\n\n\n        fontFamily:\"Nunito\",\n        color:\"#808080\"\n\n\n\n\n}\n\n    \n    })) \n\n\n\nconst AdmEtiquetas = (props) => {\nconst clases=useStyles()\n\nconst [etiquetas, setetiquetas] = useState([])\nconst [errores, seterrores] = useState({\n    descripcion:null\n})\nconst [cargando, setcargando] = useState(false)\nconst [tag, settag] = useState({\n    descripcion:\"\"\n})\n\nconst usuario=useContext(UsuarioContext)\n\n\n\n\n\n\n\n\n\n\nuseEffect(() => {\n\n\n\n         // validar usuario administrador\n         \n            //  colocar  el cargando en vscode \n\n            setcargando(true)\n\n            //conocer el estado  del usuario \n            console.log(usuario)\n            if(usuario==null){\n                props.history.push(\"/\")\n\n            }else{\n                \n                if(!usuario.administrador){\n                    props.history.push(\"/\")\n                }\n            }\n     \n\n    agregarEtiquetas()\n   \n   \n}, [usuario])\n    \n\nconst handleChange=(e)=>{\n\n    e.preventDefault()\n\n    settag({...tag,[e.target.name]:e.target.value})\n}\n\nconst guardarEtiqueta=async()=>{\n\n    setcargando(true)\n    if(tag.descripcion){\n\n            let coincide=false\n\n            etiquetas.map(doc=>{\n\n                if(doc.descripcion==tag.descripcion){\n                    coincide=true\n                }\n            })\n\n        // buscar si esa etiqueta ya existe\n            if(coincide){\n\n                Swal.fire({\n                    icon:\"info\",\n                    title:\"Ese registro ya esta disponible\"\n                  })\n            }else{\n                Firebase.db.collection(\"etiquetas\").add({...tag,contar:0\n                    }).then(()=>{\n                    Swal.fire({\n                        icon:\"success\",\n                        title:\"Guardado Correctamente\"\n                    })\n      \n    }\n       ).catch(()=>{\n           Swal.fire({\n        icon:\"error\",\n        title:\"Ha ocurrido un error intentalo mas tarde\"\n    })\n  \n}\n    \n    )\n\n \n}\n    }else{\n       \n        seterrores({...errores,descripcion:\"debes ingresar un valor\"})\n        setcargando(false)  \n    }\n\n    setcargando(false)\n    settag({\n        descripcion:\"\"\n    })\n}\n\nconst agregarEtiquetas=async()=>{\n\n    await Firebase.db.collection(\"etiquetas\").onSnapshot(manejarSnapshot)\n}\n\nfunction manejarSnapshot(snapshot){\n    const  lista =snapshot.docs.map(doc=>{\n        setcargando(false)\n        return{\n            id:doc.id,\n            ...doc.data()\n        }\n       \n    })\n    setetiquetas(lista)    \n}\n\n\nconst borrarEtiquetas=async(valor)=>{\n\n        Swal.fire({\n               title:\"¿esta seguro que desea borrar el registro?\",\n               text:`${valor.descripcion}`,\n               showCancelButton:\"true\",\n               cancelButtonText:\"Cancelar\",\n               confirmButtonText:\"Borrar\",\n               confirmButtonColor: '#21cbce',\n               cancelButtonColor: '#d33',\n               \n\n\n        }).then(async(result)=>{\n            if(result.isConfirmed){\n                setcargando(true)\n\n\n                //buscar todos los registros con esa etiqueta\n\n\n                //buscarPapers(valor)\n\n\n                \n                 let nuevalista=await  Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").get()\n                  \n                 let nuevalistados=nuevalista.docs.map((doc)=>{\n                            return {\n                                id:doc.id,...doc.data()\n                            }\n\n                 })\n            \n                 console.log(nuevalistados)\n                 //remover la etiqueta a los paper\n                 nuevalistados.map(async (doc)=>{\n                        // nueva variable donde guardare la nueva coleccion  etiqueta\n\n                        let tag=[]\n                        //mapeando etiqueta de cada paper\n                         doc.etiquetas.map(docdos=>\n                            {   \n                                // buscar la etiqueta que es igual a la borrada\n                                console.log(docdos)\n                                // guardar la coleccion de etiquetas diferentes \n                                if(docdos.id!=valor.id){\n                                    tag.push(docdos)\n                                }\n\n\n                            }\n                            )\n                            console.log(tag)\n\n                            //armar el nuevo objeto \n\n                            let nuevoObjeto={...doc,etiquetas:tag}\n                            console.log(nuevoObjeto)\n                            //editar los papers \n                            await  Firebase.db.collection(\"paper\").doc(nuevoObjeto.id).update(nuevoObjeto).then(()=>{console.log(\"editado\")})\n                            // Borrar todos los paper en las etiquetas\n                            \n                            await Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(nuevoObjeto.id).delete().then((test1)=>{console.log(\"borrado\")}).catch((error)=>{console.log(error)})\n\n\n                await  Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").get().then((test)=>{\n                   \n                \n\n    })\n\n\n\n               await Firebase.db.collection(\"etiquetas\").doc(valor.id).delete().then((respuesta)=>{\n\n\n\n\n                        Swal.fire({\n                            title:\"Borrado Correctamente\",\n                            icon:\"success\"\n                        })\n\n                        setcargando(false)\n                 \n                }).catch((error) =>{console.log(error)})\n            \n    \n\n                        })\n\n            }})\n        }\n\n\nconst removerEtiqueta=(antiguo,chips)=>{\n\n\n\n         \n    let nuevoPaper=[]\n\n    antiguo.map(async(valor)=>{\n\n          \n        let nuevochips=[]\n            \n            var tag=valor.etiquetas\n\n            tag.map((t)=>{\n                   \n                if(t!=chips.descripcion){\n                  \n                            nuevochips.push(t)\n\n                }\n\n\n            })\n\n                \n                valor.etiquetas=nuevochips\n            \n                \n                // editar paper \n                await Firebase.db.collection(\"paper\").doc(valor.id).update(valor).then(()=>{\n\n                    nuevoPaper.push(valor)\n\n                }).catch((error) =>{\n                    console.log(error)\n                })\n\n                 \n\n\n\n                console.log(valor)\n            \n            \n\n\n\n\n    })\n\n\n    console.log(nuevoPaper)\n}\n\n\nconst  editarTodolosPapers=async(papersantiguo,tagEtiq,descripcionNew)=>{\n\n\n  \n    papersantiguo.map(async(paper)=>{\n        let nuevosTags=[]\n\n        paper.etiquetas.map((tag)=>{\n\n                        if(tag==tagEtiq.descripcion){\n                                nuevosTags.push(descripcionNew)\n                        }else{\n                        nuevosTags.push(tag)\n                        }\n\n\n\n\n        })\n\n\n\n        paper.etiquetas=nuevosTags\n        \n\n        await Firebase.db.collection(\"etiquetas\").doc(tagEtiq.id).collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n\n            console.log(\"ok\")\n\n         }).catch((error) =>{\n             console.log(error)\n         })\n         await Firebase.db.collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n\n                   console.log(\"ok\")\n\n                }).catch((error) =>{\n                    console.log(error)\n                })\n\n\n\n    })\n\n\n\n\n\n}\n\n\n const buscarPaperEdit =async(valor)=>{\n\n    console.log(valor.id)\n    var consulta = await Firebase.db.collection(\"paper\").where(\"etiquetas\", \"==\", {id:valor.id}).get()\n    var consult=consulta.docs.map(doc=>{\n \n        return {\n\n            id:doc.id,\n            ...doc.data()\n        }\n\n   \n    })\n\n    console.log(consult)\n\n    return consult\n\n }\n\n// retornar  los paper  de las etiquetas \nconst  modificarPaperdelastag=async(valor)=>{\n\n   let lista =  await Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").get()\n    //console.log(lista)\n    let nuevaLista=lista.docs.map(doc=>{\n      //  console.log(doc.data().etiquetas)\n            \n      let nuevasTag=doc.data().etiquetas.map(docTag=>{\n\n            if(docTag.id==valor.id){\n                console.log(\"coincide\")\n                return {\n                    id:valor.id,\n                    descripcion:valor.descripcion\n                }\n\n            }else{      \n                console.log(\"no coincide\")\n                return {\n                    id:docTag.id,\n                    descripcion:docTag.descripcion\n                }\n\n\n            }\n\n\n      })\n\n      console.log(nuevasTag)\n        return {\n            id:doc.id,\n            ...doc.data(),\n            etiquetas:nuevasTag\n        }\n    })\n\n\n    return nuevaLista\n\n\n\n}\n\n\nconst editaPaper=(listaPaper,valor)=>{\n\nconsole.log(listaPaper)\n\n const nuevaLista =listaPaper.map(doc=>\n    {\n\n         let  nuevasEtiquetas=doc.etiquetas.map(docTag=>\n            {\n                    if(docTag.id==valor.id){\n                        console.log(\"coincide\")\n                    }\n            })\n\n    }\n )\n\n\n\n}\n\n\n\n\nconst editarEtiquetas=(valor)=>{\n\n    Swal.fire({\n\n        title:\"Editar Etiqueta\",\n        input:\"text\",\n        showCancelButton:\"true\",\n        cancelButtonText:\"Cancelar\",\n        confirmButtonText:\"Editar\",\n        confirmButtonColor: '#21cbce',\n        cancelButtonColor: '#d33',\n        inputValue:`${valor.descripcion}`,\n        allowOutsideClick:()=>!Swal.isLoading()\n\n    }).then(async(result)=>{\n        setcargando(true)\n        if(result.isConfirmed){\n\n\n\n            // buscar paper que tenga esa etiqueta \n\n                    // mostrar el valor \n\n                  \n                \n                    \n                     let nuevoValor={...valor,descripcion:result.value}\n\n\n                const listaPaper=await modificarPaperdelastag(nuevoValor)\n                \n                // registrar  en la base de datos \n\n                    // actualizar en los papers \n                    actualizarVariosPaper(listaPaper)\n                    // Actualizar los paper con las etiquetas \n                    ActualizarVariosEtiquetas(listaPaper,nuevoValor)\n                    //\n\n\n\n\n\n                // modificar  todos los paper             \n                // modificar todas las etiquetas con ese paper\n                // retorna la lista que de los papers que contienes esa etiqueta\n                //  var prueba =await buscarPaperEdit(valor)\n                //editar todos los paper de la coleccion unica y de la subcolleccion de la etiquetas\n               //  editarTodolosPapers(prueba,valor,result.value)\n\n                // actualiza la etiqueta \n                //valor id es el id de la etiqueta\n            await Firebase.db.collection(\"etiquetas\").doc(valor.id).update({\n                descripcion:result.value\n            }).then(()=>{\n                Swal.fire({\n                    title:\"Editado Correctamente\",\n                    icon:\"success\"\n                })\n                setcargando(false)\n            \n            }).catch((error)=>{\n                    Swal.fire({\n                     title:\"Ha ocurrido un problema\",\n                    icon:\"error\"\n                            \n                                })})\n                            \n                                setcargando(false)\n                            \n                            }else{setcargando(false)}}) \n\n\n        }\n    return (\n        <div className={clases.root}>\n\n            <Grid container>\n                <Grid xs={12} sm={1} md={1} >\n                       \n                </Grid> \n   \n                <Grid container xs={12} sm={10} md={10} >\n                        \n                        <div className={clases.divAgregar}> \n                            <div className={clases.formAgregar}>\n                                <TextField variant=\"outlined\"\n                                className={clases.textoAgregar}\n                                placeholder=\"agregar etiqueta\"\n                                name=\"descripcion\"\n                                onChange={handleChange}\n                                value={tag.descripcion}\n                               \n\n                                ></TextField>\n\n                      \n                           <Button onClick={()=>guardarEtiqueta()} className={clases.buttonAgregar} variant=\"contained\" color=\"primary\">\n                            Guardar\n                            </Button>  \n                            </div>\n\n\n                       {errores.descripcion?\n\n<Alert    style={{ margin:\"20px auto auto\",width:\"50%\"}}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,descripcion:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.descripcion}</Alert>\n\n    :\n\n<div></div>\n\n}                 \n\n                    </div>   \n                    \n                    {cargando==false?\n                    \n                    \n                    etiquetas.length!=0?\n                    \n                    etiquetas.map((valor)=>(\n\n\n\n                  \n                    <Paper   elevation ={0} className={clases.paperEstilo}>\n                     <Grid container>\n                  <Grid xs={8}>\n                      <div>\n                          <Typography align=\"center\" variant=\"h4\">\n                                        {valor.descripcion}  \n                          </Typography>\n                      </div>\n                  </Grid>\n                  <Grid container xs={4}>\n                        <Grid xs={6}>\n                             <IconButton  >\n                                <CreateIcon color=\"primary\" onClick={()=>{editarEtiquetas(valor)}}></CreateIcon>\n                            </IconButton>   \n                          \n                        </Grid>\n                        <Grid xs={6}>\n                             <IconButton   >\n                                <DeleteIcon color=\"error\" onClick={()=>{borrarEtiquetas(valor)}}></DeleteIcon>\n                            </IconButton>\n                             \n                        </Grid>    \n                  </Grid>\n                  </Grid>\n                  </Paper>\n                        )):\n                        \n\n                        <div style={{width:\"inherit\"}}>\n                        <Typography className={clases.\n                            textNoDisponible\n                             }  align=\"center\" variant=\"h4\">\n                                      No ahi registros\n                            </Typography>          \n                            </div>\n                        \n                        :\n                            \n                        <div className={clases.divCircular} >\n                                <CircularProgress className={clases.circular}></CircularProgress>\n                         </div>\n                                \n                        }\n                </Grid> \n                <Grid xs={12} sm={1} md={1} >\n                       \n                </Grid> \n   \n\n            </Grid>\n            \n        </div>\n    )\n}\n\nexport default AdmEtiquetas\n\n\n\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearCuenta.jsx",["204","205","206","207","208"],"import React,{useState} from 'react'\nimport { makeStyles,IconButton, Grid, TextField, Button, Typography,CircularProgress} from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Firebase from \"../firebase/firebase\"\nimport Swal from \"sweetalert2\"\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles=makeStyles((theme)=>({\n\n\n    root:{\n\n        marginTop:\"60px\",\n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n    }            \n,\n    textField:{\n        margin:\"15px 0px\",\n        width:\"95%\"\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },\n    \n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n\n    boton:{\n\n    /* margin: 5px; */\n    margin: \"25px 25px 80px auto\",\n    display: \"block\",\n    width:\"300px\",\n    [theme.breakpoints.down(\"xs\")]:{\n        margin: \"25px auto 80px auto\",\n        width:\"290px\"\n    }\n\n        },\n\n    alerta:{\n            margin:\"0px 0px\",\n            width:\"90%\"\n\n    },\n    titulo:{\n\n        marginBottom:\"60px\"\n    }\n    \n\n\n\n\n}))\n\n\n\n\nconst CrearCuenta = (props) => {\n    const clases=useStyles()\n\n    const [cuenta, setcuenta] = useState({\n        nombre:\"\",\n        correo:\"\",\n        password:\"\",\n        confirmar:\"\"\n    })\n\n  const [errores, seterrores] = useState({\n        nombre:null,\n        correo:null,\n        password:null,\n        confirmar:null\n\n\n  })\n\n\n\n  const [cargando,setcargando]=useState(false)\n\n    const actualizarState=(e)=>{\n        e.preventDefault()\n\n        setcuenta({...cuenta,\n        [e.target.name]:e.target.value\n        })\n\n\n    }\n\n\n    const validar=()=>{\n       \n            let err={}\n\n\n        if(cuenta.nombre==\"\"){\n\n\n            err.nombre=\"debes ingresar tu nombre\"\n\n\n        }\n        if(cuenta.correo==\"\"){\n\n            \n            err.correo=\"debes ingresar tu correo\"\n\n        }else{\n             if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(cuenta.correo) ) {\n                err.correo= \"Email no válido\"\n            }\n\n        }\n        if(cuenta.password==\"\"){\n\n           err.password=\"debes ingresar tu contraseña\"\n        }\n        if(cuenta.confirmar==\"\"){\n\n           \n            err.confirmar=\"debes  confirmar tu contraseña\"\n\n        }else{\n                if(cuenta.confirmar!=cuenta.password){\n\n                        err.confirmar=\"tu contraseña no coincide\"\n                      \n                }\n\n        }\n\n            return err\n\n    }\n\n\n    const guardar=()=>{\n        setcargando(true)    \n        let err= validar()\n        seterrores(err)\n        if(Object.keys(err).length){\n          \n              setcargando(false)\n        }else{\n            Firebase.registrar(cuenta).then(()=>{\n                props.history.push(\"/login\")\n                Swal.fire({\n                       title:\"Cuenta creada correctamente\",\n                       icon:\"success\"\n                })\n\n            })\n            setcargando(false)\n    }}\n\n\n    return (\n        <div className={clases.root}>\n\n\n            <Typography className={clases.titulo} align=\"center\" variant=\"h3\">\n\n                Crear Cuenta \n            </Typography>\n            \n\n              {\n                   cargando? \n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                            </div>\n                   \n                   \n                    :\n              \n\n            <Grid container>\n               <Grid xs={12} md={3}   ></Grid> \n               <Grid xs={12} md={6}  >\n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su nombre\"\n                      variant=\"outlined\"\n                      label=\"Nombre\"\n                      name=\"nombre\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.nombre?\n\n<Alert    className={clases.alerta}\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,nombre:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.nombre}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su correo\"\n                      variant=\"outlined\"\n                      label=\"Correo\"\n                      name=\"correo\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.correo?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,correo:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.correo}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su contraseña\"\n                      label=\"Contraseña\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      name=\"password\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n{errores.password?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,password:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.password}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Confirme su contraseña\"\n                      label=\"Confirme contraseña\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      name=\"confirmar\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.confirmar?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,confirmar:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.confirmar}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={clases.boton}     \n                        onClick={()=>guardar()}\n\n                    >\n\n                        Guardar\n                    </Button>\n\n\n               </Grid>\n               <Grid xs={12} md={3}></Grid>\n\n            </Grid>\n            }\n        </div>\n    )\n}\n\nexport default CrearCuenta\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/inicio.jsx",["209"],"import React,{useState}  from 'react'\nimport Caja from \"../Componetes/Caja\"\nimport BotonFlotante from \"../Componetes/BotonFlotante\"\nimport { useEffect } from 'react'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react'\n\n\nconst Inicio = (props) => {\n\n    // const [state, setstate] = useState(props.recientes)\n    const usuario = useContext(UsuarioContext)\n    const [papermatch, setpapermatch] = useState(null)\nuseEffect(() => {\n    try {\n        if(props.match.params!==undefined){\n            const {paper}=props.match.params\n            setpapermatch(paper)    \n        }\n      \n        \n    } catch (error) {\n        alert(error)\n    }\n \n\n}, [props])\n\n    return (\n       \n        <div>  \n            <Caja valorados={props.valorados} recientes={props.recientes} paperid={props.match.params} >\n                \n            </Caja>\n        \n        {usuario?\n           <div>\n               {usuario.administrador? <div>\n                <BotonFlotante>\n               \n               </BotonFlotante>\n               </div>:\n               <div></div>\n               }\n           \n            </div>:\n            <></>\n        }\n       \n        </div>\n\n    )\n}\n\nexport default Inicio\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/appbar.jsx",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React, { useState,useContext ,useEffect} from 'react';\nimport { makeStyles,fade } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport{Hidden,Icon, Grid, Link} from '@material-ui/core'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport {animateScroll as scroll} from 'react-scroll'\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu'\nimport AddIcon from '@material-ui/icons/Add';\nimport { UsuarioContext } from '../../Provedores/UsuarioContext';\nimport Firebase from \"../../firebase/firebase\"\nimport {TextField,InputAdornment} from '@material-ui/core'\nimport BookIcon from '@material-ui/icons/Book';\nimport {useHistory} from 'react-router-dom'\nimport { useRef } from 'react';\nimport Icono from \"../../icono.jpeg\"\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n\n\n    \"& .MuiLink-underlineHover:hover\": {\n      textDecoration: \"none\"\n  },\n\n  \" & .MuiButton-containedPrimary:hover\" :{\n    backgroundColor: \"#303f9f00\",\n    color:\"#5fcccf\",\n    border:\"1px solid\"\n},\n   \"& .MuiInput-underline\":{\n     borderBottom:\"none !important\"\n   },\n   \"& #prueba .MuiSvgIcon-root\":{\n      color:\"#000000\"\n  },\n  \"& .cajaMenu\":{\n    padding:\"59px 0px 0px\",\n    height:\"200px\",\n    background:\"#21cbce\"\n  },\n  \"& .cajaMenuDos\":{\n    padding:\"59px 0px 0px\",\n    height:\"0px\",\n    background:\"#21cbce\"\n  }\n\n\n\n  \n   \n  \n\n  },\n  grow: {\n    flexGrow: 1,\n  },\n      \n \n\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  \n  search: {\n    position: 'relative',\n    background:\"#ffffff\",\n    borderRadius: theme.shape.borderRadius,\n    [theme.breakpoints.down(\"md\")]:{\n   \n    padding:\"10px 0px 10px 0px\",\n    border:\"1px solid #ccc\",\n   \n   \n    }\n   \n  \n    },\n\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  \n  inputRoot: {\n    color: 'primary',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n\n\n  linkclass:{\n        cursor:\"pointer\",\n        padding:\"5px 25px 5px 25px\",\n        \n        [theme.breakpoints.down(\"sm\")]:{\n          padding:\"unset\"\n        }\n\n\n  },\n\n  linkclassdos:{\n    cursor:\"pointer\",\n    padding:\"5px 25px 5px 25px\",\n    background:\"#21cbce29\",\n    borderRadius:\"25px\"\n\n\n},\nestiloIcono:{\n  height:\"45px\",\n  padding:\"5px 0px 0px\"\n\n},\n  divlista:{\n\n    position: \"absolute\",\n    left:\"0\",\n    right:\"0\",\n    zIndex:\"1\",\n    margin:\"auto\",\n    borderWidth:\"1px 1px 1px 1px\",\n    borderStyle: \"solid\",\n    borderColor:\"#e0e0e0\",\n    backgroundColor:\"white\",\n    /* right: 6px; */\n   top:\"50px\",\n    width:\"500px\",\n   \n    //left: 24px;\n\n\n\n    [theme.breakpoints.down(\"md\")]:{\n      width: \"93vw\",\n      top: \"71px\",\n\n    },\n\n\n\n\n    \n  },\n  resumen:{\n\n    fontFamily:\"nunito\",\n    margin:\"15px auto\",\n    color:\"#000000DE\",\n     lineHeight:\"2\"\n  },\n  icono:{\n    display: \"block\" ,\n    margin: \"15px auto\"\n  },\n  botonOpciones:{\n      padding:\"18px 8px\",\n      justifyContent:\"left\",\n      width:\"100%\"\n\n  },\n  cajaMenu:{\n    padding:\"2px 5px 0px 5px\",\n    height:\"350px\",\n    transition:\"height 0.25s ease-in\",\n    overflow:\"hidden\",\n  },\n  cajaMenuTres:{\n    padding:\"2px 5px 0px 5px\",\n    height:\"350px\",\n    transition:\"height 0.25s ease-in\",\n    \n  },\n   cajaMenuDos:{\n    padding:\"2px 0px 0px\",\n    height:\"0px\",\n    \n    overflow:\"hidden\",\n    transition:\"height 0.25s  ease-out\"\n  },\n  cajaListMenu:{\n\n    border: \"0.01px solid\",\n    borderColor:\"#e5e5e5\",\n    margin: \"11px 11px 11px\",\n    background:\"#ffffff\"\n    \n    \n  },\n  input:{\n\n    [theme.breakpoints.down(\"md\")]:{\n      width:\"85%\"\n\n    }\n    \n  },\n  linkList:{\n\n    padding:\"5px 0px\",\n    textDecoration:\"none\",\n    color:\"rgb(0 0 0 / 30%)\",\n    cursor:\"pointer\"\n\n  },\n  linkLi:{\n\n    padding:\"9px 0px\",\n    cursor:\"pointer\"\n   \n\n\n\n\n\n  \n\n  },\nlinkLiDos:{\n  width:\"50%\",\n  margin:\"3px auto\",\n  borderRadius:\"21px\",\n  color:\"white\",\n  background:\"#21cbce\"\n\n}\n  ,\n   esconder:{\n      display:\"none\"\n\n   },\n   \n   mostrar:{\n      display:\"unset\"\n\n   },\n   noRegistro:{\n\n    width:\"50%\",\n    padding:\"10px\",\n    color:\"#808080\"\n   }\n\n\n\n      \n \n}))\n\nexport default function ButtonAppBar(props) {\n\n    \n  const history=useHistory()\n    const [url, seturl] = useState(history.location.pathname)\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [menu,setmenu]=useState(false)\n    const [appBar, setappBar] = useState(false)\n    const [listapaper,setlistapaper]=useState([])\n    const [noFound,setNoFound]=useState(false)\n    const[buscador,setbuscador]=useState({\n      buscado:\"\"\n    })\n\n\n    const [titulo,settitulo]=useState()\n\n    const open = Boolean(anchorEl);\n    const usuario=useContext(UsuarioContext)\nconst wrapperRef =useRef(null)\n\n\n\n    const abrirCerrarMenu=()=>{\n\n          setmenu(!menu)      \n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n      \n      };\n    \n\n\n    // handle menu \n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n        \n      };\n\n\n    const buscarPaper=(papermatch)=>{\n     \n        history.push(`/buscar/${papermatch.id}`)\n        setlistapaper([])\n    }\n\n      // cerrar sesion \n\n\n     const cerrarSesion=()=>{\n\n          Firebase.cerrarSesion()\n\n     }\n\n\n     const formatTitle=(titulo)=>{\n          var string = titulo;\n          var length = 50;\n          var trimmedString = string.substring(0,length);\n\n\n          if(trimmedString.length<20){\n            var trimmedStringdos=trimmedString\n\n          }else{\n            var trimmedStringdos=trimmedString+\"...\"\n          }  \n          console.log(trimmedStringdos)\n          return trimmedStringdos\n\n     }\n\n\n     const formatTitleDos=(titulo)=>{\n      var string = titulo;\n      var length = 30;\n      var trimmedString = string.substring(0,length);\n         \n      if(trimmedString.length<12){\n        var trimmedStringdos=trimmedString\n\n      }else{\n        var trimmedStringdos=trimmedString+\"...\"\n      }  \n   \n   \n   \n      console.log(trimmedStringdos)\n      return trimmedStringdos\n\n }\n\n\n     const buscar=async (e)=>{\n       setlistapaper([])\n\n\n       setbuscador({[e.target.name]:e.target.value})\n     \n       //validar cuando el tipeo esta vacio \n       if(e.target.value!==\"\"){\n        const inicio=e.target.value.toLocaleLowerCase()\n       const prueba=await Firebase.db.collection(\"paper\").\n       orderBy(\"busqueda\")\n       .startAt(inicio).endAt(inicio+'\\uf8ff')\n       .limit(5)\n      .onSnapshot(manejarSnapshot)\n       \n      }else{\n        setlistapaper([])\n        setNoFound(false)\n      } \n     }\n\n\n\n\n     function manejarSnapshot(snapshot){\n      const  lista =snapshot.docs.map(doc=>{\n          return{\n              id:doc.id,\n              ...doc.data()\n          }\n      })\n\n      if(lista.length==0){\n          setNoFound(true)\n      }else{\n          setNoFound(false)\n\n      }\n      //lista paper\n      setlistapaper(lista)   \n      return lista \n  }\n\n\n\n\n const classes = useStyles();\n\n  // state Scroll\n\n//hacer un useEffect \n\nuseEffect(() => {\n  \n\nconsole.log(history.location.pathname)\n \n\nif(history.location.pathname==\"/login\" ){\n  if(usuario!==null)\n  \n          {\n            console.log(\"redirecciono \")\n            setappBar(false)\n            history.push(\"/\")\n\n        \n        }else{\n          setappBar(true)\n\n        }\n  \n}else{\n\n  if(history.location.pathname==\"/adminetiquetas\"||history.location.pathname==\"/nosotros\") {\n  \n    setappBar(true)\n  }else{\n  setappBar(false)\n}\n}\n\ndocument.addEventListener(\"mousedown\",handleClickOutside)\nreturn ()=>{\n  document.removeEventListener(\"mousedown\",handleClickOutside)\n}\n\n}, [usuario,url,history.location.pathname] )\n  \n\n  \n\nconst handleClickOutside=event =>{\n\n  const {current:wrap}=wrapperRef\n  if(wrap && !wrap.contains(event.target)){\n    setlistapaper([])\n    setNoFound(false)\n  }\n}\n  \n\n\n  return (\n    <div className={classes.root} >\n      <AppBar position=\"static\" color=\"secondary\" elevation={0} >\n        <Toolbar>\n\n        \n\n            <Typography align=\"center\">\n                      <Link href=\"/\" className={classes.linkclass}>\n\n                              <img className={classes.estiloIcono} src={Icono} alt=\"\" />\n\n                        </Link>\n\n              </Typography>\n      <Hidden lgUp>\n              <Typography variant=\"h6\" style={{flexGrow:\"1\"}}>\n                 \n              </Typography>\n\n              <Typography align=\"center\">\n                    \n                      <IconButton  onClick={()=>abrirCerrarMenu()} edge=\"start\"  variant=\"contained\" color=\"primary\" aria-label=\"menu\"  >\n                         \n                          <MenuIcon style={{fontSize:\"35px\"}}   />   \n                    \n                       </IconButton>\n\n                    \n              </Typography>\n\n    </Hidden>\n\n       <Hidden mdDown>    \n          <div ref={wrapperRef} className={classes.search}>\n            <div> \n      <IconButton  color=\"primary\" aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n            <InputBase\n        className={classes.input}\n        onChange={e=>buscar(e) }\n        onBlur={()=>{\n          setbuscador({\n            buscado:\"\"\n          })\n        }}\n        \n        value={buscador.buscado}\n        name=\"buscado\"\n        autocomplete=\"off\"\n       \n        placeholder=\"Buscar...\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      \n                \n            </div>\n          \n          {listapaper.length>0?\n            <div className={classes.divlista}>\n      \n            {listapaper.map((valor)=>(\n            \n\n\n                <div style={{height:\"54px\",\n                overflow:\"hidden\"\n                }}  >\n\n\n\n                          <Button\n                            className={classes.botonOpciones}\n                            startIcon={<BookIcon></BookIcon>}\n                          color=\"primary\"\n                          onClick={()=>buscarPaper(valor)}\n                          >\n\n                                \n                                \n                                {\n                                  formatTitle(valor.titulo)\n                                }   \n\n                          </Button>\n\n                  \n\n {/* <Link onCli > \n<Grid\ncontainer\n>\n\n\n  <Grid xs={1}>\n        <div>\n          <BookIcon className={classes.icono}  />\n        </div>\n  </Grid>\n  <Grid xs={11}>\n\n        <Typography align=\"left\" className={classes.resumen}  variant=\"body1\" >\n           {valor.titulo}    \n        </Typography>\n  </Grid>\n\n</Grid>\n</Link> */}\n</div>\n\n\n\n\n         \n\n          ))}\n\n   \n            </div>\n          :\n          noFound&&      \n          <div className={classes.divlista}>\n                <div style={{height:\"54px\",\n                overflow:\"hidden\"\n                }}>  \n                 <Typography className={classes.noRegistro} align=\"left\" variant=\"h6\"> \n                  no hay  resultados\n                  </Typography> \n\n                  </div>\n            </div>\n\n         }\n          </div>\n\n\n        \n       \n      \n         \n\n          {/* <Hidden mdDown> */}\n          \n\n         \n          \n\n        \n          <Link href=\"/etiquetas\" className={ classes.linkclass}>\n          <div className=\"divHover\">\n            <Typography >\n              Etiquetas\n\n            </Typography>\n            <div className=\"subrayado\"></div>\n          </div>\n          </Link>\n\n\n          {!appBar?\n          \n        <>\n          <Link onClick={()=>props.mejorvalorados()}  className={\n            props.valorados?\n            classes.linkclassdos:classes.linkclass}>\n          <div className=\"divHover\">\n            <Typography >\n              \n              Mejor valorados   \n\n            </Typography> \n            <div className=\"subrayado\"></div>\n          </div>\n          </Link>\n          <Link onClick={()=>props.reciente()}  className={props.recientes?\n            classes.linkclassdos:classes.linkclass}>\n          <div className=\"divHover\">\n            <Typography >\n              \n              Recientes\n\n            </Typography>\n            <div className=\"subrayado\"></div>\n          </div>\n          </Link>\n          </>\n        \n        \n        :\n        <div></div>\n        }\n          \n\n          <div>\n             \n\n\n          {usuario==null?\n          \n          \n          <Link  href=\"/nosotros\" className={classes.linkclass}>\n          <div className=\"divHover\">\n              <Typography align=\"center\" >\n                \n                Nosotros\n                  {/* <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      endIcon={<AddIcon></AddIcon>}\n                      variant=\"contained\"\n                      color=\"primary\"\n                  >\n                      mas\n                  </Button> */}\n  \n              </Typography>\n              <div className=\"subrayado\"></div>\n            </div>\n            </Link>\n  \n           \n          \n          \n          \n          :\n          usuario.administrador?\n\n\n         <Link onClick={handleMenu} className={classes.linkclass}>\n\n          <div className=\"divHover\">\n              <Typography align=\"center\" >\n                \n           \n                  <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      endIcon={<AddIcon></AddIcon>}\n                      variant=\"contained\"\n                      color=\"primary\"\n                  >\n                      mas\n                  </Button>\n  \n              </Typography>\n              <div className=\"subrayado\"></div>\n            </div>\n            </Link>\n  \n           \n          \n          \n          \n\n:  <Link  href=\"/nosotros\" className={classes.linkclass}>\n<div className=\"divHover\">\n    <Typography align=\"center\" >\n      \n      Nosotros\n        {/* <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            endIcon={<AddIcon></AddIcon>}\n            variant=\"contained\"\n            color=\"primary\"\n        >\n            mas\n        </Button> */}\n\n    </Typography>\n    <div className=\"subrayado\"></div>\n  </div>\n  </Link>\n\n \n\n\n\n        }\n\n\n          {/* <Link onClick={handleMenu} className={classes.linkclass}> */}\n          {/* <Link  className={classes.linkclass}>\n        <div className=\"divHover\">\n            <Typography align=\"center\" >\n              \n              Nosotros\n                {/* <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    endIcon={<AddIcon></AddIcon>}\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    mas\n                </Button> */}\n{/* \n            </Typography>\n            <div className=\"subrayado\"></div>\n          </div>\n          </Link> */} \n\n         \n            </div>\n            <div className={classes.grow} />\n\n            {usuario?    \n            <Button variant=\"outlined\" color=\"primary\"  onClick={()=>cerrarSesion()}>\n                     Cerrar sesion\n            </Button>\n\n                :\n\n                <Button variant=\"outlined\" color=\"primary\" href=\"/login\">\n                Iniciar Sesion\n               </Button>}\n\n\n             \n          \n              </Hidden> \n        </Toolbar>\n          \n        <Menu\n                id=\"menu-appbar\"\n                keepMounted     \n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose()\n                abrirCerrarMenu()\n                history.push(\"/nosotros\")\n                }}>Nosotros</MenuItem>\n                <MenuItem onClick={()=>{history.push(\"/adminetiquetas\")\n                setmenu(false)\n                handleClose()\n              }}>Administrar Etiquetas</MenuItem>\n                {/* <MenuItem onClick={handleClose}>Partner</MenuItem> */}\n              </Menu>\n      </AppBar>\n\n\n\n\n\n\n\n\n\n\n\n\n          <Hidden lgUp>      \n        <div className={menu?\n         listapaper.length>0? \n          classes.cajaMenuTres:\n          classes.cajaMenu\n          :classes.cajaMenuDos}>\n         \n\n                <div ref={wrapperRef} className={classes.search}>\n            <div className={classes.cajaListMenu}> \n      <IconButton  color=\"primary\" aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n            <InputBase\n        className={classes.input}\n        onChange={e=>buscar(e) }\n        onBlur={()=>{\n          setbuscador({\n            buscado:\"\"\n          })\n        }}\n        \n        value={buscador.buscado}\n        name=\"buscado\"\n        autocomplete=\"off\"\n       \n        placeholder=\"Buscar...\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      \n                \n            </div>\n          \n          {listapaper.length>0?\n            <div className={classes.divlista}>\n      \n            {listapaper.map((valor)=>(\n            \n\n\n                      <div style={{height:\"54px\",\n                      overflow:\"hidden\"\n                      }}  >\n\n\n\n          <Button\n            className={classes.botonOpciones}\n            startIcon={<BookIcon></BookIcon>}\n          color=\"primary\"\n          onClick={()=>buscarPaper(valor)}\n          >\n\n                {formatTitleDos(valor.titulo)\n                }   \n          </Button>\n\n          \n\n {/* <Link onCli > \n<Grid\ncontainer\n>\n\n\n  <Grid xs={1}>\n        <div>\n          <BookIcon className={classes.icono}  />\n        </div>\n  </Grid>\n  <Grid xs={11}>\n\n        <Typography align=\"left\" className={classes.resumen}  variant=\"body1\" >\n           {valor.titulo}    \n        </Typography>\n  </Grid>\n\n</Grid>\n</Link> */}\n</div>\n\n\n          ))}\n\n   \n            </div>\n          :<div></div>}\n\n          {/* <div className={menu?classes.mostrar:classes.esconder}> */}\n\n              <Link href=\"/etiquetas\" className={classes.linkList}>\n              <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                        Etiquetas\n              </Typography>\n              </Link>\n\n              {appBar?<div></div>:\n              <>\n              <Link  onClick={()=>props.reciente()}   className={classes.linkList} >\n              <Typography className={props.recientes?classes.linkLiDos:classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                        Recientes\n              </Typography>\n              </Link>\n              <Link onClick={()=>props.mejorvalorados()} className={classes.linkList} >\n              <Typography className={props.valorados?classes.linkLiDos:classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                        Mejor valorados\n              </Typography>\n              </Link>\n              </>\n                }\n\n\n               {usuario==null?\n\n                      <Link onClick={()=>{\n                    {             handleClose()\n                          abrirCerrarMenu()\n                          history.push(\"/nosotros\")}\n                      }} className={classes.linkList} >\n                      <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                                Nosotros\n                      </Typography>\n                      </Link>\n                        :\n\n                        usuario.administrador?\n                        <Link onClick={handleMenu} className={classes.linkclass}>\n\n                        <div className=\"divHover\">\n                            <Typography align=\"center\" >\n                              \n                         \n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.button}\n                                    endIcon={<AddIcon></AddIcon>}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    mas\n                                </Button>\n                \n                            </Typography>\n                            <div className=\"subrayado\"></div>\n                          </div>\n                          </Link>\n\n                        :\n\n                        <Link className={classes.linkList} >\n                        <Typography className={classes.linkLi} align=\"center\" variant=\"subtitle1\">\n                                  Nosotros\n                        </Typography>\n                        </Link>\n                        \n\n               } \n           \n              <Typography className={classes.linkLi} align=\"center\" variant=\"h6\">\n\n\n                {usuario? \n                <Button color=\"primary\" variant=\"outlined\" onClick={()=>cerrarSesion()} >\n                Cerrar sesion\n              </Button>\n                :\n                <Button color=\"primary\" variant=\"outlined\" href=\"/login\" >\n                Iniciar Sesion\n              </Button>\n               \n                }\n                    \n              </Typography>\n              </div>\n          {/* </div> */}\n\n\n        \n          </div>\n                \n        \n      \n\n        </Hidden>\n\n\n    </div>\n  );\n}\n\n\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/useAutenticado.jsx",["235"],"import {useState,useEffect} from 'react'\nimport firebase from \"../firebase/firebase\"\nconst useAutenticado = props => {   \n\n\n            const [usuarioAutenticado, setusuarioAutenticado] = useState(null)\n\n\n\n    const administrador = async(user)=> \n    \n    {\n    var result=false\n     await firebase.db.collection(\"administradores\")\n      .where(\"adminitrador\", \"==\", user.email).get().then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots     \n           result=true\n        });\n      \n    })\n    .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n    });\n          \n       return result\n      \n  \n    }\n\n\n\n    useEffect(async() => {\n\n        console.log(\"paso por use autenticado\")\n        const unsuscribe= firebase.auth.onAuthStateChanged(user=>{\n\n            if(user){\n\n          \n             \n                  administrador(user).then(function(result) {\n                            console.log(result) // \"Some User token\"\n                            setusuarioAutenticado({...user,administrador:result})\n                         })\n\n\n                  \n\n              \n\n\n\n\n\n\n\n\n\n                \n            }else{\n\n                setusuarioAutenticado(null);\n              \n            }\n\n             return ()=>unsuscribe();   \n\n\n        })\n      \n    },[] )\n\n\n\n    return usuarioAutenticado\n}\n\nexport default useAutenticado\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/firebase.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Etiquetas.jsx",["236","237","238","239","240"],"import React ,{useState,useEffect}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function Chips(props) {\n  const classes = useStyles();\n  const lista=props.etiquetas\n  const [valor, setvalor] = useState(props.etiquetas)\n\n\n  const removerE=props.removerEtiqueta()\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  const handleClick = () => {\n    console.info('You clicked the Chip.');\n  };\n\nuseEffect(() => {\n  setvalor(props.etiquetas)\n}, [props])\n\n  return (\n    <div className={classes.root}>\n    {valor ?\n\nvalor.map((e) => (\n\n                        <Chip\n                      \n                        key={e.id}\n                        label={e.descripcion}\n                        onClick={handleClick}\n                        onDelete={()=>removerE(e)}\n                        color=\"primary\"\n                       \n                        />\n  \n        ))\n:<div></div>}\n   \n    \n     \n    </div>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AutoCompletarTres.jsx",["241","242","243","244","245","246","247","248","249","250","251"],"/* eslint-disable no-use-before-define */\nimport React,{useState} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect } from 'react';\nimport { Grid ,IconButton} from '@material-ui/core';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport LabelIcon from '@material-ui/icons/Label';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Swal from \"sweetalert2\" \nimport Firebase from \"../firebase/firebase\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin:\"10px 0px\"\n  },\n}));\n\n\n\n\n\nconst crearEtiqueta=async(valor)=>{\n\n  const id=await Firebase.db.collection(\"etiquetas\").add({descripcion:valor,contar:0}).then((docRef) => {\n    //console.log(\"Document written with ID: \", docRef.id);\n\n    return docRef.id\n})\nreturn id\n}\n\nexport default function Tags(props) {\n  const classes = useStyles();\n  const etiquetas=props.etiquetas\n  const settag=props.settag\n  const tag=props.tag\n  const removerEtiqueta=props.removerEtiqueta\n //const [prueba1,setprueba1] =useState([\"hola\",\"chao\"])\n const [prueba2,setprueba2] =useState(props.tag)\n const [prueba1,setprueba1] =useState([])\n const [tagdos, settagdos] = useState(props.tag)\n\n\n \n   const recorrertag=()=>{\n    \n\n    \n      let resultado=etiquetas.filter(({id:id1})=>tag.some(({id:id2})=>id2===id1))\n      \n\n    console.log(resultado)\n    settagdos(resultado)\n   }\n\n\n   useEffect(() => {\n    recorrertag()\n   }, [props])\n\n  return (\n    <div className={classes.root}>\n     <Grid container>\n        <Grid xs={10}>\n\n        \n      <Autocomplete\n        multiple\n     \n        id=\"tags-filled\"\n        options={etiquetas}\n        value={tagdos}\n        \n        onChange={(event, newValue) => { \n                settag(newValue)\n        }}\n        getOptionLabel={option=>option.descripcion}\n        renderTags={(value, getTagProps) =>{\n          return value.map((option, index) => {\n               return <Chip variant=\"outlined\" label={option.descripcion } {...getTagProps({ index })} />\n          })\n        }}\n        renderInput={(params) => {\n         return  <TextField {...params}   variant=\"outlined\" label=\"Etiquetas\" placeholder=\"Etiquetas\" />\n        }}\n      />\n      </Grid>\n      <Grid xs={2}>\n\n      <IconButton color=\"primary\"  onClick={()=>{\n          Swal.fire({\n     \n            title: 'Ingrese nueva etiqueta',\n            input:\"text\",\n            showCancelButton:true,\n            confirmButtonColor: '#21cbce',\n            cancelButtonColor: '#d33',\n            confirmButtonText:\"Ingresar\",\n           preConfirm:(valor)=>{\n              var coincide=false \n              etiquetas.map((etiquet)=>{\n\n                if(etiquet.descripcion==valor){\n                  coincide=true\n                  \n                }\n              })\n\n             if(coincide){\n              Swal.fire({\n                icon:\"info\",\n                title:\"Ese registro ya esta disponible\"\n              })\n             }else{\n              const id = crearEtiqueta(valor)\n              Swal.fire({\n                title:\"Nuevo Registro Creado\"    \n\n              })\n\n             }\n\n}             \n\n          })\n      }}>\n          {/* <PostAddIcon /> */}\n          {/* <LabelIcon></LabelIcon> */}\n          <AddCircleOutlineIcon></AddCircleOutlineIcon>\n        </IconButton>\n      </Grid>\n\n</Grid>\n    </div>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Caja.jsx",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"import React,{useEffect,useState} from 'react'\nimport {Grid,makeStyles, Typography, Button,IconButton,CircularProgress, setRef} from \"@material-ui/core\"\nimport Paper from '@material-ui/core/Paper';\nimport firebase from '../firebase/firebase'\nimport moment from 'moment' \nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {Chip} from '@material-ui/core'\nimport \"moment/locale/es\"\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Corazon from '@material-ui/icons/FavoriteBorder';\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {UsuarioContext} from \"../Provedores/UsuarioContext\"\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from '@material-ui/lab/Alert';\n\n const  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"100px auto \",\n\n\n\n            \"& .botoneditar\":{\n                background:\"#1ab37c\",\n                color:\"#ffffff\",\n             \n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n\n            \" & .MuiButton-containedPrimary:hover\" :{\n                backgroundColor: \"#303f9f00\",\n                color:\"#5fcccf\",\n                border:\"1px solid\"\n            },\n\n            \"& .botoneditar\":{\n                background:\"#1ab37c\",\n                color:\"#ffffff\",\n                marginTop:\"10px\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    }\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\n\ncontenedor:{\n        margin:\"18px auto\"\n\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n\n        position:\"absolute\",\n        top:\"0\",\n        right:\"0\",\n        width:\"90px\"\n},\ndivFoto:{\n\n        width:\"250px\",\n        height:\"160px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\",\n        [theme.breakpoints.down(\"sm\")]:{\n                margin:\"30px auto\"\n        }\n    },\n\n    divImagen:{\n       \n         height:\"160px\",\n         width:\"260px\",\n         backgroundSize:\"260px auto\",\n         backgroundRepeat:\"no-repeat\",\n         backgroundPosition:\"50%\",\n         borderRadius:\"0\",\n         display:\"block\",\n         margin:\"auto\",\n         marginTop:\"15px\",\n         [theme.breakpoints.down(\"sm\")]:{\n                 marginTop:\"30px\"\n         }\n\n     \n      \n      },\n    \n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },botonLikes:{\n        color:\"#ff0000\",\n        margin:\"25px 0\"\n\n\n    },\n    margenChip:{\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        divTexto:{\n                [theme.breakpoints.down(\"md\")]:{\n\n                        margin:\"0vw 5vw 0\"\n                },\n\n\n\n                [theme.breakpoints.down(\"sm\")]:{\n\n                        margin:\"5vw 5vw 0\"\n                }\n        },\n        textNoDisponible:{\n\n\n                fontFamily:\"Nunito\",\n                color:\"#808080\"\n    \n    \n    \n    \n        }\n    \n\n\n\n\n }))\n\n\n\n\nconst Caja = (props) => {\n    \n    const history = useHistory();\n    const clases =estilos()\n    const usuario =useContext(UsuarioContext)\n    const [listapaper,setlistapaper]=useState([])\n    const [cargando, setcargando] = useState(false)\n    const [cargandodos, setcargandodos] = useState(false)\n    const [paper, setpaper] = useState({})\n    const [ultimoDocumento, setultimoDocumento] = useState(0)\n   const [vacio, setvacio] = useState(false)    \n\n\n  \n\n const listadepaper=async(recientes,valorados)=>{\n\n          \n        try {\n           \n        if(recientes){\n                setlistapaper([])\n                await firebase.db.collection(\"paper\").orderBy(\"subida\",\"desc\").limit\n                (5).get().then((coleccion)=>\n                {\n\n                            if(coleccion.size!=0){            \n                                        console.log(\"paso por aca \")\n                                        const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                        setultimoDocumento(lista[lista.length-1].id)\n                                        setlistapaper((listapaper)=>[...listapaper,...lista])\n                                        setcargando(false)\n                                        setvacio(true)\n                                }else{\n                                        console.log(\"paso por aca afuera \")\n                                        // no mostrar el boton\n                                        setvacio(false)  \n                                }\n\n                }\n                \n                )\n        }else{\n                if(valorados){\n                        setlistapaper([])\n                       await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){            \n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n                                                setvacio(true)\n                                                \n                                        }else{\n                                                \n                                              setvacio(false)  \n                                        }\n\n                        }\n                        \n                        )               \n                }else{\n                   \n                         let nuevalista=[]\n                            await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n                                \n                               \n                                nuevalista=valor.docs.map(doc=>{\n                                       \n                                                          return{\n                                                                id:doc.id,\n                                                                ...doc.data()\n                                                            }\n                                        \n                                })\n                               \n                                if(!nuevalista.length){\n                                      \n                                        setvacio(false)\n\n                                }else\n                                {\n                                      \n                                        setvacio(true)\n\n                                }\n                                setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                                 \n                       \n\n                           })\n\n\n                           \n                       \n                           \n                        setlistapaper(nuevalista)   \n\n\n\n\n\n              \n                }\n               \n               \n        }\n\n        } catch (error) {\n                console.log(error)\n        }\n        setcargando(false)\n }\n\n//  const  manejarSnapshot=(snapshot)=>{\n\n       \n       \n//         console.log(listapaper) \n//         const  lista =snapshot.docs.map(doc=>{\n//             return{\n//                 id:doc.id,\n//                 ...doc.data()\n//             }\n//         })\n//         console.log(lista)\n//         setcargando(false)\n\n//                 if(lista.length!=0){\n//                         setvacio(false) \n//                         setultimoDocumento(lista[lista.length-1].id)\n                        \n//                 }else{\n                       \n//                         setvacio(true)\n\n//                 }        \n//         setlistapaper(lista)\n//     } \n\n    \n\n\nconst pedirpaper=()=>{\n\n//buscar si  ahi un paper en especifico \n//\nsetcargando(true)\n\nconst {papermatch}=props.paperid\n\nif(papermatch){\n\n        buscarPorId(papermatch)\n\n}else{\n\n  // LLAMAR A LOS PAPER\n\n  \n   \n  listadepaper(props.recientes,props.valorados)\n\n}\n\n}\n\n\n\n\n    \n\n\nconst borrar=(e)=>{\n\n\n      \n\n        Swal.fire({\n                title: 'Esta seguro que desea borrar el siguiente registro?',\n                text:`${e.titulo}`,\n                showDenyButton: true,\n              \n                confirmButtonText: `Borrar`,\n                denyButtonText: `Cancelar`,\n              }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n                if (result.isConfirmed) {\n\n                                        \n                                firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                        \n                                     \n\n\n                                        let nuevaLista=[]\n                                        \n                                        listapaper.map((valor)=>{\n                                                      \n                                                      \n                                                        if(valor.id!=e.id){\n                                                                console.log(valor)\n                                                                nuevaLista.push(valor)\n                                                        }\n\n                                        })\n                                       \n                                     \n                                        pedirpaper()\n                                    \n                                       \n\n                                }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n\n\n                                e.etiquetas.map( valor=>{\n \n                                        firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                             //  console.log(\"Document successfully deleted!\");\n\n\n\n                                              let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                        return{...doc.data()}\n                                              \n                                              })\n\n                                                console.log(soloTag)\n                                                let nuevoObjeto={  ...soloTag,\n                                                        contar:soloTag.contar-1}\n\n                                                  console.log(nuevoObjeto)      \n\n                                                firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                        }).catch((error) => {\n                                            console.error(\"Error removing document: \", error);\n                                        });\n                                       \n        \n                                    })\n\n                              var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)    \n\n\n                              var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)    \n\n                              borrarArchivo.delete().then(function() {\n                                      //console.log(\"borrado\")\n                                // File deleted successfully\n                              }).catch(function(error) {\n                                      //console.log(error)\n                                // Uh-oh, an error occurred!\n                              });          \n\n                                        if(e.imagen!=null){ borrarImagen.delete().then(function() {\n                                                        //console.log(\"borrado\")\n                                                // File deleted successfully\n                                                }).catch(function(error) {\n                                                        console.log(error)\n                                                // Uh-oh, an error occurred!\n                                                }); }  \n\n\n                  Swal.fire('Borrado!', '', 'success')\n                } else if (result.isDenied) {\n                \n                }\n              })\n\n            \n}\n\n\n\n\n useEffect(() => {\n\n// //buscar si  ahi un paper en especifico \n// //\n// setcargando(true)\n\n// const {papermatch}=props.paperid\n\n// if(papermatch){\n\n//         buscarPorId(papermatch)\n\n// }else{\n\n//   // LLAMAR A LOS PAPER\n\n  \n        \n//   listadepaper(props.recientes,props.valorados)\n\n// }\n\npedirpaper()\n\n\n\n }, [props.recientes,props.paperid])\n\n\n\n\n\n  const pedirMas=async()=>{\n                setcargandodos(true)\n                const recientes=props.recientes\n                const valorados=props.valorados\n                const paperRef=firebase.db.collection(\"paper\")\n\n\n        try {\n           \n                if(recientes){\n\n\n\n                               \n                        return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                        {\n                           //     console.log(doc)\n                          var valoradosOrdenados = await paperRef.orderBy(\"subida\",\"desc\").startAfter(doc).limit(5).get()\n\n                                if(valoradosOrdenados.size!=0){            \n                                        \n                             //      console.log(valoradosOrdenados)     \n                                 const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                 setultimoDocumento(lista[lista.length-1].id)\n                                 setlistapaper((listapaper)=>[...listapaper,...lista])       \n                                 setcargandodos(false)\n                        }else{\n                                                \n                                setvacio(false)  \n                                setcargandodos(false)\n                          }\n\n                        }\n                        )\n\n\n\n                      \n                 \n        \n                }else{ \n                      \n        \n                        if(valorados){\n                            \n\n\n                                // const valoradosRef=firebase.db.collection(\"paper\")\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"likes\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){            \n                                                \n                                           console.log(valoradosOrdenados)     \n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista]) \n                                         setcargandodos(false)      \n\n                                }else{\n                                                        \n                                        setvacio(false)  \n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n                                \n                                // firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimoDocumento).limit(5).get().then((coleccion)=>\n                                // {\n\n\n                                //                 console.log(\"dentro de la coleccion \")\n\n                                //             if(coleccion.size!=0){            \n                                                        \n                                //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                //                         setultimoDocumento(lista[lista.length-1].likes)\n                                //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                        \n                                //                 }else{\n                                                        \n                                //                       setvacio(true)  \n                                //                 }\n                                // }\n                                \n                                // )\n                        }else{\n\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        //console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"id\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){            \n                                                \n                                          // console.log(valoradosOrdenados)     \n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])    \n                                         setcargandodos(false)   \n\n                                }else{\n                                                        \n                                        setvacio(false)  \n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n\n\n\n\n\n                                // comentar \n                        //       firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimoDocumento).limit(1).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){            \n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1])\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                        \n                        //                         }else{\n                                                        \n                        //                               setvacio(true)  \n                        //                         }\n                        //         }\n                                \n                        //         )\n                        }\n                       \n                       \n                }\n        \n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n\n  }\n\n\n// actualizar etiquetas \n\n const updateTag=()=>\n {\n\n\n }\n\n\n // buscar por id del paper \n\n  const buscarPorId=async(id)=>{\n//  alert(id)\n  var variable=await firebase.db.collection(\"paper\").doc(id)\n //console.log(variable)\n \n    \n variable.get().then((doc) => {\n        // Document was found in the cache. If no cached document exists,\n        // an error will be returned to the 'catch' block below.\n       // console.log(\"Cached document data:\", doc.data());\n        setlistapaper([doc.data()])\n\n        setcargando(false)\n        setvacio(false)\n\n    }).catch((error) => {\n        console.log(\"Error getting cached document:\", error);\n    });\n    \n\n\n  }\n\n \n  const buscarChips=(valor)=>{\n\n\n        history.push(`/tag/${valor.id}`)\n      \n  }      \n\n\n\nconst megusta=(valor)=>{\n       \n      \n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n\n       \n          \n          console.log(valor.haVotado)\n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n\n     if(antiguoHaVotado.includes(usuario.uid)){ \n             console.log(antiguoHaVotado)\n\n        antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                return obj!==usuario.uid        \n        })\n        valor.likes=valor.likes-1\n\n        let  nuevoValor={\n                ...valor,\n                 likes:valor.likes,\n                haVotado:antiguoHaVotado\n        }\n\n\n        firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n\n        // armar de nuevo el arreglo con el valor \n\n         armararreglo(nuevoValor)\n\n       // mapear etiquetas \n\n        valor.etiquetas.map(valordos=>{\n                firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                       haVotado:antiguoHaVotado     \n\n                })\n        })\n\n        \n         //setpaper({...valor,likes:valor.likes})\n        // actualizar la etiquetas\n        \n        \n\n\n\n              \n\n     }else{ \n    \n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     valor.likes=valor.likes+1   \n\n\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\nfirebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas \n\n      valor.etiquetas.map(valordos=>{\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado  \n\n        })\n})          \n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n   \n      }\n      console.log(\"final\")\n}\n\nconst armararreglo=(nuevoValor)=>{\n\n\n                 let   nuevalista=listapaper.map(valor=>{\n                                 \n                                if (nuevoValor.id==valor.id){\n                                        \n                                        return{\n                                                ...nuevoValor\n                                        }                   \n                                }else{\n\n                                        return{ ...valor}\n                                }\n\n\n\n                 })\n\n\n                 console.log(nuevalista)\n                 setlistapaper(nuevalista)\n\n\n}\n\n\n\n\n\n    return (\n\n\n\n// <Button onClick={()=>{pedirMas()}} >\n//                             ver mas\n// </Button> \n\n\n\n\n\n        <div  className={clases.margen}>\n\n                <Grid container>\n                    <Grid  xs={12}>\n                            {                            \n                            cargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                           {/* { listapaper.length==0 && \n                              <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>           */}\n                           \n\n                           {\n                            listapaper.map((valor)=>(\n\n                                        <Paper key={valor.id} className={clases.caja} elevation={3}>\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={4} >\n                                                        <div  >\n\n                                                             {valor.imagen==null?\n\n                                                              <div className={clases.divFoto}>\n                                                                        < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n                                                                      \n                                                              </div> :         \n                                                           <div   className={clases.divImagen} style={{\n                                                          backgroundImage:`url(${valor.imagen})`,\n                                                         \n                                                        }} >\n\n                                                                \n                                                                </div>\n\n                                                             }   \n                                                        </div>\n                                                </Grid>\n\n\n                                                <Grid  xs={12} sm={12} md={5}>\n                                                   <div className={clases.divTexto}>             \n\n                                                <Typography variant=\"h5\" className={clases.titulo} >\n                                                                {valor.titulo}             \n                                                </Typography>\n                                              \n                                                        <Typography className={clases.fecha} variant=\"subtitle2\">\n                                                                {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n                                                </Typography>\n\n\n                                                \n                                                \n\n                                                <Typography variant=\"body2\" className={clases.resumen}>\n                                                        {valor.resumen}\n                                                </Typography>\n\n                                                <Typography variant=\"subtitle1\">\n\n                                                        {valor.etiquetas.map((valor)=>(\n                                                //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>   \n                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                //    </Link>     \n                                                                        ))}\n\n\n                                                </Typography>\n\n                                                </div>             \n\n                                                </Grid>\n                                        \n                                                <Grid xs={12} sm={12} md={3}>\n\n                                                <Typography variant=\"subtitle1\" align=\"center\">\n\n                                                                <Button onClick={()=>megusta(valor)}\n                                                                className={clases.botonLikes}\n                                                                startIcon={<Corazon></Corazon>}\n                                                                >\n\n                                                                        {valor.likes}\n                                                                </Button>\n\n                                                </Typography>\n                                        \n\n                                                <Typography variant=\"subtitle1\" align=\"center\">\n                                                <a href={valor.pdf}  style={{textDecoration:\"none\"}} target=\"_blank\">                                               \n                                                <Button  className=\"botoneditar\" variant=\"contained\"\n                                                \n                                                startIcon={<InsertDriveFileIcon />}\n                                                \n                                                >\n\n                                                        pdf \n                                                </Button>\n\n                                                </a>     \n\n                                                </Typography>\n\n\n                                              {usuario==null?\n\n\n                                                      \n                                                        <div></div>\n                                                        :\n                                        \n\n                                                        usuario.administrador?\n\n                                                        <div className={clases.diveditarborrar}>          \n\n                                                        <Grid container>\n                                                                \n                                                                 <Grid xs={6}>\n                                                                \n                                                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                                                                <Link to={`/editarpaper/${valor.id}`}>\n                                                                                        <IconButton  variant=\"outlined\" color=\"primary\">\n                                                                                        <Lapiz></Lapiz>\n                                                                                        </IconButton>\n                                                                                </Link>\n        \n                                                                        </Typography>\n                                                                </Grid>\n                                                                <Grid  xs={6}>\n                                                                        <Typography variant=\"subtitle1\" align=\"center\">\n        \n                                                                        <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                                                                                <Basurero></Basurero>    \n                                                                        </IconButton>\n        \n                                                                        </Typography>\n                                                                </Grid>\n                                                        </Grid>\n                                             </div>                              \n        \n                                                 :\n                                                 <div></div>\n\n                                                        }  \n       </Grid>\n\n\n\n                                        </Grid>\n\n                                        \n\n\n\n\n                                        </Paper>\n\n\n                            )\n                         \n                            \n                            \n                            )\n                                                }\n\n                            {cargandodos?\n\n<div className={clases.divCircular} >\n<CircularProgress className={clases.circular}></CircularProgress>\n</div>\n\n\n\n:\n\nvacio==true &&\n\n        <Typography align=\"center\">\n        <Button \n                endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                variant =\"contained\"\n                color=\"primary\"\n        \n        onClick={()=>{\n                pedirMas()\n        }} >\n        ver mas\n\n                </Button> \n</Typography>   }                     \n\n\n\n\n\n                          \n                            </div>\n                            }\n                               \n                              \n                      \n                        \n                     </Grid>             \n\n\n                </Grid>\n\n\n        </div>\n   \n )\n}\n\nexport default Caja\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paper.jsx",["274","275","276","277","278","279"],"import React from 'react'\nimport {Paper as Papel,Grid,Typography,Chip,Button,IconButton,makeStyles,Link} from \"@material-ui/core\"\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Corazon from '@material-ui/icons/FavoriteBorder';\nimport moment from 'moment' \nimport \"moment/locale/es\"\nimport { useState } from 'react';\nimport Swal from \"sweetalert2\"\nimport firebase from \"../firebase/firebase\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { useContext } from 'react';\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport { useHistory } from 'react-router-dom';\n\n\nconst  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"250px auto \",\n\n\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"228px\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    },\n\n\n\n\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n     \n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    },\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n        marginTop:\"10px\",\n\n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    }\n\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\n\ncontenedor:{\n        margin:\"18px auto\"\n\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n\n        position:\"absolute\",\n        top:\"0\",\n        right:\"0\",\n        width:\"90px\"\n},\ndivFoto:{\n\n    width:\"250px\",\n    height:\"160px\",\n    border:\"2px dashed #21cbce\",\n    display:\"block\",\n    margin:\"16px auto\",\n    position:\"relative\",\n    [theme.breakpoints.down(\"sm\")]:{\n        margin:\"30px auto\"\n}\n},\n\ndivImagen:{\n       \n        height:\"160px\",\n        width:\"260px\",\n        backgroundSize:\"260px auto\",\n        backgroundRepeat:\"no-repeat\",\n        backgroundPosition:\"50%\",\n        borderRadius:\"0\",\n        display:\"block\",\n        margin:\"auto\",\n        marginTop:\"15px\",\n        [theme.breakpoints.down(\"sm\")]:{\n                marginTop:\"30px\"\n        }\n}\n,\ndivTexto:{\n        [theme.breakpoints.down(\"md\")]:{\n\n                margin:\"0vw 5vw 0\"\n        },\n\n\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"5vw 5vw 0\"\n        }\n}\n,\n\n\nimgFoto:{\n    color:\"#21cbce\",\n    position:\"absolute\",\n    margin:\"auto\",\n    top:\"0\",\n    bottom:\"0\",\n    left:\"0\",\n    right:\"0\",\n    fontSize:\"3rem\"\n}\n\n,\n    margenChip:{\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n    }\n\n\n\n }))\n\n\n\n\n\nconst Paper = (props) => {\n    const clases =estilos()\n    const history = useHistory();\nconst usuario =useContext(UsuarioContext)\n\nconst [valor, setvalor] = useState(props.Paper)\nconst [paper, setpaper] = useState({})\n\n\nconst buscarChips=(valor)=>{\n        history.push(`/tag/${valor}`)\n      \n    }      \n\n\n\nconst borrar=(e)=>{\n\n\n\n\n    Swal.fire({\n            title: 'Esta seguro que desea borrar el siguiente registro?',\n            text:`${e.titulo}`,\n            showDenyButton: true,\n          \n            confirmButtonText: `Borrar`,\n            denyButtonText: `Cancelar`,\n          }).then((result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n\n                                    \n                            firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                    console.log(\"Document successfully deleted!\");\n                            }).catch((error) => {\n                                    console.error(\"Error removing document: \", error);\n                            });\n              Swal.fire('Borrado!', '', 'success')\n            } else if (result.isDenied) {\n            \n            }\n          })\n\n        \n}\n\n\nconst megusta=async(valor)=>{\n\n               \n      console.log(valor)\n\n\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n\n        \n          \n         \n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n         console.log(antiguoHaVotado)\n         console.log(usuario.uid)\n         console.log(antiguoHaVotado.includes(usuario.uid))\n     if(antiguoHaVotado.includes(usuario.uid)){ \n\n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n\n\n                console.log(antiguoHaVotado)\n\n                valor.likes=valor.likes-1\n                await firebase.db.collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                        haVotado:antiguoHaVotado\n                })\n                \n                setpaper({...valor,likes:valor.likes})\n              \n\n     }else{ \n        \n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     valor.likes=valor.likes+1   \nawait firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n})\n\n     setpaper({...valor,likes:valor.likes})\n      }\n}\n\n\n    return (\n        <div>\n            \n\n\n\n\n            <Papel className={clases.caja} elevation={3}>\n\n\n<Grid container  className={clases.contenedor}>\n\n        <Grid xs={12} sm={12} md={4}>\n                <div>\n\n                     {valor.imagen==null?\n\n\n                    <div className={clases.divFoto}>\n                    < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n\n                    </div> \n                        \n                      \n                      \n                      \n                      :         \n                   <div  className={clases.divImagen} style={{\n                  backgroundImage:`url(${valor.imagen})`,\n                   \n                }} >\n\n                        \n                        </div>\n\n                     }   \n                </div>\n        </Grid>\n\n\n        <Grid xs={12} sm={12} md={5}>\n        <div className={clases.divTexto}>             \n\n\n        <Typography variant=\"h5\" className={clases.titulo} >\n                        {valor.titulo}             \n        </Typography>\n\n        <Typography className={clases.fecha} variant=\"subtitle2\">\n                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n        </Typography>\n\n\n        <Typography variant=\"body2\" className={clases.resumen}>\n                {valor.resumen}\n        </Typography>\n\n        <Typography variant=\"subtitle1\">\n\n                {valor.etiquetas.map((valor)=>(\n                \n                <Chip variant=\"outlined\" className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor} />\n                     \n                                ))}\n\n\n        </Typography>\n\n\n        </div>        \n        </Grid>\n\n\n\n\n\n\n        <Grid xs={12} sm={12} md={3}>\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n\n                        <Button\n                         onClick={()=>megusta(valor)}\n                        style={{color:\"#ff0000\",\n                        marginTop:\"40px\"\n                }}\n                        startIcon={<Corazon></Corazon>}\n                        >\n\n                                {valor.likes}\n                        </Button>\n\n        </Typography>\n\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n        <a href={valor.pdf}  style={{textDecoration:\"none\"}} target=\"_blank\">                                               \n        <Button  className=\"botoneditar\" variant=\"contained\"\n        \n        startIcon={<InsertDriveFileIcon />}\n        \n        >\n\n                pdf \n        </Button>\n\n        </a>     \n\n        </Typography>\n\n          \n        {usuario==null?\n\n\n                                                      \n<div></div>\n:\n\n\nusuario.administrador?\n\n<div className={clases.diveditarborrar}>          \n\n<Grid container>\n        \n         <Grid xs={6}>\n        \n                <Typography variant=\"subtitle1\" align=\"center\">\n                        <Link to={`/editarpaper/${valor.id}`}>\n                                <IconButton  variant=\"outlined\" color=\"primary\">\n                                <Lapiz></Lapiz>\n                                </IconButton>\n                        </Link>\n\n                </Typography>\n        </Grid>\n        <Grid  xs={6}>\n                <Typography variant=\"subtitle1\" align=\"center\">\n\n                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                        <Basurero></Basurero>    \n                </IconButton>\n\n                </Typography>\n        </Grid>\n</Grid>\n</div>                              \n\n:\n<div></div>\n\n}  \n\n\n\n        </Grid>\n\n\n\n</Grid>\n\n\n\n\n\n\n</Papel>\n\n\n        </div>\n    )\n}\n\nexport default Paper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/BotonFlotante.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/config.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetasdos.jsx",["280","281","282","283","284","285","286","287","288","289","290","291","292"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paperdos.jsx",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/Funciones.js",["313"],"\nimport Firebase from '../firebase/firebase'\n\n\n// retorna el paper por id\nconst RetornarPaper=async(id)=>{\n\n   const consulta= await Firebase.db.collection(\"paper\").doc(id).get().then(docRef=>{return{id:docRef.id,...docRef.data()}})\n   console.log(consulta)\n   return consulta\n\n}\n\n// renovar papers  segun el mapeo de etiquetas \n\nconst RenovarPaperMapEtiqueta=(paper)=>{\n    console.log(\"hola mundo\")\n    console.log(paper)\n    const etiquetas=paper.etiquetas\n    const consulta=Firebase.db.collection(\"etiquetas\")\n\n    etiquetas.map(tag=>{\n\n         consulta.doc(tag.id).collection(\"paper\").doc(paper.id).update(paper)\n\n\n    })\n\n\n\n}\n\n\n\n\nexport {RetornarPaper,RenovarPaperMapEtiqueta}","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/PaperDoc.js",["314","315","316","317"],"import Firebase from '../firebase/firebase'\n\n\n// variable a la base de datos \nconst PaperDb=Firebase.db.collection(\"paper\")\nconst Etiquetas=Firebase.db.collection(\"etiquetas\")\n// actualizar paper\n\n                const actualizarPaper=(paper)=>\n                {\n                // actualizando el paper etiquetas \n                // actulizando paper\n                    PaperDb.doc(paper.id).update(paper).then(()=>{\n                        console.log(\"paper actualizado\")\n                    }).catch(error=>console.log(\"error al actualizar\"))\n\n                }\n\n                // Actualizar paper\n\n\n                const ActualizarPaperEnEtiquetas=(paper)=>{\n                    console.log(paper)\n                    let tag=paper.etiquetas\n                    console.log(tag)\n                    tag.map(valor=>{\n                        Etiquetas.doc(valor.id).collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n                            console.log(\"paper actualizado\")\n                        }).catch(error=>console.log(\"error al actualizar\"))\n                    })\n\n\n                }\n\n                const actualizarVariosPaper =(lista)=>{\n\n                    lista.map(doc=>{\n                         actualizarPaper(doc)\n\n                    })\n\n                }\n                const  ActualizarVariosEtiquetas=async(lista,valor)=>{\n\n                        \n\n\n\n                        \n                        console.log(lista)\n\n                        lista.map(doc=>{\n  \n                                \n                                doc.etiquetas.map(tag=>{\n\n                                    Etiquetas.doc(tag.id).collection(\"paper\").doc(doc.id).update(doc).then(()=>{\n                                        console.log(\"paper actualizado\")\n                                        }).catch(error=>console.log(\"error al actualizar\"))   \n                                })                                        \n                                    })\n                }\n\n\n            \n\n                \n\n\n\n\n\n\n\nexport  {actualizarPaper,ActualizarPaperEnEtiquetas,actualizarVariosPaper,ActualizarVariosEtiquetas}\n\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetastres.jsx",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339"],"import React, { useEffect,useState ,useContext} from 'react'\nimport Firebase from '../firebase/firebase'\nimport { Typography,makeStyles,Grid,CircularProgress,Button } from '@material-ui/core'\nimport Paper from \"../Componetes/Paper\"\nimport EtiquetasIcon from '@material-ui/icons/LocalOffer';\nimport { useHistory } from 'react-router-dom';\nimport Paperdos from \"../Componetes/Papertres\"\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport {actualizarPaper,ActualizarPaperEnEtiquetas} from '../Funciones/PaperDoc'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\n\n\nconst estilos=makeStyles((theme)=>({\n    \n    root:{\n\n        \"& .botonEtiqueta\":{\n            background:\"#ffffff\",\n            color:\"#212121 !important\",\n            marginTop:\"10px\",\n            fontSize:\"27px\",\n            fontFamily:\"nunito\",\n            \"&:hover\": {\n                background:\"#36cbce\",\n                color:\"#ffffff!important\",\n             },\n        \n        },\n        \"& .botonEtiqueta .MuiSvgIcon-root\":{\n            color:\"#36cbce\"\n        },\n        \n        \"& .botonEtiqueta:hover .MuiSvgIcon-root\":{\n            color:\"#ffffff\"\n        },\n        \n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n    },\n    \n    texto:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n    \n\n\n    },textoDos:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n        textTransform:\"uppercase\"\n\n\n    },\n    divTag:{\n\n        padding:\"50px 0px\"\n    },\n    divEtiqueta:{\n\n        margin:\"29px auto\",\n        width:\"75vw\"\n\n    },\n    divReg:{\n\n        margin:\"45px auto\",\n        width:\"75vw\"\n\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        }\n\n        ,textNoDisponible:{\n\n\n            fontFamily:\"Nunito\",\n            color:\"#808080\"\n        } }\n))\n\n\n\nconst Etiquetas = (props) => {\n \nconst clases=estilos()    \nconst history=useHistory()\n\nconst usuario =useContext(UsuarioContext)\n// guardar el valor \nconst [elvalor, setelvalor] = useState()\n// state etiquet para pedir mas \nconst [etiquetarray, setetiquetarray] = useState([])\nconst [etiquetas, setetiquetas] = useState([])\nconst [pedirmas, setpedirmas] = useState(false)\nconst [paper, setpaper] = useState([])\nconst [cargando, setcargando] = useState(false)\nconst [ultimo, setultimo] = useState(0)\nconst [changeLike, setChangeLike] = useState({\n    cambio:false,\n    idEtiqueta:null,\n    paper:null\n\n\n})\nconst recientes=props.recientes\nconst valorados=props.valorados\n//  crear nuevo state para el  el nuevo arreglo \nconst [paperArray, setpaperArray] = useState([])\n// buscar etiquetas \nconst buscaretiquetas=async()=>{\n setcargando(true)   \n \n  const lista  =await Firebase.db.collection(\"etiquetas\").get()\n\n  const listados = await Promise.all(lista.docs.map(async(doc)=>{\n            //console.log(doc.data())\n            // etiqueta \n             let etiqueta= {id:doc.id,\n                 ...doc.data()}\n            console.log(etiqueta)  \n            //mapear etiqueta \n             let listatres=[] \n             \n                    if (valorados){\n                        listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"likes\",\"desc\").limit(2).get()\n                    }else{\n\n                                if(recientes){\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(2).get()\n\n\n                                }else{\n\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").limit(2).get()\n                                } \n                    }\n\n             \n             const listacuatro= listatres.docs.map(doc=>{\n                    return {\n                        id:doc.id,\n                        ...doc.data()\n                    }  \n             }\n             )       \n             console.log(listacuatro)\n             return{\n                etiquetas:etiqueta,\n                paper:listacuatro\n\n            }\n                // return {\n                //     id:doc.id,\n                //     ...doc.data()\n                // }\n            }))  \n                         \n  console.log(listados)        \n  setpaperArray(listados)  \n  setcargando(false)\n\n\n}\n\n\nfunction manejarSnapshot(snapshot){\n\n    const lista =snapshot.docs.map(doc=>{\n\n        return {\n\n            id:doc.id,\n            ...doc.data()\n        }\n\n\n    })\n\n setetiquetas(lista)\n setcargando(false)\n //armarpaper(lista)\n //segunda lista return true \n\n}\n\n\nconst armarconsultrecientes=(lista)=>{\n\n    lista.sort((a,b)=>(a.subida<b.subida)?1:-1)\n    return lista \n\n\n}\nconst armarconsultvalorados=(lista)=>{\n\n    lista.sort((a,b)=>(a.likes<b.likes)?1:-1)\n    return lista \n\n\n}\n\nconst megusta=(valor)=>{\n\n        console.log(valor)\n        megustacuatro(valor)\n\n\n}\n\n\nconst pedirMore=()=>{\n    listaconid(elvalor,true)    \n}\n\n\n\nconst megustacuatro=async(valor)=>{ \n    setcargando(true)\n    if(usuario==null) {\n            return history.push(\"/login\")\n    }\n    // prueba de las funciones \n    //const valorRenovado=  await RetornarPaper(valor.id)\n    //valor=valorRenovado\n    if(valor.haVotado==undefined){                    \n            var antiguoHaVotado=[]\n    }else{\n            var antiguoHaVotado=valor.haVotado\n    }                      \n    // nuevo paper \n    let newPaper={}\n    let nuevaLista=[]\n    if(antiguoHaVotado.includes(usuario.uid)){ \n            antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                    return obj!==usuario.uid\n            })\n            let megusta=valor.likes-1 \n             newPaper={\n                    ...valor,\n                     likes:megusta,\n                    haVotado:antiguoHaVotado\n            }\n             //listaPaperdos(newPaper,megusta,antiguoHaVotado)\n            //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n            //RenovarPaperMapEtiqueta(nuevoPaper)\n            // \n            nuevaLista= megustacinco(newPaper,megusta,antiguoHaVotado)\n    console.log(newPaper)\n }else{ \n    // alert(\"no incluido\")\n const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n console.log(nuevoHaVotado)\n let megusta=valor.likes+1   \n \n\n // crear variable de paper \n\n newPaper={\n    ...valor,\n     likes:megusta,\n    haVotado:nuevoHaVotado\n}\nnuevaLista=megustacinco(newPaper,megusta,nuevoHaVotado)\nconsole.log(newPaper,megusta,nuevoHaVotado)\n//listaPaperdos(newPaper,megusta,nuevoHaVotado)\n//await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n\n//RenovarPaperMapEtiqueta(nuevoPaper)\n\n\n\n    //        let arreglo=paper \n    //        setpaper([])\n\n    // const nuevoPaper=arreglo.map(papel=>{\n    //    if(valor.id==papel.id){\n\n\n\n             \n    //         return{\n    //                 ...papel,\n    //                 likes:1\n    //         }\n\n    //    }\n\n    //    return papel\n\n    // })\n\n    // setpaper(nuevoPaper)\n\n}\n\nconsole.log(nuevaLista)\nsetpaperArray(nuevaLista)\nsetcargando(false)\n actualizarPaper(newPaper)\n ActualizarPaperEnEtiquetas(newPaper)\n// buscaretiquetas()\n// props.setChangeLike({\n//         cambio:true,\n//         idEtiqueta:props.id,\n//         paper:newPaper\n//     })\n\n\n         \n\n\n\n\n}\n\n\n\nconst  megustacinco=(valor,megusta,nuevosvotos)=>{\n\n  const nuevaLista =paperArray.map(doc=>{\n\n                console.log(doc)\n                  const nuevaListaDos=doc.paper.map(doc=>{\n                        console.log(doc)\n                                if(valor.id==doc.id){\n\n                               \n                                    return {\n                                        ...valor,\n                                        likes:megusta,\n                                        haVotado:nuevosvotos       \n                                    }\n                            }\n\n\n\n                            return doc\n\n\n                    })\n\n\n                   return {\n                       etiquetas:doc.etiquetas,\n                       paper:nuevaListaDos\n                   }\n\n  })\n\n  return nuevaLista\n\n\n}\n\n\n\n\nconst listaconid=async(valor,ruta)=>{\n\n    setcargando(true)\n        setetiquetas(valor)\n        setpedirmas(true)\n          \n\n    if(ruta){\n        \n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimo).limit(5).get()\n\n\n    }else{\n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get()\n        }\n\n    var consult=consulta.docs.map(doc=>{\n \n         return {\n \n             id:doc.id,\n             ...doc.data()\n         }\n \n    \n     })\n\n     console.log(consult)\n\n     // guardar en el state la etiqueta \n     \n     setetiquetarray(antiguo=>[...antiguo,...consult])\n\n\n     if(consult.length){\n        let nuevoultimo=consult[consult.length-1].id\n                 console.log(nuevoultimo)\n                if(nuevoultimo!=undefined){\n                    setultimo(consult[consult.length-1].id)\n                    \n                }\n\n    }\n     \n\n// console.log(consult)\n\n// armar consulta del nuevo arreglo \n\nconst etiquet = await Firebase.db.collection(\"etiquetas\").doc(valor).get().then((doc)=>{\n    // console.log(doc.id)\n    // console.log(doc.data())\n    return{\n        id:doc.id,\n        ...doc.data()\n\n    }\n\n})\n\nconsole.log(etiquet)\n\n\n// armar el objeto \n\nconst nuevoObjeto={\n    etiquetas:etiquet,\n    paper:consult\n}\n\nconsole.log(nuevoObjeto)\n\nlet prueba=[]\nprueba.push(nuevoObjeto)\nsetpaperArray(prueba)\nsetcargando(false)\n\n//  if(recientes){\n//          alert(\"prueba\")\n//         var consult =  armarconsultrecientes(consult)\n// }\n// if(valorados){\n\n     \n    //     var consult =  armarconsultvalorados(consult)\n    // }\n\n\n    //      var res={\n    //         tag:valor,\n    //         lista:consult,\n    //         cantidad:consult.length\n    //      }\n        \n    //      setpaper([res])\n        \n    //      setcargando(false)\n            \n\n    }\n\n    \n    useEffect(async() => {\n    \n        const {valor}=props.match.params\n\n\n\n    \n\n        if(valor){\n            setelvalor(valor)\n            listaconid(valor,false)\n        \n        }else{ \n        //alert(\"prueba\")\n        buscaretiquetas()\n        setpedirmas(false)\n        }\n\n\n    }, [props])\n\n\n        return (\n\n\n\n        \n            <div className={clases.root} style={{marginTop:\"88px\"}} >\n\n\n                \n        \n                <div className={clases.divTag} >\n                        <Typography variant=\"h3\" align=\"center\"\n                                className={clases.texto}\n                        >\n                            \n                                Etiquetas \n                            </Typography> \n\n\n                </div>  \n\n                {\n                    !cargando?\n                    <div>\n                            {paperArray.length!=0?\n                                    <div>\n                                        {\n                                        paperArray.map(paper=>(\n                                    <div  >\n                                        <div id=\"etiqueta\" className={clases.divEtiqueta} >\n                            \n                                    <Typography   className={clases.textoDos} variant=\"h4\" align=\"left\">\n                                        <EtiquetasIcon color=\"primary\"/>\n                                            {paper.etiquetas !=undefined&&\n                                            \n                                            paper.etiquetas.descripcion}\n        \n                                        </Typography> \n\n\n\n                                            {/* <Button id=\"etiqueta\" size=\"large\"\n\n                                            className=\"botonEtiqueta\"\n                                            startIcon={<EtiquetasIcon/>}\n                                            >\n                                            {paper.etiquetas !=undefined&&\n                                        \n                                        paper.etiquetas.descripcion}\n                                        </Button> */}\n\n                                  \n                                      </div>     \n                                      <div>\n\n\n\n                                         \n                                   \n                                                <div  >\n                                                    \n                                                    {paper.etiquetas !=undefined&&\n                                                    paper.paper.length!=0?\n                                                               paper.paper.map(doc=>(\n                                                             <div>\n                                                                <Paperdos  paper={doc}  buscaretiquetas={buscaretiquetas}   length={paper.paper.length}   changeLike={changeLike} setChangeLike={setChangeLike}   megusta={megusta}  ></Paperdos>\n                                                                         \n                                                            \n                                                            \n                                                             </div>   \n                                                \n                                                            ))\n\n                                                            \n\n                                                                \n\n\n\n               \n                                                               \n\n\n                                                :\n                                                \n                                                <Typography className={clases.\n                                                    textNoDisponible\n                                                     } align=\"center\" variant=\"h5\">\n                                                              No hay registros\n                                                    </Typography>          \n\n\n                                                }\n\n                                                </div>\n\n\n\n\n                                                { \n                                                    pedirmas?\n                                                \n                                                    <Typography align=\"center\">\n                                                    <Button \n                                                            endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                            variant =\"contained\"\n                                                            color=\"primary\"\n                                                           onClick={()=>pedirMore()}\n                                                       \n                                                    \n                                                    >\n                                                    ver mas \n                                                            </Button> \n                                                 </Typography>\n                                                    :\n                                                paper.etiquetas.contar >2&&\n                                                \n                                                <Typography align=\"center\">\n                                                                <Button \n                                                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                                        variant =\"contained\"\n                                                                        color=\"primary\"\n                                                                        href= {`/tag/${paper.etiquetas.id}`}\n                                                                   \n                                                                \n                                                                >\n                                                                ver mas\n                                                                        </Button> \n                                                </Typography>   }             \n\n\n                                                \n                                                    {/* <div>\n                                                        <Paperdos id={tag.id}  changeLike={changeLike} setChangeLike={setChangeLike}   etiquetas={tag} buscaretiquetas={buscaretiquetas}   ></Paperdos>\n                                                    </div>   */}\n                                               \n                        \n                                                    \n                                                    \n                                        \n                                      </div>  \n                                      </div>\n    \n                                )\n                                )\n                                \n                                \n\n\n\n\n                                \n                                \n                                }\n\n\n\n\n\n\n\n                                </div>\n                        \n                    :\n                    <div style={{width:\"inherit\"}}>\n                    <Typography className={clases.\n                        textNoDisponible\n                         }  align=\"center\" variant=\"h4\">\n                                  No ahi registros\n                        </Typography>          \n                        </div>\n                    }\n\n\n                </div>:\n\n                         <div>\n                                <div className={clases.divCircular} >\n                                        <CircularProgress className={clases.circular}></CircularProgress>\n                                    </div>\n                        </div>\n\n            }\n\n\n                  \n            \n        </div>\n    )\n}\n\nexport default Etiquetas\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Papertres.jsx",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359"],"import React from 'react'\nimport {Paper as Papel,Grid,Typography,Chip,Button ,CircularProgress ,IconButton,makeStyles,Link} from \"@material-ui/core\"\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Corazon from '@material-ui/icons/FavoriteBorder';\nimport moment from 'moment' \nimport \"moment/locale/es\"\nimport { useState } from 'react';\nimport Swal from \"sweetalert2\"\nimport firebase from \"../firebase/firebase\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { useContext } from 'react';\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport { useHistory } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport {RetornarPaper,RenovarPaperMapEtiqueta} from '../Funciones/Funciones'\n\nimport {actualizarPaper,ActualizarPaperEnEtiquetas} from '../Funciones/PaperDoc'\n\n\nconst  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"250px auto \",\n\n\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    },\n\n\n  \n\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n     \n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    },\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n        marginTop:\"10px\",\n\n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    }\n\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\n\ncontenedor:{\n        margin:\"18px auto\"\n\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n\n        position:\"absolute\",\n        top:\"0\",\n        right:\"0\",\n        width:\"90px\"\n},\ndivFoto:{\n\n    width:\"250px\",\n    height:\"160px\",\n    border:\"2px dashed #21cbce\",\n    display:\"block\",\n    margin:\"16px auto\",\n    position:\"relative\",\n    [theme.breakpoints.down(\"sm\")]:{\n        margin:\"30px auto\"\n}\n},\n\ndivImagen:{\n       \n        height:\"160px\",\n        width:\"260px\",\n        backgroundSize:\"260px auto\",\n        backgroundRepeat:\"no-repeat\",\n        backgroundPosition:\"50%\",\n        borderRadius:\"0\",\n        display:\"block\",\n        margin:\"auto\",\n        marginTop:\"15px\",\n        [theme.breakpoints.down(\"sm\")]:{\n                marginTop:\"30px\"\n        }\n}\n,\ndivTexto:{\n        [theme.breakpoints.down(\"md\")]:{\n\n                margin:\"0vw 5vw 0\"\n        },\n\n\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"5vw 5vw 0\"\n        }\n}\n,\n\n\nimgFoto:{\n    color:\"#21cbce\",\n    position:\"absolute\",\n    margin:\"auto\",\n    top:\"0\",\n    bottom:\"0\",\n    left:\"0\",\n    right:\"0\",\n    fontSize:\"3rem\"\n}\n\n,\n    margenChip:{\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n    },\n    divReg:{\n\n        margin:\"45px auto\",\n        width:\"75vw\"\n\n    },\n    texto:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\"\n\n    },\n\n\n\n }))\n\n\n\n\n\nconst Paper = (props) => {\n        const clases =estilos()\n        const history = useHistory();\n        const usuario =useContext(UsuarioContext)\n        const [valor, setvalor] = useState(props.paper)\n        const [paper, setpaper] = useState([])\n        const [cargando, setcargando] = useState(false)\n        const [cargandoCorazon, setcargandoCorazon] = useState(false)\n        const buscaretiquetas=props.buscaretiquetas\n        const megusta=props.megusta\n        const tamaño =props.length\n        const [ultimoDocumento, setultimoDocumento] = useState(0)\n\n\n\n\n\n\nconst buscarChips=(valor)=>{\nhistory.push(`/tag/${valor.id}`)\n      \n    }      \n\n\n\nconst borrar=(e)=>{\n\n    Swal.fire({\n            title: 'Esta seguro que desea borrar el siguiente registro?',\n            text:`${e.titulo}`,\n            showDenyButton: true,\n          \n            confirmButtonText: `Borrar`,\n            denyButtonText: `Cancelar`,\n          }).then((result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n\n                                    \n                            firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                    console.log(\"Document successfully deleted!\");\n                            }).catch((error) => {\n                                    console.error(\"Error removing document: \", error);\n                            });\n                           \n                            //hacer un mapeo y borrar \n\n\n                            e.etiquetas.map(valor=>{\n \n                                firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                        //  console.log(\"Document successfully deleted!\");\n\n\n\n                                         let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                   return{...doc.data()}\n                                         \n                                         })\n\n                                           console.log(soloTag)\n                                           let nuevoObjeto={  ...soloTag,\n                                                   contar:soloTag.contar-1}\n\n                                             console.log(nuevoObjeto)      \n\n                                           firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                   }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n                               \n\n                            })\n\n                            var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)    \n                            var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)    \n\n\n                            \n                                borrarArchivo.delete().then(function() {\n                                        console.log(\"borrado\")\n                                // File deleted successfully\n                                }).catch(function(error) {\n                                        console.log(error)\n                                // Uh-oh, an error occurred!\n                                });          \n\n                                borrarImagen.delete().then(function() {\n                                console.log(\"borrado\")\n                        // File deleted successfully\n                        }).catch(function(error) {\n                                console.log(error)\n                        // Uh-oh, an error occurred!\n                        });          \n\n\n\n\n\n                            props.buscaretiquetas()\n\n              Swal.fire('Borrado!', '', 'success')\n            } else if (result.isDenied) {\n            \n            }\n          })\n\n        \n}\n\n\n\nconst megustatres=async(valor)=>{\n\n\n        //setcargando(true)\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n        // prueba de las funciones \n        //const valorRenovado=  await RetornarPaper(valor.id)\n        //valor=valorRenovado\n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n        }else{\n                var antiguoHaVotado=valor.haVotado\n        }\n\n                        \n        // nuevo paper \n\n        let newPaper={}\n\n     if(antiguoHaVotado.includes(usuario.uid)){ \n      \n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n\n                let megusta=valor.likes-1 \n               \n                 newPaper={\n                        ...valor,\n                         likes:megusta,\n                        haVotado:antiguoHaVotado\n                }\n\n\n                listaPaperdos(newPaper,megusta,antiguoHaVotado)\n                //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n                //RenovarPaperMapEtiqueta(nuevoPaper)\n                // \n              \n\n     }else{ \n        // alert(\"no incluido\")\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     let megusta=valor.likes+1   \n     \n\n     // crear variable de paper \n\n     newPaper={\n        ...valor,\n         likes:megusta,\n        haVotado:nuevoHaVotado\n}\n\nlistaPaperdos(newPaper,megusta,nuevoHaVotado)\n//await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n\n//RenovarPaperMapEtiqueta(nuevoPaper)\n\n\n\n        //        let arreglo=paper \n        //        setpaper([])\n\n        // const nuevoPaper=arreglo.map(papel=>{\n        //    if(valor.id==papel.id){\n\n\n\n                 \n        //         return{\n        //                 ...papel,\n        //                 likes:1\n        //         }\n\n        //    }\n\n        //    return papel\n\n        // })\n\n        // setpaper(nuevoPaper)\n\n}\n\nactualizarPaper(newPaper)\nActualizarPaperEnEtiquetas(newPaper)\nbuscaretiquetas()\nprops.setChangeLike({\n        cambio:true,\n        idEtiqueta:props.id,\n        paper:newPaper\n    })\n\n\n\n\n\n}\n\nconst megustacuatro=async(valor)=>{ \n        //setcargando(true)\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n        // prueba de las funciones \n        //const valorRenovado=  await RetornarPaper(valor.id)\n        //valor=valorRenovado\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n        }else{\n                var antiguoHaVotado=valor.haVotado\n        }                      \n        // nuevo paper \n        let newPaper={}\n        if(antiguoHaVotado.includes(usuario.uid)){ \n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n                let megusta=valor.likes-1 \n                 newPaper={\n                        ...valor,\n                         likes:megusta,\n                        haVotado:antiguoHaVotado\n                }\n        listaPaperdos(newPaper,megusta,antiguoHaVotado)\n                //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n                //RenovarPaperMapEtiqueta(nuevoPaper)\n                // \n              \n        console.log(newPaper)\n     }else{ \n        // alert(\"no incluido\")\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     let megusta=valor.likes+1   \n     \n\n     // crear variable de paper \n\n     newPaper={\n        ...valor,\n         likes:megusta,\n        haVotado:nuevoHaVotado\n}\n\nconsole.log(newPaper)\n//listaPaperdos(newPaper,megusta,nuevoHaVotado)\n//await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n\n//RenovarPaperMapEtiqueta(nuevoPaper)\n\n\n\n        //        let arreglo=paper \n        //        setpaper([])\n\n        // const nuevoPaper=arreglo.map(papel=>{\n        //    if(valor.id==papel.id){\n\n\n\n                 \n        //         return{\n        //                 ...papel,\n        //                 likes:1\n        //         }\n\n        //    }\n\n        //    return papel\n\n        // })\n\n        // setpaper(nuevoPaper)\n\n}\n\n// actualizarPaper(newPaper)\n// ActualizarPaperEnEtiquetas(newPaper)\n// buscaretiquetas()\n// props.setChangeLike({\n//         cambio:true,\n//         idEtiqueta:props.id,\n//         paper:newPaper\n//     })\n\n\n             \n\n\n\n\n}\n\n\n\nconst listaPaperdos=(valor,megusta,nuevosvotos)=>\n{\n        const nuevoPaper=paper.map(papel=>{\n                if(valor.id==papel.id){\n                     return {\n                         ...valor,\n                         likes:megusta,\n                         haVotado:nuevosvotos       \n                     }\n                }\n                return papel\n             })\n             setpaper(nuevoPaper)\n}\n\n\n\n\n\n\nuseEffect(async() => {\n\n\n\n\n        setvalor(props.paper)\n// if(props.changeLike.cambio){\n//         console.log(props.changeLike.idEtiqueta)\n//         console.log(props.id)\n//         if(props.changeLike.idEtiqueta!=props.id){\n              \n//                 cargarListaDos()\n//         }else{\n//                 cargarListaDos()\n//         }\n        \n\n// }else{\n\n// // iniciar carga \n// setcargando(true)\n//  //tomar todas las etiquetas\n\n//             const etiquetas = props.etiquetas\n//             console.log(etiquetas)\n// // buscar los paper guardados en cada etiquetas \n//         //crear variable para guardar \n//          let listadepaper=[]\n\n//         //lista de paper con las etiquetas\n//         listadepaper =  await firebase.db.collection(\"etiquetas\").doc(etiquetas.id).collection(\"paper\").get()\n        \n\n//             var consulta =listadepaper.docs.map(doc=>{\n//                     return{\n//                             id:doc.id,\n//                             ...doc.data()\n//                     }\n//             })    \n\n\n//         //mostrar el resultado \n\n//         console.log(consulta)\n\n//         //Guardar la consulta\n//         setpaper(consulta)\n         \n//         // terminar de cargar\n\n//         setcargando(false)\n//         }\n\n\n\n}, [props])\n\n\n\n    return (\n        <div>\n                \n            \n\n                                        <Papel key={valor.id} className={clases.caja} elevation={3}>\n\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={4}>\n                                                                                <div>\n\n                                                                                {valor.imagen!==undefined &&\n                                                                                valor.imagen==null?\n\n\n                                                                                <div className={clases.divFoto}>\n                                                                                < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n\n                                                                                </div> \n                                                                                        \n                                                                                \n                                                                                \n                                                                                \n                                                                                :         \n                                                                                <div  className={clases.divImagen} style={{\n                                                                                backgroundImage:`url(${valor.imagen})`,\n                                                                                \n                                                                                }} >\n\n                                                                                        \n                                                                                        </div>\n\n                                                                                }   \n                                                                                </div>\n                                                 </Grid>\n                                            \n                                                <Grid xs={12} sm={12} md={5}>\n        <div className={clases.divTexto}>             \n\n\n        <Typography variant=\"h5\" className={clases.titulo} >\n                        {valor.titulo}             \n        </Typography>\n\n        <Typography className={clases.fecha} variant=\"subtitle2\">\n                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n        </Typography>\n\n\n        <Typography variant=\"body2\" className={clases.resumen}>\n                {valor.resumen}\n        </Typography>\n\n        <Typography variant=\"subtitle1\">\n\n                {valor.etiquetas.map((valor)=>(\n                \n                <Chip variant=\"outlined\" className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                     \n                                ))}\n\n\n        </Typography>\n\n\n        </div>        \n        </Grid>\n\n                                                \n        <Grid xs={12} sm={12} md={3}>\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n\n           {cargandoCorazon?\n\n                <div>\n                <div className={clases.divCircular} >\n                        <CircularProgress className={clases.circular}></CircularProgress>\n                </div>\n                </div>\n\n                :\n\n                <Button\n                onClick={()=>megusta(valor)}\n               style={{color:\"#ff0000\",\n               marginTop:\"40px\"\n       }}\n               startIcon={<Corazon></Corazon>}\n               >\n\n                       {valor.likes}\n               </Button>\n\n\n\n\n           }                     \n\n\n\n                 \n        </Typography>\n\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n        <a href={valor.pdf}  style={{textDecoration:\"none\"}} target=\"_blank\">                                               \n        <Button  className=\"botoneditar\" variant=\"contained\"\n        \n        startIcon={<InsertDriveFileIcon />}\n        \n        >\n\n                pdf \n        </Button>\n\n        </a>     \n\n        </Typography>\n\n          \n        {usuario==null?\n\n\n                                                      \n<div></div>\n:\n\n\nusuario.administrador?\n\n<div className={clases.diveditarborrar}>          \n\n<Grid container>\n        \n         <Grid xs={6}>\n        \n                <Typography variant=\"subtitle1\" align=\"center\">\n                        <Link href={`/editarpaper/${valor.id}`}>\n                                <IconButton  variant=\"outlined\" color=\"primary\">\n                                <Lapiz></Lapiz>\n                                </IconButton>\n                        </Link>\n\n                </Typography>\n        </Grid>\n        <Grid  xs={6}>\n                <Typography variant=\"subtitle1\" align=\"center\">\n\n                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                        <Basurero></Basurero>    \n                </IconButton>\n\n                </Typography>\n        </Grid>\n</Grid>\n</div>                              \n\n:\n<div></div>\n\n}  \n\n\n\n        </Grid>\n\n          \n\n                                            \n\n\n\n                                        </Grid>\n\n                                        \n                                      \n                                         </Papel>                      \n\n                               \n\n                                        \n{/*                                         \n                                                                { tamaño==2&&\n\n                                                                <Typography align=\"center\">\n                                                                <Button \n                                                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                                        variant =\"contained\"\n                                                                        color=\"primary\"\n\n                                                                onClick={()=>{\n                                                                        \n                                                                }} >\n                                                                ver mas\n                                                                        </Button> \n                                                                </Typography>   }                     \n\n                                      } */}\n\n                      \n             \n\n                \n            \n\n        </div>\n    )\n}\n\nexport default Paper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetascuatro.jsx",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { useEffect,useState ,useContext} from 'react'\nimport Firebase from '../firebase/firebase'\nimport { Typography,makeStyles,Grid,CircularProgress,Button } from '@material-ui/core'\nimport Paper from \"../Componetes/Paper\"\nimport EtiquetasIcon from '@material-ui/icons/LocalOffer';\nimport { useHistory } from 'react-router-dom';\nimport Paperdos from \"../Componetes/Papertres\"\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport {actualizarPaper,ActualizarPaperEnEtiquetas} from '../Funciones/PaperDoc'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\n\nconst estilos=makeStyles((theme)=>({\n    \n    root:{\n\n        \"& .botonEtiqueta\":{\n            background:\"#ffffff\",\n            color:\"#212121 !important\",\n            marginTop:\"10px\",\n            fontSize:\"27px\",\n            fontFamily:\"nunito\",\n            \"&:hover\": {\n                background:\"#36cbce\",\n                color:\"#ffffff!important\",\n             },\n        \n        },\n        \"& .botonEtiqueta .MuiSvgIcon-root\":{\n            color:\"#36cbce\"\n        },\n        \n        \"& .botonEtiqueta:hover .MuiSvgIcon-root\":{\n            color:\"#ffffff\"\n        },\n    },\n    \n    texto:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n    \n\n\n    },textoDos:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n        textTransform:\"uppercase\"\n\n\n    },\n    divTag:{\n\n        padding:\"50px 0px\"\n    },\n    divEtiqueta:{\n\n        margin:\"29px auto\",\n        width:\"75vw\"\n\n    },\n    divReg:{\n\n        margin:\"45px auto\",\n        width:\"75vw\"\n\n    },\n    divCircular:{\n        marginTop:\"50px\",\n        marginBottom:\"129px\"\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        }\n\n        ,textNoDisponible:{\n\n\n            fontFamily:\"Nunito\",\n            color:\"#808080\"\n        } }\n))\n\n\n\nconst Etiquetas = (props) => {\n \nconst clases=estilos()    \nconst history=useHistory()\n\nconst usuario =useContext(UsuarioContext)\n//state etiquet \nconst [etiquet, setetiquet] = useState([])\n// guardar el valor \nconst [elvalor, setelvalor] = useState()\n// state etiquet para pedir mas \nconst [etiquetarray, setetiquetarray] = useState([])\nconst [etiquetas, setetiquetas] = useState([])\nconst [pedirmas, setpedirmas] = useState(false)\nconst [paper, setpaper] = useState([])\nconst [cargando, setcargando] = useState(false)\nconst [cargandodos, setcargandodos] = useState(false)\nconst [esconderboton, setesconderboton] = useState(false)\n\nconst [changeLike, setChangeLike] = useState({\n    cambio:false,\n    idEtiqueta:null,\n    paper:null\n\n\n})\nconst recientes=props.recientes\nconst valorados=props.valorados\n//  crear nuevo state para el  el nuevo arreglo \nconst [paperArray, setpaperArray] = useState([])\nconst [ultimo, setultimo] = useState(0)\nconst {id} =props.match.params\n\n\nconst limite=5\n// buscar etiquetas \nconst buscaretiquetas=async()=>{\n setcargando(true)   \n \n  const lista  =await Firebase.db.collection(\"etiquetas\").get()\n\n  const listados = await Promise.all(lista.docs.map(async(doc)=>{\n            //console.log(doc.data())\n            // etiqueta \n             let etiqueta= {id:doc.id,\n                 ...doc.data()}\n            console.log(etiqueta)  \n            //mapear etiqueta \n             let listatres=[] \n             \n                    if (valorados){\n                        listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"likes\",\"desc\").limit(2).get()\n                    }else{\n\n                                if(recientes){\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(2).get()\n\n\n                                }else{\n\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").limit(2).get()\n                                } \n                    }\n\n             \n             const listacuatro= listatres.docs.map(doc=>{\n                    return {\n                        id:doc.id,\n                        ...doc.data()\n                    }  \n             }\n             )       \n             console.log(listacuatro)\n             return{\n                etiquetas:etiqueta,\n                paper:listacuatro\n\n            }\n                // return {\n                //     id:doc.id,\n                //     ...doc.data()\n                // }\n            }))  \n                         \n  console.log(listados)        \n  setpaperArray(listados)  \n  setcargando(false)\n\n\n}\n\n\n\n\nconst megusta=(valor)=>{\n\n    \n        megustacuatro(valor)\n\n\n}\nconst megustacuatro=async(valor)=>{ \n    setcargando(true)\n    if(usuario==null) {\n            return history.push(\"/login\")\n    }\n    // prueba de las funciones \n    //const valorRenovado=  await RetornarPaper(valor.id)\n    //valor=valorRenovado\n    if(valor.haVotado==undefined){                    \n            var antiguoHaVotado=[]\n    }else{\n            var antiguoHaVotado=valor.haVotado\n    }                      \n    // nuevo paper \n    let newPaper={}\n    let nuevaLista=[]\n    if(antiguoHaVotado.includes(usuario.uid)){ \n            antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                    return obj!==usuario.uid\n            })\n            let megusta=valor.likes-1 \n             newPaper={\n                    ...valor,\n                     likes:megusta,\n                    haVotado:antiguoHaVotado\n            }\n             //listaPaperdos(newPaper,megusta,antiguoHaVotado)\n            //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n            //RenovarPaperMapEtiqueta(nuevoPaper)\n            // \n            nuevaLista= megustacinco(newPaper,megusta,antiguoHaVotado)\n    console.log(newPaper)\n }else{ \n    \n const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n console.log(nuevoHaVotado)\n let megusta=valor.likes+1   \n newPaper={\n    ...valor,\n     likes:megusta,\n    haVotado:nuevoHaVotado\n}\nnuevaLista=megustacinco(newPaper,megusta,nuevoHaVotado)\nconsole.log(newPaper,megusta,nuevoHaVotado)\n\n}\n\nconsole.log(nuevaLista)\nsetetiquetarray(nuevaLista)\nsetcargando(false)\n actualizarPaper(newPaper)\n ActualizarPaperEnEtiquetas(newPaper)\n// buscaretiquetas()\n// props.setChangeLike({\n//         cambio:true,\n//         idEtiqueta:props.id,\n//         paper:newPaper\n//     })\n\n\n         \n\n\n\n\n}\n\n\n\nconst  megustacinco=(valor,megusta,nuevosvotos)=>{\n\n\n  const nuevaLista =etiquetarray.map(doc=>{\n                                if(valor.id==doc.id){  \n                                    return {\n                                        ...valor,\n                                        likes:megusta,\n                                        haVotado:nuevosvotos       \n                                    }\n                            }else{\n                                return{...doc}\n                            }\n                    })\n\n\n  return nuevaLista\n\n\n}\n\n\n\n\nconst listaconid=async(valor,ruta)=>{\n\n   \n    // guardar la etiqueta que se esta buscando \n    setetiquetas(valor)\n    // ¿sera necesario ?\n      setpedirmas(true)\n\n    //esconder el button \n    setesconderboton(false) \n          \n\n\n            if(recientes){\n                var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(limite).get()\n\n\n            }else{\n\n                if(valorados){\n\n                    var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"likes\",\"desc\").limit(limite).get()\n\n                }else{\n                    var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"id\",\"desc\").limit(limite).get()\n\n                }\n\n            }\n\n\n\n    var consult=consulta.docs.map(doc=>{\n \n         return {\n \n             id:doc.id,\n             ...doc.data()\n         }\n \n    \n     })\n     // guardar en el state la etiqueta \n     setetiquetarray(consult)\n     if(consult.length){\n        let nuevoultimo=consult[consult.length-1].id\n                 console.log(nuevoultimo)\n                if(nuevoultimo!=undefined){\n                    setultimo(consult[consult.length-1].id)\n                    \n                }\n\n    }\n     \n\n// console.log(consult)\n\n\n\n\n// armar el objeto \n\nsetcargando(false)\n\n//  if(recientes){\n//          alert(\"prueba\")\n//         var consult =  armarconsultrecientes(consult)\n// }\n// if(valorados){\n\n     \n    //     var consult =  armarconsultvalorados(consult)\n    // }\n\n\n    //      var res={\n    //         tag:valor,\n    //         lista:consult,\n    //         cantidad:consult.length\n    //      }\n        \n    //      setpaper([res])\n        \n    //      setcargando(false)\n            \n\n    }\n\n\n\n\n const listardesdeelultimo=async()=>{\n  \n    setcargandodos(true)\n\n\n    if (recientes){\n        \n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(limite).get()\n\n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").doc(ultimo).get().then(async doc=>{          \n            let nuevaLista=[]\n             let nuevaListados=await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"subida\",\"desc\").startAfter(doc).limit(1).get()\n             return nuevaListados\n    \n            })\n\n    }else{\n\n            if(valorados){\n               \n                //var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimo).limit(1).get()\n                \n                var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").doc(ultimo).get().then(async doc=>{\n                        \n                        let nuevaLista=[]\n                         let nuevaListados=await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(doc).limit(1).get()\n                         return nuevaListados\n                \n                        })\n\n               \n            }else{\n              \n                var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").doc(ultimo).get().then(async doc=>{\n                        \n                    let nuevaLista=[]\n                     let nuevaListados=await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(doc).limit(1).get()\n                     return nuevaListados\n            \n                    })\n            }\n\n    }\n    var consult=consulta.docs.map(doc=>{\n \n        return {\n\n            id:doc.id,\n            ...doc.data()\n        }\n\n   \n    }) \n    console.log(consult)   \n    setetiquetarray((viejo)=>[...viejo,...consult])\n    if(consult.length){\n        let nuevoultimo=consult[consult.length-1].id\n        setultimo(nuevoultimo)\n\n\n    }\n    \n    if(etiquet.contar==etiquetarray.length+consult.length){\n    setesconderboton(true)\n    }else{\n        setesconderboton(false)\n    }\n\n\n    console.log(cargandodos)\n   setcargandodos(false)\n } \n\n\n    \n    useEffect(async() => {\n        \n        setcargando(true)\n        setcargandodos(false)\n       \n        const {valor}=props.match.params\n      \n         //  guardar en un state en una etiqueta \n\n            const etiquet = await Firebase.db.collection(\"etiquetas\").doc(valor).get().then((doc)=>{\n                // console.log(doc.id)\n                // console.log(doc.data())\n                        return{\n                            id:doc.id,\n                            ...doc.data()\n\n                        }\n\n                    })\n\n      \n            setetiquet(etiquet)\n            listaconid(valor,false)\n    \n\n    }, [props,id])\n\n\n        return (\n\n\n\n        \n            <div className={clases.root} style={{marginTop:\"88px\"}} >\n        \n                <div className={clases.divTag} >\n                        <Typography variant=\"h3\" align=\"center\"\n                                className={clases.texto}\n                        >\n                            \n                                Etiquetas \n                            </Typography> \n\n\n                </div>  \n\n                {\n                    !cargando?\n                  \n                        \n                                  \n                                        \n                                    <div>\n                                        <div id=\"etiqueta\" className={clases.divEtiqueta} >\n                            \n                                                    <Typography   className={clases.textoDos} variant=\"h4\" align=\"left\">\n                                                        <EtiquetasIcon color=\"primary\"/>\n                                                            {etiquet.descripcion}\n                        \n                                                    </Typography> \n                                                \n                                        </div>     \n                                        <div>\n                                                    <div>\n                                                        \n                                                        {\n                                                        etiquetarray.map(doc=>(\n                                                                <div>\n                                                                    <Paperdos   paper={doc}  buscaretiquetas={buscaretiquetas}   length={etiquetarray.length}   changeLike={changeLike} setChangeLike={setChangeLike}   megusta={megusta}  ></Paperdos>\n                                                                            \n                                                                \n                                                                \n                                                                </div>   \n                                                    \n                                                                ))}\n\n                                                \n                                        \n                                                    </div> \n\n\n                                                         {cargandodos?\n\n                                                                    <div>\n                                                                    <div className={clases.divCircular} >\n                                                                            <CircularProgress className={clases.circular}></CircularProgress>\n                                                                        </div>\n                                                                    </div>\n\n                                                                    :\n\n                                                                    <Typography align=\"center\">\n                                                                          { esconderboton==false&&      <Button \n                                                                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                                                        variant =\"contained\"\n                                                                                        color=\"primary\"\n                                                                                \n                                                                                onClick={()=>{\n                                                                                    listardesdeelultimo()\n                                                                                }} >\n                                                                                ver mas\n                                                                            </Button> }\n                                                            </Typography>                 \n        \n                                                         }       \n\n                                                   \n                                        </div> \n                                    </div>                        \n                                                                \n                                      :  \n                                    <div>\n                                            <div className={clases.divCircular} >\n                                                    <CircularProgress className={clases.circular}></CircularProgress>\n                                                </div>\n                                    </div>\n\n                           \n                     \n                        }\n                   </div>\n\n\n                  \n            \n        \n    )\n}\n\n\nexport default Etiquetas\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Nosotros.jsx",[],{"ruleId":"385","replacedBy":"386"},{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","severity":1,"message":"390","line":7,"column":24,"nodeType":"391","messageId":"392","endLine":7,"endColumn":39},{"ruleId":"389","severity":1,"message":"393","line":35,"column":9,"nodeType":"391","messageId":"392","endLine":35,"endColumn":16},{"ruleId":"389","severity":1,"message":"394","line":40,"column":8,"nodeType":"391","messageId":"392","endLine":40,"endColumn":13},{"ruleId":"389","severity":1,"message":"395","line":40,"column":15,"nodeType":"391","messageId":"392","endLine":40,"endColumn":23},{"ruleId":"389","severity":1,"message":"396","line":42,"column":9,"nodeType":"391","messageId":"392","endLine":42,"endColumn":16},{"ruleId":"397","severity":1,"message":"398","line":124,"column":28,"nodeType":"399","messageId":"400","endLine":124,"endColumn":30},{"ruleId":"397","severity":1,"message":"398","line":156,"column":20,"nodeType":"399","messageId":"400","endLine":156,"endColumn":22},{"ruleId":"397","severity":1,"message":"398","line":164,"column":23,"nodeType":"399","messageId":"400","endLine":164,"endColumn":25},{"ruleId":"397","severity":1,"message":"398","line":201,"column":22,"nodeType":"399","messageId":"400","endLine":201,"endColumn":24},{"ruleId":"397","severity":1,"message":"398","line":215,"column":22,"nodeType":"399","messageId":"400","endLine":215,"endColumn":24},{"ruleId":"397","severity":1,"message":"398","line":234,"column":31,"nodeType":"399","messageId":"400","endLine":234,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":260,"column":17,"nodeType":"399","messageId":"400","endLine":260,"endColumn":19},{"ruleId":"397","severity":1,"message":"401","line":324,"column":30,"nodeType":"399","messageId":"400","endLine":324,"endColumn":32},{"ruleId":"397","severity":1,"message":"401","line":329,"column":34,"nodeType":"399","messageId":"400","endLine":329,"endColumn":36},{"ruleId":"397","severity":1,"message":"401","line":334,"column":37,"nodeType":"399","messageId":"400","endLine":334,"endColumn":39},{"ruleId":"402","severity":1,"message":"403","line":413,"column":1,"nodeType":"404","endLine":413,"endColumn":20},{"ruleId":"405","severity":1,"message":"406","line":464,"column":14,"nodeType":"407","endLine":464,"endColumn":80},{"ruleId":"389","severity":1,"message":"408","line":8,"column":8,"nodeType":"391","messageId":"392","endLine":8,"endColumn":17},{"ruleId":"389","severity":1,"message":"409","line":13,"column":8,"nodeType":"391","messageId":"392","endLine":13,"endColumn":22},{"ruleId":"389","severity":1,"message":"410","line":20,"column":10,"nodeType":"391","messageId":"392","endLine":20,"endColumn":16},{"ruleId":"397","severity":1,"message":"401","line":173,"column":26,"nodeType":"399","messageId":"400","endLine":173,"endColumn":28},{"ruleId":"397","severity":1,"message":"401","line":191,"column":27,"nodeType":"399","messageId":"400","endLine":191,"endColumn":29},{"ruleId":"397","severity":1,"message":"398","line":239,"column":20,"nodeType":"399","messageId":"400","endLine":239,"endColumn":22},{"ruleId":"397","severity":1,"message":"398","line":244,"column":21,"nodeType":"399","messageId":"400","endLine":244,"endColumn":23},{"ruleId":"411","severity":1,"message":"412","line":424,"column":30,"nodeType":"413","messageId":"414","endLine":424,"endColumn":32},{"ruleId":"389","severity":1,"message":"415","line":491,"column":9,"nodeType":"391","messageId":"392","endLine":491,"endColumn":24},{"ruleId":"397","severity":1,"message":"401","line":502,"column":26,"nodeType":"399","messageId":"400","endLine":502,"endColumn":28},{"ruleId":"397","severity":1,"message":"401","line":538,"column":39,"nodeType":"399","messageId":"400","endLine":538,"endColumn":41},{"ruleId":"411","severity":1,"message":"412","line":653,"column":30,"nodeType":"413","messageId":"414","endLine":653,"endColumn":32},{"ruleId":"411","severity":1,"message":"412","line":654,"column":31,"nodeType":"413","messageId":"414","endLine":654,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":657,"column":39,"nodeType":"399","messageId":"400","endLine":657,"endColumn":41},{"ruleId":"411","severity":1,"message":"412","line":718,"column":20,"nodeType":"413","messageId":"414","endLine":718,"endColumn":22},{"ruleId":"411","severity":1,"message":"412","line":725,"column":17,"nodeType":"413","messageId":"414","endLine":725,"endColumn":19},{"ruleId":"416","severity":1,"message":"417","line":900,"column":4,"nodeType":"418","endLine":900,"endColumn":21,"suggestions":"419"},{"ruleId":"405","severity":1,"message":"406","line":1001,"column":37,"nodeType":"407","endLine":1001,"endColumn":98},{"ruleId":"420","severity":1,"message":"421","line":1291,"column":36,"nodeType":"407","endLine":1291,"endColumn":97},{"ruleId":"389","severity":1,"message":"422","line":3,"column":32,"nodeType":"391","messageId":"392","endLine":3,"endColumn":36},{"ruleId":"389","severity":1,"message":"423","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":20},{"ruleId":"389","severity":1,"message":"424","line":57,"column":8,"nodeType":"391","messageId":"392","endLine":57,"endColumn":17},{"ruleId":"425","severity":1,"message":"426","line":177,"column":13,"nodeType":"391","messageId":"427","endLine":177,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":181,"column":9,"nodeType":"391","messageId":"427","endLine":181,"endColumn":16},{"ruleId":"416","severity":1,"message":"428","line":201,"column":11,"nodeType":"413","endLine":252,"endColumn":2},{"ruleId":"425","severity":1,"message":"426","line":228,"column":13,"nodeType":"391","messageId":"427","endLine":228,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":232,"column":9,"nodeType":"391","messageId":"427","endLine":232,"endColumn":16},{"ruleId":"416","severity":1,"message":"429","line":252,"column":4,"nodeType":"418","endLine":252,"endColumn":11,"suggestions":"430"},{"ruleId":"397","severity":1,"message":"401","line":280,"column":31,"nodeType":"399","messageId":"400","endLine":280,"endColumn":33},{"ruleId":"431","severity":1,"message":"432","line":331,"column":46,"nodeType":"433","messageId":"434","endLine":331,"endColumn":47,"fix":"435"},{"ruleId":"416","severity":1,"message":"436","line":150,"column":4,"nodeType":"418","endLine":150,"endColumn":13,"suggestions":"437"},{"ruleId":"411","severity":1,"message":"412","line":167,"column":30,"nodeType":"413","messageId":"414","endLine":167,"endColumn":32},{"ruleId":"397","severity":1,"message":"398","line":169,"column":35,"nodeType":"399","messageId":"400","endLine":169,"endColumn":37},{"ruleId":"411","severity":1,"message":"412","line":273,"column":50,"nodeType":"413","messageId":"414","endLine":273,"endColumn":52},{"ruleId":"397","severity":1,"message":"401","line":278,"column":45,"nodeType":"399","messageId":"400","endLine":278,"endColumn":47},{"ruleId":"389","severity":1,"message":"438","line":328,"column":7,"nodeType":"391","messageId":"392","endLine":328,"endColumn":22},{"ruleId":"411","severity":1,"message":"412","line":342,"column":24,"nodeType":"413","messageId":"414","endLine":342,"endColumn":26},{"ruleId":"397","severity":1,"message":"401","line":344,"column":21,"nodeType":"399","messageId":"400","endLine":344,"endColumn":23},{"ruleId":"389","severity":1,"message":"439","line":384,"column":8,"nodeType":"391","messageId":"392","endLine":384,"endColumn":27},{"ruleId":"411","severity":1,"message":"412","line":391,"column":34,"nodeType":"413","messageId":"414","endLine":391,"endColumn":36},{"ruleId":"397","severity":1,"message":"398","line":393,"column":31,"nodeType":"399","messageId":"400","endLine":393,"endColumn":33},{"ruleId":"389","severity":1,"message":"440","line":435,"column":8,"nodeType":"391","messageId":"392","endLine":435,"endColumn":23},{"ruleId":"397","severity":1,"message":"398","line":466,"column":25,"nodeType":"399","messageId":"400","endLine":466,"endColumn":27},{"ruleId":"389","severity":1,"message":"441","line":502,"column":7,"nodeType":"391","messageId":"392","endLine":502,"endColumn":17},{"ruleId":"389","severity":1,"message":"442","line":506,"column":8,"nodeType":"391","messageId":"392","endLine":506,"endColumn":18},{"ruleId":"411","severity":1,"message":"412","line":506,"column":38,"nodeType":"413","messageId":"414","endLine":506,"endColumn":40},{"ruleId":"389","severity":1,"message":"443","line":509,"column":15,"nodeType":"391","messageId":"392","endLine":509,"endColumn":30},{"ruleId":"411","severity":1,"message":"412","line":509,"column":55,"nodeType":"413","messageId":"414","endLine":509,"endColumn":57},{"ruleId":"397","severity":1,"message":"398","line":511,"column":33,"nodeType":"399","messageId":"400","endLine":511,"endColumn":35},{"ruleId":"397","severity":1,"message":"398","line":661,"column":30,"nodeType":"399","messageId":"400","endLine":661,"endColumn":32},{"ruleId":"397","severity":1,"message":"401","line":664,"column":37,"nodeType":"399","messageId":"400","endLine":664,"endColumn":39},{"ruleId":"431","severity":1,"message":"432","line":700,"column":54,"nodeType":"433","messageId":"434","endLine":700,"endColumn":55,"fix":"444"},{"ruleId":"397","severity":1,"message":"398","line":113,"column":25,"nodeType":"399","messageId":"400","endLine":113,"endColumn":27},{"ruleId":"397","severity":1,"message":"398","line":120,"column":25,"nodeType":"399","messageId":"400","endLine":120,"endColumn":27},{"ruleId":"397","severity":1,"message":"398","line":131,"column":27,"nodeType":"399","messageId":"400","endLine":131,"endColumn":29},{"ruleId":"397","severity":1,"message":"398","line":135,"column":28,"nodeType":"399","messageId":"400","endLine":135,"endColumn":30},{"ruleId":"397","severity":1,"message":"401","line":141,"column":36,"nodeType":"399","messageId":"400","endLine":141,"endColumn":38},{"ruleId":"389","severity":1,"message":"445","line":13,"column":12,"nodeType":"391","messageId":"392","endLine":13,"endColumn":22},{"ruleId":"389","severity":1,"message":"446","line":2,"column":21,"nodeType":"391","messageId":"392","endLine":2,"endColumn":25},{"ruleId":"389","severity":1,"message":"447","line":5,"column":15,"nodeType":"391","messageId":"392","endLine":5,"endColumn":19},{"ruleId":"389","severity":1,"message":"422","line":5,"column":21,"nodeType":"391","messageId":"392","endLine":5,"endColumn":25},{"ruleId":"389","severity":1,"message":"448","line":11,"column":26,"nodeType":"391","messageId":"392","endLine":11,"endColumn":32},{"ruleId":"389","severity":1,"message":"449","line":14,"column":8,"nodeType":"391","messageId":"392","endLine":14,"endColumn":21},{"ruleId":"389","severity":1,"message":"450","line":20,"column":9,"nodeType":"391","messageId":"392","endLine":20,"endColumn":18},{"ruleId":"389","severity":1,"message":"451","line":20,"column":19,"nodeType":"391","messageId":"392","endLine":20,"endColumn":33},{"ruleId":"389","severity":1,"message":"452","line":282,"column":17,"nodeType":"391","messageId":"392","endLine":282,"endColumn":23},{"ruleId":"389","severity":1,"message":"453","line":293,"column":12,"nodeType":"391","messageId":"392","endLine":293,"endColumn":18},{"ruleId":"389","severity":1,"message":"454","line":293,"column":19,"nodeType":"391","messageId":"392","endLine":293,"endColumn":28},{"ruleId":"425","severity":1,"message":"455","line":347,"column":17,"nodeType":"391","messageId":"427","endLine":347,"endColumn":33},{"ruleId":"425","severity":1,"message":"455","line":364,"column":13,"nodeType":"391","messageId":"427","endLine":364,"endColumn":29},{"ruleId":"389","severity":1,"message":"456","line":384,"column":14,"nodeType":"391","messageId":"392","endLine":384,"endColumn":20},{"ruleId":"431","severity":1,"message":"432","line":384,"column":58,"nodeType":"433","messageId":"434","endLine":384,"endColumn":59,"fix":"457"},{"ruleId":"397","severity":1,"message":"398","line":407,"column":22,"nodeType":"399","messageId":"400","endLine":407,"endColumn":24},{"ruleId":"397","severity":1,"message":"398","line":433,"column":29,"nodeType":"399","messageId":"400","endLine":433,"endColumn":31},{"ruleId":"397","severity":1,"message":"398","line":449,"column":31,"nodeType":"399","messageId":"400","endLine":449,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":449,"column":77,"nodeType":"399","messageId":"400","endLine":449,"endColumn":79},{"ruleId":"416","severity":1,"message":"458","line":462,"column":4,"nodeType":"418","endLine":462,"endColumn":43,"suggestions":"459"},{"ruleId":"402","severity":1,"message":"403","line":719,"column":23,"nodeType":"404","endLine":719,"endColumn":42},{"ruleId":"402","severity":1,"message":"403","line":720,"column":23,"nodeType":"404","endLine":720,"endColumn":38},{"ruleId":"402","severity":1,"message":"403","line":814,"column":17,"nodeType":"404","endLine":814,"endColumn":28},{"ruleId":"460","severity":1,"message":"461","line":960,"column":21,"nodeType":"462","messageId":"463","endLine":962,"endColumn":53},{"ruleId":"402","severity":1,"message":"403","line":982,"column":37,"nodeType":"404","endLine":982,"endColumn":56},{"ruleId":"402","severity":1,"message":"403","line":983,"column":37,"nodeType":"404","endLine":983,"endColumn":52},{"ruleId":"416","severity":1,"message":"428","line":33,"column":15,"nodeType":"413","endLine":72,"endColumn":6},{"ruleId":"389","severity":1,"message":"464","line":3,"column":8,"nodeType":"391","messageId":"392","endLine":3,"endColumn":14},{"ruleId":"389","severity":1,"message":"465","line":5,"column":8,"nodeType":"391","messageId":"392","endLine":5,"endColumn":16},{"ruleId":"389","severity":1,"message":"466","line":6,"column":8,"nodeType":"391","messageId":"392","endLine":6,"endColumn":16},{"ruleId":"389","severity":1,"message":"467","line":21,"column":9,"nodeType":"391","messageId":"392","endLine":21,"endColumn":14},{"ruleId":"389","severity":1,"message":"468","line":26,"column":9,"nodeType":"391","messageId":"392","endLine":26,"endColumn":21},{"ruleId":"389","severity":1,"message":"469","line":9,"column":8,"nodeType":"391","messageId":"392","endLine":9,"endColumn":19},{"ruleId":"389","severity":1,"message":"470","line":10,"column":8,"nodeType":"391","messageId":"392","endLine":10,"endColumn":17},{"ruleId":"389","severity":1,"message":"438","line":40,"column":9,"nodeType":"391","messageId":"392","endLine":40,"endColumn":24},{"ruleId":"389","severity":1,"message":"471","line":42,"column":9,"nodeType":"391","messageId":"392","endLine":42,"endColumn":16},{"ruleId":"389","severity":1,"message":"472","line":42,"column":17,"nodeType":"391","messageId":"392","endLine":42,"endColumn":27},{"ruleId":"389","severity":1,"message":"473","line":43,"column":9,"nodeType":"391","messageId":"392","endLine":43,"endColumn":16},{"ruleId":"389","severity":1,"message":"474","line":43,"column":17,"nodeType":"391","messageId":"392","endLine":43,"endColumn":27},{"ruleId":"416","severity":1,"message":"475","line":62,"column":7,"nodeType":"418","endLine":62,"endColumn":14,"suggestions":"476"},{"ruleId":"411","severity":1,"message":"412","line":104,"column":38,"nodeType":"413","messageId":"414","endLine":104,"endColumn":40},{"ruleId":"397","severity":1,"message":"398","line":106,"column":39,"nodeType":"399","messageId":"400","endLine":106,"endColumn":41},{"ruleId":"389","severity":1,"message":"477","line":118,"column":21,"nodeType":"391","messageId":"392","endLine":118,"endColumn":23},{"ruleId":"389","severity":1,"message":"478","line":2,"column":74,"nodeType":"391","messageId":"392","endLine":2,"endColumn":80},{"ruleId":"389","severity":1,"message":"479","line":19,"column":8,"nodeType":"391","messageId":"392","endLine":19,"endColumn":13},{"ruleId":"480","severity":1,"message":"481","line":48,"column":13,"nodeType":"482","messageId":"400","endLine":48,"endColumn":29},{"ruleId":"389","severity":1,"message":"483","line":224,"column":12,"nodeType":"391","messageId":"392","endLine":224,"endColumn":17},{"ruleId":"389","severity":1,"message":"484","line":224,"column":19,"nodeType":"391","messageId":"392","endLine":224,"endColumn":27},{"ruleId":"397","severity":1,"message":"401","line":242,"column":46,"nodeType":"399","messageId":"400","endLine":242,"endColumn":48},{"ruleId":"397","severity":1,"message":"401","line":264,"column":54,"nodeType":"399","messageId":"400","endLine":264,"endColumn":56},{"ruleId":"411","severity":1,"message":"412","line":416,"column":63,"nodeType":"413","messageId":"414","endLine":416,"endColumn":65},{"ruleId":"397","severity":1,"message":"401","line":419,"column":68,"nodeType":"399","messageId":"400","endLine":419,"endColumn":70},{"ruleId":"411","severity":1,"message":"412","line":436,"column":55,"nodeType":"413","messageId":"414","endLine":436,"endColumn":57},{"ruleId":"416","severity":1,"message":"485","line":526,"column":5,"nodeType":"418","endLine":526,"endColumn":36,"suggestions":"486"},{"ruleId":"397","severity":1,"message":"401","line":551,"column":59,"nodeType":"399","messageId":"400","endLine":551,"endColumn":61},{"ruleId":"397","severity":1,"message":"401","line":586,"column":67,"nodeType":"399","messageId":"400","endLine":586,"endColumn":69},{"ruleId":"397","severity":1,"message":"401","line":631,"column":67,"nodeType":"399","messageId":"400","endLine":631,"endColumn":69},{"ruleId":"389","severity":1,"message":"487","line":688,"column":8,"nodeType":"391","messageId":"392","endLine":688,"endColumn":17},{"ruleId":"397","severity":1,"message":"398","line":742,"column":26,"nodeType":"399","messageId":"400","endLine":742,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":745,"column":21,"nodeType":"391","messageId":"427","endLine":745,"endColumn":36},{"ruleId":"411","severity":1,"message":"412","line":773,"column":37,"nodeType":"413","messageId":"414","endLine":773,"endColumn":39},{"ruleId":"411","severity":1,"message":"412","line":807,"column":35,"nodeType":"413","messageId":"414","endLine":807,"endColumn":37},{"ruleId":"397","severity":1,"message":"398","line":828,"column":50,"nodeType":"399","messageId":"400","endLine":828,"endColumn":52},{"ruleId":"489","severity":1,"message":"490","line":960,"column":49,"nodeType":"407","endLine":960,"endColumn":118},{"ruleId":"397","severity":1,"message":"398","line":1047,"column":6,"nodeType":"399","messageId":"400","endLine":1047,"endColumn":8},{"ruleId":"480","severity":1,"message":"481","line":65,"column":5,"nodeType":"482","messageId":"400","endLine":65,"endColumn":21},{"ruleId":"389","severity":1,"message":"491","line":190,"column":15,"nodeType":"391","messageId":"392","endLine":190,"endColumn":23},{"ruleId":"389","severity":1,"message":"483","line":191,"column":8,"nodeType":"391","messageId":"392","endLine":191,"endColumn":13},{"ruleId":"397","severity":1,"message":"398","line":248,"column":26,"nodeType":"399","messageId":"400","endLine":248,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":251,"column":21,"nodeType":"391","messageId":"427","endLine":251,"endColumn":36},{"ruleId":"489","severity":1,"message":"490","line":388,"column":9,"nodeType":"407","endLine":388,"endColumn":78},{"ruleId":"389","severity":1,"message":"422","line":3,"column":32,"nodeType":"391","messageId":"392","endLine":3,"endColumn":36},{"ruleId":"389","severity":1,"message":"492","line":4,"column":8,"nodeType":"391","messageId":"392","endLine":4,"endColumn":13},{"ruleId":"389","severity":1,"message":"423","line":6,"column":10,"nodeType":"391","messageId":"392","endLine":6,"endColumn":20},{"ruleId":"389","severity":1,"message":"483","line":59,"column":8,"nodeType":"391","messageId":"392","endLine":59,"endColumn":13},{"ruleId":"389","severity":1,"message":"493","line":82,"column":7,"nodeType":"391","messageId":"392","endLine":82,"endColumn":25},{"ruleId":"389","severity":1,"message":"494","line":107,"column":7,"nodeType":"391","messageId":"392","endLine":107,"endColumn":17},{"ruleId":"425","severity":1,"message":"426","line":172,"column":13,"nodeType":"391","messageId":"427","endLine":172,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":176,"column":9,"nodeType":"391","messageId":"427","endLine":176,"endColumn":16},{"ruleId":"416","severity":1,"message":"428","line":194,"column":11,"nodeType":"413","endLine":245,"endColumn":2},{"ruleId":"425","severity":1,"message":"426","line":221,"column":13,"nodeType":"391","messageId":"427","endLine":221,"endColumn":20},{"ruleId":"425","severity":1,"message":"426","line":225,"column":9,"nodeType":"391","messageId":"427","endLine":225,"endColumn":16},{"ruleId":"416","severity":1,"message":"429","line":245,"column":4,"nodeType":"418","endLine":245,"endColumn":11,"suggestions":"495"},{"ruleId":"397","severity":1,"message":"401","line":272,"column":42,"nodeType":"399","messageId":"400","endLine":272,"endColumn":44},{"ruleId":"480","severity":1,"message":"481","line":70,"column":5,"nodeType":"482","messageId":"400","endLine":70,"endColumn":21},{"ruleId":"389","severity":1,"message":"496","line":205,"column":16,"nodeType":"391","messageId":"392","endLine":205,"endColumn":21},{"ruleId":"389","severity":1,"message":"491","line":205,"column":23,"nodeType":"391","messageId":"392","endLine":205,"endColumn":31},{"ruleId":"389","severity":1,"message":"497","line":208,"column":33,"nodeType":"391","messageId":"392","endLine":208,"endColumn":51},{"ruleId":"389","severity":1,"message":"498","line":251,"column":8,"nodeType":"391","messageId":"392","endLine":251,"endColumn":18},{"ruleId":"397","severity":1,"message":"398","line":253,"column":26,"nodeType":"399","messageId":"400","endLine":253,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":256,"column":21,"nodeType":"391","messageId":"427","endLine":256,"endColumn":36},{"ruleId":"397","severity":1,"message":"398","line":319,"column":26,"nodeType":"399","messageId":"400","endLine":319,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":322,"column":21,"nodeType":"391","messageId":"427","endLine":322,"endColumn":36},{"ruleId":"397","severity":1,"message":"398","line":418,"column":28,"nodeType":"399","messageId":"400","endLine":418,"endColumn":30},{"ruleId":"411","severity":1,"message":"412","line":442,"column":25,"nodeType":"413","messageId":"414","endLine":442,"endColumn":27},{"ruleId":"397","severity":1,"message":"398","line":444,"column":21,"nodeType":"399","messageId":"400","endLine":444,"endColumn":23},{"ruleId":"389","severity":1,"message":"499","line":459,"column":7,"nodeType":"391","messageId":"392","endLine":459,"endColumn":14},{"ruleId":"397","severity":1,"message":"398","line":473,"column":26,"nodeType":"399","messageId":"400","endLine":473,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":476,"column":21,"nodeType":"391","messageId":"427","endLine":476,"endColumn":36},{"ruleId":"416","severity":1,"message":"428","line":650,"column":11,"nodeType":"413","endLine":702,"endColumn":2},{"ruleId":"397","severity":1,"message":"401","line":656,"column":39,"nodeType":"399","messageId":"400","endLine":656,"endColumn":41},{"ruleId":"416","severity":1,"message":"500","line":702,"column":4,"nodeType":"418","endLine":702,"endColumn":6,"suggestions":"501"},{"ruleId":"397","severity":1,"message":"401","line":712,"column":29,"nodeType":"399","messageId":"400","endLine":712,"endColumn":31},{"ruleId":"489","severity":1,"message":"490","line":817,"column":9,"nodeType":"407","endLine":817,"endColumn":78},{"ruleId":"411","severity":1,"message":"412","line":22,"column":22,"nodeType":"413","messageId":"414","endLine":22,"endColumn":24},{"ruleId":"411","severity":1,"message":"412","line":26,"column":34,"nodeType":"413","messageId":"414","endLine":26,"endColumn":36},{"ruleId":"411","severity":1,"message":"412","line":37,"column":34,"nodeType":"413","messageId":"414","endLine":37,"endColumn":36},{"ruleId":"411","severity":1,"message":"412","line":52,"column":38,"nodeType":"413","messageId":"414","endLine":52,"endColumn":40},{"ruleId":"411","severity":1,"message":"412","line":55,"column":54,"nodeType":"413","messageId":"414","endLine":55,"endColumn":56},{"ruleId":"389","severity":1,"message":"422","line":3,"column":32,"nodeType":"391","messageId":"392","endLine":3,"endColumn":36},{"ruleId":"389","severity":1,"message":"492","line":4,"column":8,"nodeType":"391","messageId":"392","endLine":4,"endColumn":13},{"ruleId":"389","severity":1,"message":"502","line":108,"column":8,"nodeType":"391","messageId":"392","endLine":108,"endColumn":20},{"ruleId":"389","severity":1,"message":"424","line":109,"column":8,"nodeType":"391","messageId":"392","endLine":109,"endColumn":17},{"ruleId":"389","severity":1,"message":"483","line":111,"column":8,"nodeType":"391","messageId":"392","endLine":111,"endColumn":13},{"ruleId":"389","severity":1,"message":"484","line":111,"column":15,"nodeType":"391","messageId":"392","endLine":111,"endColumn":23},{"ruleId":"389","severity":1,"message":"503","line":182,"column":10,"nodeType":"391","messageId":"392","endLine":182,"endColumn":25},{"ruleId":"389","severity":1,"message":"504","line":203,"column":7,"nodeType":"391","messageId":"392","endLine":203,"endColumn":28},{"ruleId":"389","severity":1,"message":"505","line":210,"column":7,"nodeType":"391","messageId":"392","endLine":210,"endColumn":28},{"ruleId":"397","severity":1,"message":"398","line":241,"column":22,"nodeType":"399","messageId":"400","endLine":241,"endColumn":24},{"ruleId":"425","severity":1,"message":"488","line":244,"column":17,"nodeType":"391","messageId":"427","endLine":244,"endColumn":32},{"ruleId":"397","severity":1,"message":"398","line":341,"column":44,"nodeType":"399","messageId":"400","endLine":341,"endColumn":46},{"ruleId":"425","severity":1,"message":"506","line":387,"column":13,"nodeType":"391","messageId":"427","endLine":387,"endColumn":21},{"ruleId":"397","severity":1,"message":"401","line":411,"column":31,"nodeType":"399","messageId":"400","endLine":411,"endColumn":33},{"ruleId":"416","severity":1,"message":"428","line":476,"column":15,"nodeType":"413","endLine":495,"endColumn":6},{"ruleId":"416","severity":1,"message":"507","line":495,"column":8,"nodeType":"418","endLine":495,"endColumn":15,"suggestions":"508"},{"ruleId":"397","severity":1,"message":"401","line":522,"column":47,"nodeType":"399","messageId":"400","endLine":522,"endColumn":49},{"ruleId":"397","severity":1,"message":"401","line":531,"column":62,"nodeType":"399","messageId":"400","endLine":531,"endColumn":64},{"ruleId":"397","severity":1,"message":"401","line":559,"column":70,"nodeType":"399","messageId":"400","endLine":559,"endColumn":72},{"ruleId":"397","severity":1,"message":"401","line":560,"column":71,"nodeType":"399","messageId":"400","endLine":560,"endColumn":73},{"ruleId":"431","severity":1,"message":"432","line":583,"column":78,"nodeType":"433","messageId":"434","endLine":583,"endColumn":79,"fix":"509"},{"ruleId":"431","severity":1,"message":"432","line":663,"column":50,"nodeType":"433","messageId":"434","endLine":663,"endColumn":51,"fix":"510"},{"ruleId":"389","severity":1,"message":"511","line":17,"column":8,"nodeType":"391","messageId":"392","endLine":17,"endColumn":22},{"ruleId":"389","severity":1,"message":"512","line":19,"column":9,"nodeType":"391","messageId":"392","endLine":19,"endColumn":22},{"ruleId":"389","severity":1,"message":"513","line":19,"column":23,"nodeType":"391","messageId":"392","endLine":19,"endColumn":46},{"ruleId":"480","severity":1,"message":"481","line":71,"column":5,"nodeType":"482","messageId":"400","endLine":71,"endColumn":21},{"ruleId":"389","severity":1,"message":"514","line":208,"column":16,"nodeType":"391","messageId":"392","endLine":208,"endColumn":24},{"ruleId":"389","severity":1,"message":"515","line":208,"column":26,"nodeType":"391","messageId":"392","endLine":208,"endColumn":37},{"ruleId":"389","severity":1,"message":"497","line":209,"column":33,"nodeType":"391","messageId":"392","endLine":209,"endColumn":51},{"ruleId":"389","severity":1,"message":"516","line":212,"column":15,"nodeType":"391","messageId":"392","endLine":212,"endColumn":21},{"ruleId":"389","severity":1,"message":"517","line":213,"column":16,"nodeType":"391","messageId":"392","endLine":213,"endColumn":31},{"ruleId":"389","severity":1,"message":"518","line":213,"column":33,"nodeType":"391","messageId":"392","endLine":213,"endColumn":51},{"ruleId":"411","severity":1,"message":"412","line":250,"column":50,"nodeType":"413","messageId":"414","endLine":250,"endColumn":52},{"ruleId":"389","severity":1,"message":"519","line":318,"column":7,"nodeType":"391","messageId":"392","endLine":318,"endColumn":18},{"ruleId":"397","severity":1,"message":"398","line":330,"column":26,"nodeType":"399","messageId":"400","endLine":330,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":333,"column":21,"nodeType":"391","messageId":"427","endLine":333,"endColumn":36},{"ruleId":"389","severity":1,"message":"520","line":423,"column":7,"nodeType":"391","messageId":"392","endLine":423,"endColumn":20},{"ruleId":"397","severity":1,"message":"398","line":431,"column":26,"nodeType":"399","messageId":"400","endLine":431,"endColumn":28},{"ruleId":"425","severity":1,"message":"488","line":434,"column":21,"nodeType":"391","messageId":"427","endLine":434,"endColumn":36},{"ruleId":"397","severity":1,"message":"398","line":523,"column":28,"nodeType":"399","messageId":"400","endLine":523,"endColumn":30},{"ruleId":"416","severity":1,"message":"428","line":540,"column":11,"nodeType":"413","endLine":595,"endColumn":2},{"ruleId":"489","severity":1,"message":"490","line":705,"column":9,"nodeType":"407","endLine":705,"endColumn":78},{"ruleId":"389","severity":1,"message":"422","line":3,"column":32,"nodeType":"391","messageId":"392","endLine":3,"endColumn":36},{"ruleId":"389","severity":1,"message":"492","line":4,"column":8,"nodeType":"391","messageId":"392","endLine":4,"endColumn":13},{"ruleId":"389","severity":1,"message":"521","line":100,"column":8,"nodeType":"391","messageId":"392","endLine":100,"endColumn":15},{"ruleId":"389","severity":1,"message":"522","line":100,"column":17,"nodeType":"391","messageId":"392","endLine":100,"endColumn":27},{"ruleId":"389","severity":1,"message":"424","line":103,"column":8,"nodeType":"391","messageId":"392","endLine":103,"endColumn":17},{"ruleId":"389","severity":1,"message":"523","line":104,"column":8,"nodeType":"391","messageId":"392","endLine":104,"endColumn":16},{"ruleId":"389","severity":1,"message":"483","line":105,"column":8,"nodeType":"391","messageId":"392","endLine":105,"endColumn":13},{"ruleId":"389","severity":1,"message":"484","line":105,"column":15,"nodeType":"391","messageId":"392","endLine":105,"endColumn":23},{"ruleId":"389","severity":1,"message":"524","line":120,"column":8,"nodeType":"391","messageId":"392","endLine":120,"endColumn":18},{"ruleId":"397","severity":1,"message":"398","line":200,"column":22,"nodeType":"399","messageId":"400","endLine":200,"endColumn":24},{"ruleId":"425","severity":1,"message":"488","line":203,"column":17,"nodeType":"391","messageId":"427","endLine":203,"endColumn":32},{"ruleId":"397","severity":1,"message":"398","line":265,"column":44,"nodeType":"399","messageId":"400","endLine":265,"endColumn":46},{"ruleId":"425","severity":1,"message":"506","line":306,"column":25,"nodeType":"391","messageId":"427","endLine":306,"endColumn":33},{"ruleId":"425","severity":1,"message":"506","line":309,"column":25,"nodeType":"391","messageId":"427","endLine":309,"endColumn":33},{"ruleId":"397","severity":1,"message":"401","line":332,"column":31,"nodeType":"399","messageId":"400","endLine":332,"endColumn":33},{"ruleId":"425","severity":1,"message":"506","line":385,"column":13,"nodeType":"391","messageId":"427","endLine":385,"endColumn":21},{"ruleId":"389","severity":1,"message":"442","line":386,"column":17,"nodeType":"391","messageId":"392","endLine":386,"endColumn":27},{"ruleId":"425","severity":1,"message":"506","line":398,"column":21,"nodeType":"391","messageId":"427","endLine":398,"endColumn":29},{"ruleId":"389","severity":1,"message":"442","line":400,"column":29,"nodeType":"391","messageId":"392","endLine":400,"endColumn":39},{"ruleId":"425","severity":1,"message":"506","line":409,"column":21,"nodeType":"391","messageId":"427","endLine":409,"endColumn":29},{"ruleId":"389","severity":1,"message":"442","line":411,"column":25,"nodeType":"391","messageId":"392","endLine":411,"endColumn":35},{"ruleId":"397","severity":1,"message":"398","line":438,"column":22,"nodeType":"399","messageId":"400","endLine":438,"endColumn":24},{"ruleId":"416","severity":1,"message":"428","line":451,"column":15,"nodeType":"413","endLine":476,"endColumn":6},{"ruleId":"416","severity":1,"message":"525","line":476,"column":8,"nodeType":"418","endLine":476,"endColumn":18,"suggestions":"526"},{"ruleId":"397","severity":1,"message":"398","line":543,"column":90,"nodeType":"399","messageId":"400","endLine":543,"endColumn":92},"no-native-reassign",["527"],"no-negated-in-lhs",["528"],"no-unused-vars","'UsuarioProvider' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'setmatch' is assigned a value but never used.","'usuario' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Etiquetas' is defined but never used.","'LinearProgress' is defined but never used.","'purple' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ActualizarPaper' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'llamarEtiquetas', 'props.history', and 'props.match.params'. Either include them or remove the dependency array.","ArrayExpression",["529"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Grid' is defined but never used.","'useHistory' is defined but never used.","'etiquetas' is assigned a value but never used.","no-redeclare","'consult' is already defined.","redeclared","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'buscaretiquetas', 'recientes', and 'valorados'. Either include them or remove the dependency array.",["530"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"531","text":"532"},"React Hook useEffect has missing dependencies: 'agregarEtiquetas' and 'props.history'. Either include them or remove the dependency array.",["533"],"'removerEtiqueta' is assigned a value but never used.","'editarTodolosPapers' is assigned a value but never used.","'buscarPaperEdit' is assigned a value but never used.","'editaPaper' is assigned a value but never used.","'nuevaLista' is assigned a value but never used.","'nuevasEtiquetas' is assigned a value but never used.",{"range":"534","text":"535"},"'papermatch' is assigned a value but never used.","'fade' is defined but never used.","'Icon' is defined but never used.","'scroll' is defined but never used.","'AccountCircle' is defined but never used.","'TextField' is defined but never used.","'InputAdornment' is defined but never used.","'seturl' is assigned a value but never used.","'titulo' is assigned a value but never used.","'settitulo' is assigned a value but never used.","'trimmedStringdos' is already defined.","'prueba' is assigned a value but never used.",{"range":"536","text":"537"},"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["538"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'lista' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'PostAddIcon' is defined but never used.","'LabelIcon' is defined but never used.","'prueba2' is assigned a value but never used.","'setprueba2' is assigned a value but never used.","'prueba1' is assigned a value but never used.","'setprueba1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'recorrertag'. Either include it or remove the dependency array.",["539"],"'id' is assigned a value but never used.","'setRef' is defined but never used.","'Alert' is defined but never used.","no-dupe-keys","Duplicate key '& .botoneditar'.","ObjectExpression","'paper' is assigned a value but never used.","'setpaper' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pedirpaper'. Either include it or remove the dependency array.",["540"],"'updateTag' is assigned a value but never used.","'antiguoHaVotado' is already defined.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'setvalor' is assigned a value but never used.","'Paper' is defined but never used.","'buscaretiquetasdos' is assigned a value but never used.","'armarpaper' is assigned a value but never used.",["541"],"'valor' is assigned a value but never used.","'setcargandoCorazon' is assigned a value but never used.","'megustados' is assigned a value but never used.","'megusta' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cargarListaDos', 'props.changeLike.cambio', 'props.changeLike.idEtiqueta', 'props.etiquetas', and 'props.id'. Either include them or remove the dependency array.",["542"],"'etiquetarray' is assigned a value but never used.","'manejarSnapshot' is defined but never used.","'armarconsultrecientes' is assigned a value but never used.","'armarconsultvalorados' is assigned a value but never used.","'consulta' is already defined.","React Hook useEffect has missing dependencies: 'buscaretiquetas' and 'listaconid'. Either include them or remove the dependency array.",["543"],{"range":"544","text":"545"},{"range":"546","text":"547"},"'ExpandMoreIcon' is defined but never used.","'RetornarPaper' is defined but never used.","'RenovarPaperMapEtiqueta' is defined but never used.","'cargando' is assigned a value but never used.","'setcargando' is assigned a value but never used.","'tamaño' is assigned a value but never used.","'ultimoDocumento' is assigned a value but never used.","'setultimoDocumento' is assigned a value but never used.","'megustatres' is assigned a value but never used.","'megustacuatro' is assigned a value but never used.","'elvalor' is assigned a value but never used.","'setelvalor' is assigned a value but never used.","'pedirmas' is assigned a value but never used.","'paperArray' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listaconid'. Either include it or remove the dependency array.",["548"],"no-global-assign","no-unsafe-negation",{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},[5837,5859],"\n                    .",{"desc":"553","fix":"554"},[16680,16710],"\n                            .",[7083,7092],"\n       .",{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"551","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},[14084,14138],"\n                                                    .",[17807,17833],"\n                        .",{"desc":"566","fix":"567"},"Update the dependencies array to be: [errores, llamarEtiquetas, props.history, props.match.params, usuario]",{"range":"568","text":"569"},"Update the dependencies array to be: [buscaretiquetas, props, recientes, valorados]",{"range":"570","text":"571"},"Update the dependencies array to be: [agregarEtiquetas, props.history, usuario]",{"range":"572","text":"573"},"Update the dependencies array to be: [usuario, url, history.location.pathname, history]",{"range":"574","text":"575"},"Update the dependencies array to be: [props, recorrertag]",{"range":"576","text":"577"},"Update the dependencies array to be: [props.recientes, props.paperid, pedirpaper]",{"range":"578","text":"579"},{"range":"580","text":"571"},"Update the dependencies array to be: [cargarListaDos, props.changeLike.cambio, props.changeLike.idEtiqueta, props.etiquetas, props.id]",{"range":"581","text":"582"},"Update the dependencies array to be: [buscaretiquetas, listaconid, props]",{"range":"583","text":"584"},"Update the dependencies array to be: [props, id, listaconid]",{"range":"585","text":"586"},[20266,20283],"[errores, llamarEtiquetas, props.history, props.match.params, usuario]",[3878,3885],"[buscaretiquetas, props, recientes, valorados]",[3045,3054],"[agregarEtiquetas, props.history, usuario]",[8342,8381],"[usuario, url, history.location.pathname, history]",[1611,1618],"[props, recorrertag]",[14180,14211],"[props.recientes, props.paperid, pedirpaper]",[4191,4198],[15445,15447],"[cargarListaDos, props.changeLike.cambio, props.changeLike.idEtiqueta, props.etiquetas, props.id]",[10577,10584],"[buscaretiquetas, listaconid, props]",[11915,11925],"[props, id, listaconid]"]
[{"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/index.js":"1","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/App.js":"2","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/reportWebVitals.js":"3","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/UsuarioContext.jsx":"4","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provider/TemaConfig.js":"5","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Login.jsx":"6","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetastres.jsx":"7","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdmEtiquetas.jsx":"8","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Nosotros.jsx":"9","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearPaper.jsx":"10","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetascuatro.jsx":"11","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearCuenta.jsx":"12","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/inicio.jsx":"13","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/appbar.jsx":"14","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/useAutenticado.jsx":"15","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/firebase.js":"16","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/PaperDoc.js":"17","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Papertres.jsx":"18","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AutoCompletarTres.jsx":"19","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Etiquetas.jsx":"20","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paper.jsx":"21","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Caja.jsx":"22","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/BotonFlotante.jsx":"23","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/config.js":"24","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/Funciones.js":"25","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Search.jsx":"26","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/CajaBusqueda.jsx":"27","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Usuarios.jsx":"28","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/FuncionesFirebase.js":"29","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/index.js":"30","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/context.js":"31","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/ListarComentarios.jsx":"32","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Comentario.jsx":"33","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdministrarNosotros.jsx":"34","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/TextoEditor.jsx":"35","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Colaboraciones.jsx":"36"},{"size":608,"mtime":1615496437395,"results":"37","hashOfConfig":"38"},{"size":4408,"mtime":1627181907488,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1611457257907,"results":"40","hashOfConfig":"38"},{"size":374,"mtime":1615487440284,"results":"41","hashOfConfig":"38"},{"size":711,"mtime":1627069227541,"results":"42","hashOfConfig":"38"},{"size":9553,"mtime":1626142200047,"results":"43","hashOfConfig":"38"},{"size":20863,"mtime":1627147906501,"results":"44","hashOfConfig":"38"},{"size":19180,"mtime":1622305297191,"results":"45","hashOfConfig":"38"},{"size":2720,"mtime":1625636937237,"results":"46","hashOfConfig":"38"},{"size":36103,"mtime":1624248031886,"results":"47","hashOfConfig":"38"},{"size":18607,"mtime":1626136527195,"results":"48","hashOfConfig":"38"},{"size":8688,"mtime":1623562091334,"results":"49","hashOfConfig":"38"},{"size":1262,"mtime":1623022762654,"results":"50","hashOfConfig":"38"},{"size":26037,"mtime":1627194303592,"results":"51","hashOfConfig":"38"},{"size":2599,"mtime":1623556758830,"results":"52","hashOfConfig":"38"},{"size":1669,"mtime":1625714466876,"results":"53","hashOfConfig":"38"},{"size":2153,"mtime":1621674997219,"results":"54","hashOfConfig":"38"},{"size":26855,"mtime":1627182141705,"results":"55","hashOfConfig":"38"},{"size":3557,"mtime":1624228720630,"results":"56","hashOfConfig":"38"},{"size":1368,"mtime":1615771018382,"results":"57","hashOfConfig":"38"},{"size":9536,"mtime":1619022171417,"results":"58","hashOfConfig":"38"},{"size":43962,"mtime":1627193381835,"results":"59","hashOfConfig":"38"},{"size":930,"mtime":1621886611394,"results":"60","hashOfConfig":"38"},{"size":830,"mtime":1626136727728,"results":"61","hashOfConfig":"38"},{"size":688,"mtime":1623882064766,"results":"62","hashOfConfig":"38"},{"size":1637,"mtime":1623362763669,"results":"63","hashOfConfig":"38"},{"size":45716,"mtime":1627102064563,"results":"64","hashOfConfig":"38"},{"size":9434,"mtime":1625707270788,"results":"65","hashOfConfig":"38"},{"size":1174,"mtime":1625958710824,"results":"66","hashOfConfig":"38"},{"size":125,"mtime":1597375456000,"results":"67","hashOfConfig":"38"},{"size":112,"mtime":1612113969878,"results":"68","hashOfConfig":"38"},{"size":4918,"mtime":1625706894670,"results":"69","hashOfConfig":"38"},{"size":2597,"mtime":1623972999755,"results":"70","hashOfConfig":"38"},{"size":5948,"mtime":1625907972611,"results":"71","hashOfConfig":"38"},{"size":1131,"mtime":1625676074167,"results":"72","hashOfConfig":"38"},{"size":4925,"mtime":1626025938413,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"ipoow4",{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":1,"source":"131","usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"76"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"76"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"76"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"169","usedDeprecatedRules":"76"},"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/index.js",[],["170","171"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/App.js",["172","173","174","175","176"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/reportWebVitals.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/UsuarioContext.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provider/TemaConfig.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Login.jsx",["177","178","179","180","181","182","183","184","185","186","187","188"],"import React,{useState,useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Firebase from \"../firebase/firebase\"\nimport Google from '../../src/google.png'\nimport Swal from 'sweetalert2'\n\n\nfunction Copyright() {\n\n\n    \n\n\n\n\n\n\n\n\n\n\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" >\n      Planetcolab\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '92vh',\n\n  \"& body\":{\n    backgroundColor:\"#ffffff\"\n  },\n   \n\n    \" & .submit\": {\n      margin: theme.spacing(5, 0, 2),\n      background:\"#ffffff\",\n      color:\"#000000\"\n    },\n    \" & .MuiButton-containedPrimary:hover\" :{\n      backgroundColor: \"#303f9f00\",\n      color:\"#5fcccf\",\n      border:\"1px solid\"\n  },\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\"#ffffff\",\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(1, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  botonGoogle:{\n    background:\"#ffffff\",\n    color:\"#000000\"\n  },\n  imagenGoogle:{\n    margin:\"12px\"\n  }\n\n}));\n\nexport default function SignInSide(props) {\n\n\n\n\n  const [recuerdame, setrecuerdame] = useState({\n    recuerdame:false\n  })\n\n  const [user, setuser] = useState({\n    email:\"\",\n   password:\"\" \n\n  })\n  const [errores, seterrores] = useState({\n    email:null,\n    password:null\n\n  })\n\n  const classes = useStyles();\n\n\n\n  const handleChangeCheck=(e)=>{\n   \n\n        if(e.target.checked==false){\n\n          localStorage.clear()\n        }\n\n\n      setrecuerdame({\n        [e.target.name]:e.target.checked\n\n      })\n\n\n}\n\n\n\n\n  const handleChange=e=>{\n      e.preventDefault()\n        setuser({\n          ...user,[e.target.name]:e.target.value\n\n        })\n\n\n  }\n\n\n  const validar=()=>{\n\n      let err={}\n\n      if(user.email==\"\"){\n          err.email=\"debes ingresar un usuario\"\n      }else{ \n      \n            if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(user.email) ) {\n              err.email= \"Email no válido\"\n            }\n        }\n      if(user.password==\"\"){\n        err.password=\"debes ingresar una contraseña\"\n      }\n\n\n        return err\n\n  }\n\n  const iniciarCorreoGmail=()=>{\n       // alert(\"paso por el boton\")\n       Firebase.registrarCorreo()\n       props.history.push(\"/\")\n      \n       \n   }\n\n\n\n  const iniciarSesion=async()=>{\n    let err=validar()\n    seterrores(err)\n\n    if(Object.keys(err).length){\n\n       \n\n    }else{\n\n      try{\n      await Firebase.login(user)\n       recordar()\n        props.history.push(\"/\")\n\n      }catch(error){\n\n        console.log(error.code)\n\n        if(error.code==\"auth/wrong-password\"){\n\n          Swal.fire({\n            title:\"Error\",\n            text:\"contraseña invalida\",\n            icon:\"error\",\n            confirmButtonColor:'#21cbce',\n        })\n  \n  \n        }\n  \n\n\n        if(error.code==\"auth/user-not-found\"){\n\n          Swal.fire({\n            title:\"La cuenta no existe\",\n            icon:\"error\"\n        })\n\n        }\n      }\n    \n    \n\n    }\n\n\n  }\n\n  const recordar =()=>{\n\n      if(recuerdame.recuerdame==true){\n\n           localStorage.user=user.email\n           localStorage.password=user.password\n           localStorage.recuerdame=recuerdame.recuerdame\n\n\n      }else{\n\n        localStorage.clear()\n      }\n\n  }\n\nconst recuperarContrasena=async()=>{\n\n   await Swal.fire({\n    title: 'Recuperar contraseña',\n    input: 'text',\n    confirmButtonColor: '#21cbce',\n    \n    inputPlaceholder: 'Ingrese su  correo',\n    preConfirm: async(login) => {\n      \n      try {\n\n        if(login==\"\"){\n       \n          Swal.showValidationMessage(\n            `Debe ingresar un correo`\n          )\n  \n       \n      }else{ \n        \n        if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(login) ) {\n          Swal.showValidationMessage(\n            `Correo invalido`\n          )\n  \n        }else{\n              console.log(\"hola mundo\")\n          await Firebase.auth.sendPasswordResetEmail(login).then((prueba)=>{\n                  console.log(prueba)\n                  return {\n                    resultado:\"correoenviado\"\n                  }\n\n          }).catch(error=>{ \n            console.log(error)\n          })\n        }\n\n\n\n        }\n        \n      } catch (error) {\n        console.log(error)\n      }\n     \n  \n  \n  \n  },\n    allowOutsideClick: () => !Swal.isLoading()\n  }).then((result) => {\n    \n\n    if (result.isConfirmed) {\n      Swal.fire({\n        title: `correo enviado`,\n        icon:  `success`\n      })\n    }\n  \n  })\n   \n  \n\n\n}\n\n\n useEffect(() => {\n            let prueba={\n              email:\"\",\n              password:\"\"\n            }\n      \n         if(localStorage.user!=undefined){\n       \n                  prueba.email=localStorage.user\n           \n         }\n         if(localStorage.password!=undefined){\n          \n              prueba.password=localStorage.password\n         }\n\n          if(localStorage.recuerdame!=undefined){\n          setrecuerdame({recuerdame:localStorage.recuerdame})\n       }\n     \n       \n\n\n\n      \n        setuser(prueba)\n\n\n \n }, [])\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n         \n        <Avatar className={classes.avatar}>\n            <LockOutlinedIcon color=\"secondary\" />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n          </Typography>\n          <div className={classes.form} >\n\n\n            {errores.email?\n            \n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n           \n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              autoComplete=\"email\"\n           \n              error\n              id=\"standard-error\" \n              helperText={errores.email}\n            />:\n            <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            onChange={handleChange}\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email address\"\n            name=\"email\"\n            autoComplete=\"email\"\n          \n            value={user.email}\n          />\n            }\n\n\n\n\n            {errores.password?\n\n<TextField\nvariant=\"outlined\"\nmargin=\"normal\"\nrequired\nfullWidth\nname=\"password\"\nlabel=\"Password\"\ntype=\"password\"\nid=\"password\"\nautoComplete=\"current-password\"\nerror\nid=\"standard-error\" \nonChange={handleChange}\nhelperText={errores.password}\n/>\n            \n          :\n          <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          onChange={handleChange}\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={user.password}\n        />\n\n\n\n          \n          }\n          \n            <FormControlLabel\n              control={<Checkbox  checked={recuerdame.recuerdame} name=\"recuerdame\" onChange={handleChangeCheck} value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={()=>iniciarSesion()}\n            >\n              Sign In\n            </Button>\n\n            <Button\n             \n             fullWidth\n             variant=\"contained\"\n             \n             className=\"submit\"\n             onClick={()=>iniciarCorreoGmail()}\n\n\n           >\n\n             <img className={classes.imagenGoogle} src ={Google} height=\"25\" />\n             login with google\n           </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link onClick={()=> recuperarContrasena()} variant=\"body2\">\n                  Forgot you password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link  href=\"/crearcuenta\"  variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </div>\n           \n        \n           \n        \n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetastres.jsx",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdmEtiquetas.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237"],"import React, { useEffect,useState ,useContext} from 'react'\nimport { Grid, Typography,IconButton, makeStyles,CircularProgress, TextField, Button, Paper } from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Firebase from \"../firebase/firebase\"\nimport Swal  from \"sweetalert2\"\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport {actualizarVariosPaper,ActualizarVariosEtiquetas} from '../Funciones/PaperDoc'\n\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\nconst useStyles=makeStyles((theme)=>({\n\n\n    root:{\n        marginTop:\"100px\",\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n    },\n\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        \n        },\n        divCircular:{\n            margin:\"100px  auto auto auto\"\n    \n        },\n        divAgregar:{\n\n            width:\"100%\",\n            margin:\"0px auto 100px auto\"\n        },\n        formAgregar:{\n\n            display:\"block\",\n            margin:\"auto\",\n            width:\"360px\",\n            [theme.breakpoints.down(\"xs\")]:\n            {\n              \n            }\n        },\n\n\n    \n        buttonAgregar:{\n            margin:\"0px 30px\",\n            padding:\"14px\",\n            [theme.breakpoints.down(\"xs\")]:\n            {\n                width:\"100%\",\n                margin:\"10px auto\",\n                padding:\"14px\"\n            }\n\n        },\n        textoAgregar:{\n            [theme.breakpoints.down(\"xs\")]:\n            {\n                width:\"100%\",\n                margin:\"10px auto\",\n                padding:\"unset\"\n            }\n        },\n        paperEstilo:{\n            width: \"100%\",\n    margin: \"30px 0px\",\n    padding: \"14px\",\n    color: \"#21cbce\",\n    border: \"1px solid #21cbce\",\n        }\n    ,botonEditar:{\n        color:\"\"\n    }\n    ,textNoDisponible:{\n\n\n        fontFamily:\"Nunito\",\n        color:\"#808080\"\n\n\n\n\n}\n\n    \n    })) \n\n\n\nconst AdmEtiquetas = (props) => {\nconst clases=useStyles()\n\nconst [etiquetas, setetiquetas] = useState([])\nconst [errores, seterrores] = useState({\n    descripcion:null\n})\nconst [cargando, setcargando] = useState(false)\nconst [tag, settag] = useState({\n    descripcion:\"\"\n})\n\nconst usuario=useContext(UsuarioContext)\n\n\n\n\n\n\n\n\n\n\nuseEffect(() => {\n\n\n\n         // validar usuario administrador\n         \n            //  colocar  el cargando en vscode \n\n            setcargando(true)\n\n            //conocer el estado  del usuario \n            console.log(usuario)\n            if(usuario==null){\n                props.history.push(\"/\")\n\n            }else{\n                \n                if(!usuario.administrador){\n                    props.history.push(\"/\")\n                }\n            }\n     \n\n    agregarEtiquetas()\n \n   \n   \n}, [usuario])\n    \n\nconst handleChange=(e)=>{\n\n    e.preventDefault()\n\n    settag({...tag,[e.target.name]:e.target.value})\n}\n\nconst guardarEtiqueta=async()=>{\n\n    setcargando(true)\n    if(tag.descripcion){\n\n            let coincide=false\n\n            etiquetas.map(doc=>{\n\n                if(doc.descripcion==tag.descripcion){\n                    coincide=true\n                }\n            })\n\n        // buscar si esa etiqueta ya existe\n            if(coincide){\n\n                Swal.fire({\n                    icon:\"info\",\n                    title:\"Ese registro ya esta disponible\"\n                  })\n            }else{\n                Firebase.db.collection(\"etiquetas\").add({...tag,contar:0\n                    }).then(()=>{\n                   \n                    Swal.fire({\n                        icon:\"success\",\n                        title:\"Guardado Correctamente\"\n                    })\n      \n    }\n       ).catch(()=>{\n           Swal.fire({\n        icon:\"error\",\n        title:\"Ha ocurrido un error intentalo mas tarde\"\n    })\n  \n}\n    \n    )\n\n \n}\n    }else{\n       \n        seterrores({...errores,descripcion:\"debes ingresar un valor\"})\n        setcargando(false)  \n    }\n\n    \n    settag({\n        descripcion:\"\"\n    })\n}\n\nconst agregarEtiquetas=async()=>{\n\n    await Firebase.db.collection(\"etiquetas\").onSnapshot(manejarSnapshot)\n  \n}\n\nfunction manejarSnapshot(snapshot){\n    const  lista =snapshot.docs.map(doc=>{\n        \n        return{\n            id:doc.id,\n            ...doc.data()\n        }\n       \n    })\n        \n    setcargando(false)\n    setetiquetas(lista)   \n}\n\n\nconst borrarEtiquetas=async(valor)=>{\n\n        Swal.fire({\n               title:\"¿esta seguro que desea borrar el registro?\",\n               text:`${valor.descripcion}`,\n               showCancelButton:\"true\",\n               cancelButtonText:\"Cancelar\",\n               confirmButtonText:\"Borrar\",\n               confirmButtonColor: '#21cbce',\n               cancelButtonColor: '#d33',\n               \n\n\n        }).then(async(result)=>{\n            if(result.isConfirmed){\n                setcargando(true)\n\n\n                //buscar todos los registros con esa etiqueta\n\n\n                //buscarPapers(valor)\n\n                console.log(\"paso por aca \")\n                \n\n                 let nuevalista=await  Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").get()\n                  \n                 let nuevalistados=nuevalista.docs.map((doc)=>{\n                            return {\n                                id:doc.id,...doc.data()\n                            }\n\n                 })\n            \n                 console.log(nuevalistados)\n                 //remover la etiqueta a los paper\n                 //recorriendo los paper\n                 nuevalistados.map(async (doc)=>{\n                        // nueva variable donde guardare la nueva coleccion  etiqueta\n\n                        let tag=[]\n                        //mapeando etiqueta de cada paper\n                         doc.etiquetas.map(docdos=>\n                            {   \n                                // buscar la etiqueta que es igual a la borrada\n                                console.log(docdos)\n                                // guardar la coleccion de etiquetas diferentes \n                                if(docdos.id!=valor.id){\n                                    tag.push(docdos)\n                                }\n\n\n                            }\n                            )\n                            console.log(tag)\n\n                            //armar el nuevo objeto \n\n                            let nuevoObjeto={...doc,etiquetas:tag}\n                            console.log(nuevoObjeto)\n                            //editar los papers \n                            await  Firebase.db.collection(\"paper\").doc(nuevoObjeto.id).update(nuevoObjeto).then(()=>{console.log(\"editado\")})\n                            // Borrar todos los paper en las etiquetas\n                            \n                            await Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(nuevoObjeto.id).delete().then((test1)=>{console.log(\"borrado\")}).catch((error)=>{console.log(error)})\n\n\n                await  Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").get().then((test)=>{\n                   \n                \n\n               })\n\n\n\n    \n\n                        })\n\n\n\n\n\n                 //borrar la etiqueta\n                 \n                 \n               await Firebase.db.collection(\"etiquetas\").doc(valor.id).delete().then((respuesta)=>{\n\n\n\n\n                Swal.fire({\n                    title:\"Borrado Correctamente\",\n                    icon:\"success\",\n                    confirmButtonColor: '#21cbce',\n                    \n                }).then(()=>{\n                    setcargando(false)\n                })\n\n                \n         \n        }).catch((error) =>{console.log(error)})\n    \n\n            }})\n        }\n\n\nconst removerEtiqueta=(antiguo,chips)=>{\n\n\n\n         \n    let nuevoPaper=[]\n\n    antiguo.map(async(valor)=>{\n\n          \n        let nuevochips=[]\n            \n            var tag=valor.etiquetas\n\n            tag.map((t)=>{\n                   \n                if(t!=chips.descripcion){\n                  \n                            nuevochips.push(t)\n\n                }\n\n\n            })\n\n                \n                valor.etiquetas=nuevochips\n            \n                \n                // editar paper \n                await Firebase.db.collection(\"paper\").doc(valor.id).update(valor).then(()=>{\n\n                    nuevoPaper.push(valor)\n\n                }).catch((error) =>{\n                    console.log(error)\n                })\n\n                 \n\n\n\n                console.log(valor)\n            \n            \n\n\n\n\n    })\n\n\n    console.log(nuevoPaper)\n}\n\n\nconst  editarTodolosPapers=async(papersantiguo,tagEtiq,descripcionNew)=>{\n\n\n  \n    papersantiguo.map(async(paper)=>{\n        let nuevosTags=[]\n\n        paper.etiquetas.map((tag)=>{\n\n                        if(tag==tagEtiq.descripcion){\n                                nuevosTags.push(descripcionNew)\n                        }else{\n                        nuevosTags.push(tag)\n                        }\n\n\n\n\n        })\n\n\n\n        paper.etiquetas=nuevosTags\n        \n\n        await Firebase.db.collection(\"etiquetas\").doc(tagEtiq.id).collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n\n            console.log(\"ok\")\n\n         }).catch((error) =>{\n             console.log(error)\n         })\n         await Firebase.db.collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n\n                   console.log(\"ok\")\n\n                }).catch((error) =>{\n                    console.log(error)\n                })\n\n\n\n    })\n\n\n\n\n\n}\n\n\n const buscarPaperEdit =async(valor)=>{\n\n    console.log(valor.id)\n    var consulta = await Firebase.db.collection(\"paper\").where(\"etiquetas\", \"==\", {id:valor.id}).get()\n    var consult=consulta.docs.map(doc=>{\n \n        return {\n\n            id:doc.id,\n            ...doc.data()\n        }\n\n   \n    })\n\n    console.log(consult)\n\n    return consult\n\n }\n\n// retornar  los paper  de las etiquetas \nconst  modificarPaperdelastag=async(valor)=>{\n\n   let lista =  await Firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").get()\n    //console.log(lista)\n    let nuevaLista=lista.docs.map(doc=>{\n      //  console.log(doc.data().etiquetas)\n            \n      let nuevasTag=doc.data().etiquetas.map(docTag=>{\n\n            if(docTag.id==valor.id){\n                console.log(\"coincide\")\n                return {\n                    id:valor.id,\n                    descripcion:valor.descripcion\n                }\n\n            }else{      \n                console.log(\"no coincide\")\n                return {\n                    id:docTag.id,\n                    descripcion:docTag.descripcion\n                }\n\n\n            }\n\n\n      })\n\n      console.log(nuevasTag)\n        return {\n            id:doc.id,\n            ...doc.data(),\n            etiquetas:nuevasTag\n        }\n    })\n\n\n    return nuevaLista\n\n\n\n}\n\n\nconst editaPaper=(listaPaper,valor)=>{\n\nconsole.log(listaPaper)\n\n const nuevaLista =listaPaper.map(doc=>\n    {\n\n         let  nuevasEtiquetas=doc.etiquetas.map(docTag=>\n            {\n                    if(docTag.id==valor.id){\n                        console.log(\"coincide\")\n                    }\n            })\n\n    }\n )\n\n\n\n}\n\n\n\n\nconst editarEtiquetas=(valor)=>{\n\n    Swal.fire({\n\n        title:\"Editar Etiqueta\",\n        input:\"text\",\n        showCancelButton:\"true\",\n        cancelButtonText:\"Cancelar\",\n        confirmButtonText:\"Editar\",\n        confirmButtonColor: '#21cbce',\n        cancelButtonColor: '#d33',\n        inputValue:`${valor.descripcion}`,\n        allowOutsideClick:()=>!Swal.isLoading()\n\n    }).then(async(result)=>{\n        setcargando(true)\n        if(result.isConfirmed){\n\n\n\n            // buscar paper que tenga esa etiqueta \n\n                    // mostrar el valor \n\n                  \n                \n                    \n                     let nuevoValor={...valor,descripcion:result.value}\n\n\n\n                     let coincide=false\n\n                     etiquetas.map(doc=>{\n         \n                         if(doc.descripcion==result.value){\n                             coincide=true\n                         }\n                     })\n         \n                 // buscar si esa etiqueta ya existe\n                     if(coincide){\n         \n                         Swal.fire({\n                             icon:\"info\",\n                             title:\"Ese registro ya esta disponible\"\n                           }).then(()=>{\n                               setcargando(false)\n                           })}else{\n\n                                    const listaPaper=await modificarPaperdelastag(nuevoValor)\n                                    \n                                    // registrar  en la base de datos \n\n                                        // actualizar en los papers \n                                        actualizarVariosPaper(listaPaper)\n                                        // Actualizar los paper con las etiquetas \n                                        ActualizarVariosEtiquetas(listaPaper,nuevoValor)\n                                        //\n\n\n\n\n\n                                    // modificar  todos los paper             \n                                    // modificar todas las etiquetas con ese paper\n                                    // retorna la lista que de los papers que contienes esa etiqueta\n                                    //  var prueba =await buscarPaperEdit(valor)\n                                    //editar todos los paper de la coleccion unica y de la subcolleccion de la etiquetas\n                                //  editarTodolosPapers(prueba,valor,result.value)\n\n                                    // actualiza la etiqueta \n                                    //valor id es el id de la etiqueta\n                                await Firebase.db.collection(\"etiquetas\").doc(valor.id).update({\n                                    descripcion:result.value\n                                }).then(()=>{\n                                    Swal.fire({\n                                        title:\"Editado Correctamente\",\n                                        icon:\"success\",\n                                        confirmButtonColor: '#21cbce',\n                                      \n                                    })\n                                    setcargando(false)\n                                \n                                }).catch((error)=>{\n                                        Swal.fire({\n                                        title:\"Ha ocurrido un problema\",\n                                        icon:\"error\"\n                                                \n                                                    })})\n                                                \n                                                    setcargando(false)\n                                                }         \n                                                }else{setcargando(false)}}) \n\n\n        }\n    return (\n        <div className={clases.root}>\n\n            <Grid container>\n                <Grid xs={12} sm={1} md={1} >\n                       \n                </Grid> \n   \n                <Grid container xs={12} sm={10} md={10} >\n                        \n                        <div className={clases.divAgregar}> \n                            <div className={clases.formAgregar}>\n                                <TextField variant=\"outlined\"\n                                className={clases.textoAgregar}\n                                placeholder=\"agregar etiqueta\"\n                                name=\"descripcion\"\n                                onChange={handleChange}\n                                value={tag.descripcion}\n                               \n\n                                ></TextField>\n\n                      \n                           <Button onClick={()=>guardarEtiqueta()} className={clases.buttonAgregar} variant=\"contained\" color=\"primary\">\n                            Guardar\n                            </Button>  \n                            </div>\n\n\n                       {errores.descripcion?\n\n<Alert    style={{ margin:\"20px auto auto\",width:\"50%\"}}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,descripcion:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.descripcion}</Alert>\n\n    :\n\n<div></div>\n\n}                 \n\n                    </div>   \n                    \n                    {cargando==false?\n                    \n                    \n                    etiquetas.length!=0?\n                    \n                    etiquetas.map((valor)=>(\n\n\n\n                  \n                    <Paper   elevation ={0} className={clases.paperEstilo}>\n                     <Grid container>\n                  <Grid xs={8}>\n                      <div>\n                          <Typography align=\"center\" variant=\"h4\">\n                                        {valor.descripcion}  \n                          </Typography>\n                      </div>\n                  </Grid>\n                  <Grid container xs={4}>\n                        <Grid xs={6}>\n                             <IconButton  >\n                                <CreateIcon color=\"primary\" onClick={()=>{editarEtiquetas(valor)}}></CreateIcon>\n                            </IconButton>   \n                          \n                        </Grid>\n                        <Grid xs={6}>\n                             <IconButton   >\n                                <DeleteIcon color=\"error\" onClick={()=>{borrarEtiquetas(valor)}}></DeleteIcon>\n                            </IconButton>\n                             \n                        </Grid>    \n                  </Grid>\n                  </Grid>\n                  </Paper>\n                        )):\n                        \n\n                        <div style={{width:\"inherit\"}}>\n                        <Typography className={clases.\n                            textNoDisponible\n                             }  align=\"center\" variant=\"h4\">\n                                      No ahi registros\n                            </Typography>          \n                            </div>\n                        \n                        :\n                            \n                        <div className={clases.divCircular} >\n                                <CircularProgress className={clases.circular}></CircularProgress>\n                         </div>\n                                \n                        }\n                </Grid> \n                <Grid xs={12} sm={1} md={1} >\n                       \n                </Grid> \n   \n\n            </Grid>\n            \n        </div>\n    )\n}\n\nexport default AdmEtiquetas\n\n\n\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Nosotros.jsx",["238","239","240","241","242","243","244"],"import React,{useEffect,useState} from 'react'\nimport { makeStyles,Typography,Grid,CircularProgress } from '@material-ui/core'\nimport { convertToRaw } from 'draft-js';\nimport {  ContentState, convertFromHTML } from 'draft-js'\nimport Firebase from \"../../src/firebase/firebase\"\nimport { EditorState } from 'draft-js';\n\nconst estilos=makeStyles((theme)=>({\n\n    root:{\n            fontFamily:\"Lato\",\n            fontWeight:\"500\",\n\n           \"& .MuiTypography-body1\":{\n                marginBottom:\"1rem\",\n                fontFamily:\"Lato\"            \n\n    }, \n\n    \"& .MuiTypography-h3\":{\n        marginBottom:\"1rem\",\n        fontFamily:\"Lato\",\n        fontWeight:\"600fff\"          \n\n}, \n\n\n},\ndivCircular:{\n    marginTop:\"100px\"\n\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n}))\n\nconst Nosotros = () => {\n     const  clases=estilos()\n\n     const [titulo, settitulo] = useState()\n     const [cargando,setcargando]=useState(false)\n     const [editorState, setEditorState] = useState()\n \n\n\n\n\n     // funcion extraida \n     \n\n     useEffect(async() => {\n\n        setcargando(true)\n        const retornarObjeto=await Firebase.db.collection(\"administrarnosotros\").doc(\"configuracion\").get().then((respuesta)=>{\n            console.log(respuesta.data())\n\n            return respuesta.data()\n        })\n\n        if(retornarObjeto!=undefined){\n            \n            settitulo(retornarObjeto.title)\n            console.log(retornarObjeto.contenido)\n\n            // aca esta el problema \n            setEditorState(retornarObjeto.contenido)\n\n        }\n\n        console.log(editorState)\n        setcargando(false)\n   \n     }, [])\n    return (\n        <div  className={clases.root} style={{marginTop:\"100px\"}}>\n\n            <Grid container>\n\n\n                <Grid xs=\"2\"></Grid>\n\n                <Grid xs=\"8\">\n\n                            <Typography variant=\"h3\">\n                                {titulo}\n                            </Typography>\n\n                             {cargando?\n                                    <div className={clases.divCircular} >\n                                            <CircularProgress className={clases.circular}></CircularProgress>\n                                        </div>\n\n                                    :\n\n                                    <div dangerouslySetInnerHTML={{__html:editorState}}>\n                                    \n                                    </div>\n                             }\n                          \n\n                            \n                </Grid>\n                <Grid xs=\"2\"></Grid>\n            </Grid>\n\n\n       \n        </div>\n    )\n}\n\nexport default Nosotros\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearPaper.jsx",["245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import React,{useState,useEffect} from 'react'\n\nimport { Grid, Typography, makeStyles, Button,TextField,IconButton,CircularProgress } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\n\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport '@react-pdf-viewer/core/lib/styles/index.css';\nimport Etiquetas from '../Componetes/Etiquetas'\nimport firebase from \"../firebase/firebase\"\nimport AutocompletarTres from '../Componetes/AutoCompletarTres'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\n\n\n\nimport swal  from 'sweetalert2'\nimport { purple } from '@material-ui/core/colors';\nimport { Link } from 'react-router-dom';\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n\n  \n\n\nconst useStyles=makeStyles((theme)=>({\n\n    root:{\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n       \"& .MuiButton-containedSecondary:hover\" :{\n            backgroundColor: \"rgb(95 204 207)\",\n            color: \"#ffffff\"          \n        }\n\n\n    },\n\n    margenArriba:{\n\n        marginTop:\"100px\"\n    },\n    estilo_mensaje_informativo:{\n\n        marginTop:\"100px\",\n        color:\"#00000042\"\n    },\n\n    divFoto:{\n\n        width:\"250px\",\n        height:\"250px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\"\n    },\n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    divPrincipal:{\n        margin:\"5px\"\n    },\n    margenButton:{\n\n        margin:\"20px 0px\",\n       \n\n\n\n\n\n\n    },margenButtonDos:{\n\n        margin:\"20px 0px\",\n        padding:\"0px\"\n       \n\n\n\n\n\n        \n    },\n    divPdf:{\n    border: \"1px solid rgba(0, 0, 0, 0.3)\",\n    height:\"-webkit-fill-available\",\n    margin: \"50px auto\"\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        \n        divCircular:{\n            marginTop:\"100px\"\n    \n        },\n        divImagen:{\n       \n            height:\"160px\",\n            width:\"260px\",\n            backgroundSize:\"260px auto\",\n            position:\"relative\",\n            backgroundRepeat:\"no-repeat\",\n            border: \"2px dashed #21cbce\",\n            backgroundPosition:\"50%\",\n            borderRadius:\"0\",\n            display:\"block\",\n            margin:\"auto\",\n            marginTop:\"15px\",\n            [theme.breakpoints.down(\"sm\")]:{\n                    marginTop:\"30px\"\n            }\n        }\n   \n        \n    \n}))\n\n\n\nconst CrearPaper = (props) => {\n\n    const usuario=useContext(UsuarioContext)\n    const clases=useStyles()\n    const [imagen,setimagen]=useState({file:null,imagen:null})\n    const [etiquetas,setetiquetas]=useState([])\n    const [tag,settag]=useState([]) \n    const [cargando, setcargando] = useState(false)\n    const [mensaje_informativo,set_mensaje_informativo]=useState(\"\")\n    let [paper, setpaper] = useState({\n        imagen:null,\n        pdf:null,\n        subida: null,\n        likes:0,\n        etiquetas:[],\n        titulo:\"\",\n        resumen:\"\"\n\n    })\n    const [id, setid] = useState()\n    const [errores, seterrores] = useState({\n\n        titulo:null,\n        resumen:null,\n        pdf:null\n\n    })\n    const [pdf,setpdf]=useState({file:null,pdf:null})\n    const [link, setLink] = useState()\n\n\n //seleccionar el archivo \n    const seleccionarArchivo=imagen=>{\n       \n            \n            const agregarimg=imagen.target.files[0]\n            console.log(agregarimg)  \n            if(agregarimg!=undefined){\n            setimagen({\n                imagen:agregarimg,\n                file:URL.createObjectURL(agregarimg)\n            })}\n\n\n    }    \n\n \n//seleccionar el pdf \n    const seleccionarPdf=pdf=>{\n\n          \n        \n\n        \n        const agregarpdf=pdf.target.files[0]\n             if(agregarpdf!=undefined){            \n             \n                    setpdf({\n                        pdf:agregarpdf,\n                        file:URL.createObjectURL(agregarpdf)\n                    })\n                                \n                setLink(null)\n            }\n\n}\n\n                    //remover etiqueta \n\n const removerEtiqueta=(e)=>{\n\n            \n            //setetiquetas(etiquetas.filter(item=>item.descripcion!==e.descripcion))\n\n }\n\n//manejar snapshot \n\nfunction manejarSnapshot(snapshot){\n    const  lista =snapshot.docs.map(doc=>{\n        return{\n            id:doc.id,\n            ...doc.data()\n        }\n    })\n    setetiquetas(lista)    \n}\n\n//llamar etiquetas\nconst llamarEtiquetas=()=>{\n    firebase.db.collection(\"etiquetas\").onSnapshot(manejarSnapshot)\n    \n  }\n\n\n// validaciones \n\n// primera validacion de vacio \n\n\nconst validacionuno=()=>{\n  \n    let prueba={}\n\n    //validar errores \n\n    if(paper.titulo==\"\"){\n            prueba.titulo=\"el titulo es requerido\"\n    }\n\n\n    if(paper.resumen==\"\"){\n            prueba.resumen=\"el resumen es requerido\"\n    }\n\n  \n    if(pdf.file==null &&  link==undefined){\n        prueba.pdf=\" debe subir un archivo .pdf o agregar una URL\"\n}\n\n   \n  return prueba\n\n\n}\n\n\n//nuevo paper \n\nconst NuevoPaper=async()=>{\n\n    \n    setcargando(true)\n\n    set_mensaje_informativo(\"...verificando informacion\")\n      let  errores  = validacionuno()\n      seterrores(errores)\n\n\n   \n    if(Object.keys(errores).length){\n     \n    }else{   \n\n\n\n        const respuesta=await IngresarPaper()\n\n        if(respuesta){\n\n\n        \n\n            swal.fire({\n                icon: 'success',\n                title: \"Guardado!\",\n                confirmButtonColor: '#21cbce',\n                                      \n                \n                \n              \n              }).then(()=>{\n                  props.history.push(\"/\")\n                  set_mensaje_informativo(\"\")\n                 \n              })\n            \n\n\n        }else{\n            swal.fire({\n                icon: 'Error',\n                title: \"Ha ocurrido un problema!\",\n                text: \"intentalo mas tarde \",\n                timer: 1500\n              })\n              set_mensaje_informativo(\"\")\n            \n\n        }\n\n    }\n   \n\n\n  \n\n\n    // agregar paper \n\n\n\n\n\n    /*\n\n\n      paper.subida=new Date()\n    const id = await firebase.db.collection(\"paper\").add(paper).then((docRef) => {\n        //console.log(\"Document written with ID: \", docRef.id);\n\n        return docRef.id\n    })\n\n   \n\n \n    \n\n\n    const pdf =await subirPDF(id)\n     const img =await subirImagen(id)\n  \n \n     \n     firebase.db.collection(\"paper\").doc(id).update({\n            imagen:img,\n            pdf:pdf\n\n     })\n  \n \n    paper=({...paper,\n            pdf:pdf,\n            imagen:img,\n            etiquetas:tag\n    })\n        // ver los valores de paper \n      \n// retornar al inicio \n\n\n  \n    */\n  \n   setcargando(false)\n  \n\n\n}\n\n\n// ingresar paper  despues de las validacion \nconst IngresarPaper=async()=>{\n\n \ntry {\n\n\n    //fecha\n    paper.subida=new Date()\n    //titulo para la busqueda \n    paper.busqueda=paper.titulo.toLocaleLowerCase()\n\n\n\n    //crear paper y retornar el id \n    const id = await firebase.db.collection(\"paper\").add(paper).then((docRef) => {\n        //console.log(\"Document written with ID: \", docRef.id);\n        return docRef.id\n    })\n\n    set_mensaje_informativo(\"...guardando imagen...\")\n    const img =await subirImagen(id)\n    \n    set_mensaje_informativo(\"...guardando PDF...\")\n    const pdf =await subirPDF(id)\n    \n\n    set_mensaje_informativo(\"...creando paper...\")\n\n               \n                const tagdos=tag.map(valor=>{\n\n                       return {id:valor.id,descripcion:valor.descripcion} \n\n                })\n\n\n                firebase.db.collection(\"paper\").doc(id).update({\n                        imagen:img,\n                        pdf:pdf,\n                        etiquetas:tagdos,\n                        id:id,\n                        link:link\n                })\n            \n                \n            \n                paper=({...paper,\n                        pdf:pdf,\n                        imagen:img,\n                        etiquetas:tagdos,\n                        id:id\n                })\n\n\n                let agregarEtiquet=[]\n                \n                tag.map(valor=>{\n\n                            firebase.db.collection(\"etiquetas\").doc(valor.id).set({\n                                ...valor,\n                                contar:valor.contar+1\n                            })   \n                             firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(paper.id).set(paper)           \n\n                    })\n\n                    set_mensaje_informativo(\"...Finalizando\")\n            \n                \n            \n\n      \nreturn true \n    \n} catch (error) {\n   \n    return false \n}\n\n    \n\n\n  \n    \n\n}\n\n\n\nconst AddRemovePaperTag=async(tagdos,paperdos,tag)=>{\n\n     \n    firebase.db.collection(\"etiquetas\").doc(tagdos.id).collection(\"paper\").doc(paperdos.id).set({...paperdos,\n                   etiquetas:tag\n                 })  \n    \n\n    // await firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", tagdos).get().then(valor=>\n    //     {\n    //     const prueba =valor.docs.map(objeto=>{return{id:objeto.id,...objeto.data()}})    \n    //         prueba.map(val1=>{\n    //             firebase.db.collection(\"etiquetas\").doc(val1.id).collection(\"paper\").doc(id).set({...paperdos,\n    //             etiquetas:tag\n    //             })  \n                        \n    //         })\n    //     }\n        \n    //     )\n    }\n\n        \n\n\n\n  // actualizar paper\n\n\n  const ActualizarPaper=async()=>{\n\n    setcargando(true)\n    const imgURL=await subirImagen(id)\n    const pdfURL=await subirPDF(id)\n    //console.log(paper.etiquetas)\n    // etiquetas antiguos \n    let etiquetasOld=paper.etiquetas\n    let newTag=[]\n        tag.map(async(tagOld)=>{\n            etiquetasOld.map(async (tagNew)=>{\n                if(tagNew!=tagOld){\n                             \n                            newTag.push({...tagNew,contar:tagNew.contar+1})\n\n                }else{\n\n                            newTag.push(tagOld)\n                }\n\n\n        })})\n\n\n\n\n\n\n let paperSuplente={\n    ...paper,\n    imagen:imgURL,\n    pdf:pdfURL,\n    etiquetas:tag,\n    link:link,\n    busqueda:paper.titulo.toLocaleLowerCase()\n}\n\n     await firebase.db.collection(\"paper\").doc(id).update(paperSuplente).then(valor=>{\n       \n    })\n\n\n\n       //borrar papers anteriores  de las etiquetas\n     \n       etiquetasOld.map(async(tagOld)=>{\n              tag.map(async (tagNew)=>{\n                         if (tagNew.id!=tagOld){\n \n                                                     \n                                                    // se edita dentro de la etiqueta el nuevo paper      \n                                                 await firebase.db.collection(\"etiquetas\").doc(tagNew.id).collection(\"paper\").doc(paper.id).set({...paper,\n                                                     etiquetas:tag\n                                                   }).then(()=>{\n                                                 \n                                                         \n \n                                                     firebase.db.collection(\"etiquetas\").doc(tagNew.id).set({\n                                                                 ...tagOld,\n                                                                 contar:tagOld.contar+1\n                                                         })\n \n \n                                                     }).catch((error)=>{\n                                                     console.log(error)\n                                                 })\n \n \n                                                     //se borra si esta en tagOld\n                                                     //se borra el paper dentro de la etiqueta\n                                                 await firebase.db.collection(\"etiquetas\").doc(tagOld.id).collection(\"paper\").doc(paper.id).delete().then(()=>{\n                                                     //se reduce en una la etiqueta\n                                                     firebase.db.collection(\"etiquetas\").doc(tagOld.id).set({\n                                                                 ...tagOld,\n                                                                 contar:tagOld.contar-1\n                                                         })\n \n \n                                                     }).catch((error)=>{\n                                                     console.log(error)\n                                                 })\n \n \n                         }\n \n \n \n                 })\n \n \n                         \n                     \n \n                             // si no coincide con valor borrar la etiqueta \n \n                             \n \n \n                             // await firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", tagOld).get().then(valor=>\n                             //     {\n                             //         const prueba =valor.docs.map(objeto=>{return{id:objeto.id,...objeto.data()}})    \n                             //         prueba.map(val1=>{\n                         \n                             //             firebase.db.collection(\"etiquetas\").doc(val1.id).collection(\"paper\").doc(id).delete().then(()=>\n                             \n                             //             console.log(\"se borro el registro \")\n                             //             ).catch((error)=>{\n                             //                 console.log(error)\n                             //             })\n                                         \n                             //         })\n                             //     }\n                                 \n                             //     )\n                         \n                         }\n                     )\n \n // tengo que agregrar  las etiquetas y borrar las \n//¿que pasa si se repite ??\n\n    tag.map(async(tagEv)=>{\n        try {\n\n            AddRemovePaperTag(tagEv,paperSuplente,tag)\n            \n                            // crear y  remover paper de las etiquetas \n           } catch (error) {\n                console.log(error)\n                }\n\n\n    })\n\n\n\n\n\n    /* agregar fecha\n     const img =await subirImagen(id)\n*/\nsetcargando(false)\nprops.history.push(\"/\")\nswal.fire(\n    'Confirmado',\n    'Registro actualizado',\n    'success'\n  )\n\n}\n\n\n\n// actualizar paper\n\nconst ActualizarPaperDos=async()=>{\n    setcargando(true)\n\n    set_mensaje_informativo(\"...verificando informacion...\")\n    \n    paper.link=link\n\n    set_mensaje_informativo(\"...actualizando imagen...\")\n    const imgURL=await subirImagen(id)\n    set_mensaje_informativo(\"...actualizando PDF...\")\n    const pdfURL=await subirPDF(id)\n    set_mensaje_informativo(\"...actualizando paper...\")\n \n    let etiquetasOld=[]\n    \n    paper.etiquetas.map(valor=>{     \n        etiquetas.map(valordos=>{\n        \n\n                        if(valordos.id==valor.id){\n                          etiquetasOld.push(valordos)\n                        }\n        })\n    })\n\n    console.log(etiquetasOld)\n  \n    let newTag=[]\n    let deleteTag=[]\n// las nuevas etiquetas \n\nif(tag.length>=etiquetasOld.length){ \n\n\n    const results = tag.filter(({ id: id1 }) => !etiquetasOld.some(({ id: id2 }) => id2 === id1));\n\n    newTag=results\n\n}\n \nif(tag.length<=etiquetasOld.length){\n    const results = etiquetasOld.filter(({ id: id1 }) => !tag.some(({ id: id2 }) => id2 === id1));\n    deleteTag=results\n    \n    // etiquetasOld.map(viejo=>{\n   \n    //                         console.log(viejo)\n    //                         if(tag.length!=0){\n    //                         tag.map(nuevo=>{\n    //                             console.log(nuevo)\n    //                             if(nuevo.id!=viejo.id){\n    //                                 console.log(viejo)\n    //                                 deleteTag.push({...viejo,contar:viejo.contar-1})   \n\n    //                             }\n    //                         })}else{\n    //                             console.log(\"paso por ac??\")\n    //                             deleteTag.push({...viejo,contar:viejo.contar-1})   \n\n    //                         }\n    //             })\n\n}\nlet tagDefinitivo=tag.map(valor=>{\n\n            return{\n                id:valor.id, \n                descripcion:valor.descripcion,\n            }    \n})\n\nlet paperSuplente={\n    ...paper,\n    imagen:imgURL,\n    pdf:pdfURL,\n    etiquetas:tagDefinitivo,\n    busqueda:paper.titulo.toLocaleLowerCase()\n}\n\n\ndeleteTag.map(valor=>{\n\n    firebase.db.collection(\"etiquetas\").doc(valor.id).update({...valor,contar:valor.contar-1})\n    firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(paperSuplente.id).delete().then(()=>{console.log(\"borrado\")}).catch(error=>console.log(error))\n\n})\n\nnewTag.map(valor=>{   \n    firebase.db.collection(\"etiquetas\").doc(valor.id).update({...valor,contar:valor.contar+1})\n    firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(paperSuplente.id).set(paperSuplente).then(()=>{console.log(\"agregado\")}).catch(error=>console.log(error))\n\n})\n  //  actualizar el paper \n    console.log(paperSuplente)\n\n    firebase.db.collection(\"paper\").doc(paperSuplente.id).update(paperSuplente)\n\n\n    props.history.push(\"/\")\n    swal.fire(\n        'Confirmado',\n        'Registro actualizado',\n        'success'\n      )\n\n\n      set_mensaje_informativo(\"\")\nsetcargando(false)\n\n\n \n                 }\n \n \n                         \n                     \n \n                             // si no coincide con valor borrar la etiqueta \n \n                             \n \n \n                             // await firebase.db.collection(\"etiquetas\").where(\"descripcion\", \"==\", tagOld).get().then(valor=>\n                             //     {\n                             //         const prueba =valor.docs.map(objeto=>{return{id:objeto.id,...objeto.data()}})    \n                             //         prueba.map(val1=>{\n                         \n                             //             firebase.db.collection(\"etiquetas\").doc(val1.id).collection(\"paper\").doc(id).delete().then(()=>\n                             \n                             //             console.log(\"se borro el registro \")\n                             //             ).catch((error)=>{\n                             //                 console.log(error)\n                             //             })\n                                         \n                             //         })\n                             //     }\n                                 \n                             //     )\n                      \n // tengo que agregrar  las etiquetas y borrar las \n//¿que pasa si se repite ??\n\n    // tag.map(async(tagEv)=>{\n    //     try {\n\n    //         AddRemovePaperTag(tagEv,paperSuplente,tag)\n            \n    //                         // crear y  remover paper de las etiquetas \n    //        } catch (error) {\n    //             console.log(error)\n    //             }\n\n\n    // })\n\n\n\n\n\n    /* agregar fecha\n     const img =await subirImagen(id)\n*/\n\n\n\n\n\n\n\n  // subir imagen \n\n  const subirImagen =async(id)=>{\n        // prueba de usuario \n\n\n\n    \n\n        // subir  imagen\n            if(imagen.imagen!==null){\n\n\n                    if(imagen.imagen instanceof File){\n                        const imgRef=await firebase.storage.ref().child(\"IMAGEN\").child(id)\n                        await imgRef.put(imagen.imagen)\n                        const imgURL=await imgRef.getDownloadURL() \n                        return imgURL\n                    }else{\n                        return imagen.file \n                    }\n            }else{\n                setpaper({...paper,imagen:\"\"})\n             return null\n            }\n\n  }\n\n\n  const subirPDF =async(id)=>{\n  \n\n\n    // subir  imagen\n        if(pdf.pdf!==null){\n\n                   if(pdf.pdf instanceof File){ \n                        const pdfRef =  firebase.storage.ref().child(\"PDF\").child(id)\n                        console.log()   \n                        await pdfRef.put(pdf.pdf)\n                        const pdfURL=await pdfRef.getDownloadURL()\n                        return pdfURL\n                   }else{\n                        return pdf.file\n                   }\n        }else{\n            \n            return null\n   \n        }\n\n}\n\n\nconst AgregrarLink=async()=>{\n\n    const { value: url } = await swal.fire({\n        input: 'url',\n        inputLabel: 'URL',\n        inputPlaceholder: 'Ingrese direccion URL',\n        showConfirmButton:\"true\",\n        confirmButtonText:\"Guardar\",\n        confirmButtonColor:\"#21cbce\",\n        validationMessage:\"URL invalida\",\n        denyButtonText:\"Cancelar\",\n        showDenyButton:\"true\"\n    \n    \n    })\n      \n      if (url) {\n\n\n        setLink(url)\n        setpdf({file:null,pdf:null})\n        //si existe el id \n        console.log(id)\n        if(id){\n\n\n            try {\n                await firebase.storage.ref().child(\"PDF\").child(id).delete().then(function() {\n                    //console.log(\"borrado\")\n                    // File deleted successfully\n            }).catch(function(error) {\n\n                            console.log(error)\n                    //console.log(error)\n                    // Uh-oh, an error occurred!m   \n            });          \n\n            } catch (error) {\n                console.log(error)\n            }\n            //borrar  pdf\n           \n        }\n\n       \n\n\n        swal.fire({     \n            icon: 'success',\n            title: '¡URL Guardada!',\n            showConfirmButton: false,\n            timer: 1500\n          })\n      }\n}\n\nconst actualizarState=(e)=>\n{\n    e.preventDefault()\n    setpaper({\n        ...paper,[e.target.name]:e.target.value\n    })\n\n}\n\n\n\nuseEffect(() => {\n\n    const {id}=props.match.params\n   \n \n    if(usuario==null){\n        props.history.push(\"/\")\n\n    }else{\n        \n        if(!usuario.administrador){\n            props.history.push(\"/\")\n        }\n    }\n\n\n\n    // validar si editar o borrar\n    editorcreate(id)\n\n    // armar etiquetas\n\n    \n    \n   llamarEtiquetas()\n\n\n\n\n}, [errores,usuario])\n\nconst editorcreate= async (id)=>{\n\n    if(id){\n        setcargando(true)\n        setid(id)\n      const test=  await firebase.db.collection(\"paper\").doc(id).get().then((doc)=>{\n          console.log(doc)\n            if(doc.exists){\n                console.log(\"Document data:\", doc.data());\n                return doc.data()\n            }else{\n                console.log(\"No such document!\");\n            }\n\n      }) \n      // \n\n\n      setimagen({\n            file:test.imagen\n\n      })  \n\n      setpdf({\n        file:test.pdf\n\n  })  \n  setLink(test.link)\n\n\n  \n  settag(test.etiquetas)\n    \n    //   test.etiquetas.map((valor)=>{\n       \n    //      settag(prev=>[...prev,valor.descripcion])\n\n    //   }) \n      await  setpaper(test)\n      setcargando(false)\n    \n    }\n\n}\n\n    return (\n \n        <div className={clases.root}  >\n    \n          \n            \n            <div>\n                \n\n                \n             \n            </div>\n\n\n            <Grid container>\n                <Grid xs={4}  sm={2} md={4}>\n\n                </Grid>\n\n                <Grid xs={12} sm={8} md={4}>\n\n\n                        {cargando?\n                        <div>\n                        \n                        \n                        \n                        \n                        <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n\n                            <Typography  className={clases.estilo_mensaje_informativo} align=\"center\" variant=\"h5\">\n                                            {mensaje_informativo}\n                                    </Typography>:\n\n                        </div>\n                              </div> :\n                        <div className={clases.divPrincipal}>\n\n                                        {id?\n\n                                        <Typography className={clases.margenArriba} align=\"center\" variant=\"h3\">\n                                            Editar Paper\n                                    </Typography>:\n\n                                        <Typography className={clases.margenArriba} align=\"center\" variant=\"h3\">\n                                        Nuevo Paper\n                                        </Typography>\n                                    \n                                    }\n\n\n                    <Typography  align=\"center\" variant=\"h3\">\n                            <div className={clases.divImagen}>\n\n\n\n                              \n                                {imagen.file?\n                                \n                                    <img src={imagen.file} style={{height:\"100%\",width:\"100%\"}}/>\n                            \n                                    \n                                    // <div   className={clases.divImagen} style={{\n                                    //     backgroundImage:`url(${imagen.file})`,\n                                       \n                                    //   }} >\n\n                                              \n                                    //     </div>\n\n\n                                    :\n                                    < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n                                    }\n                                \n\n\n                           \n                              \n                            </div>\n                            <Typography align=\"center\" >\n\n                            <div>\n                                    <input\n                                    type=\"file\"\n                                    id=\"subir\"\n                                    accept=\"image/*\"\n                                    style={{display:\"none\"}}\n                                    onChange={(e)=>seleccionarArchivo(e)}\n                                \n                                    >\n                                    </input>\n                                <Button variant=\"contained\"\n                                        color=\"primary\"\n                                        className={clases.margenButtonDos}\n                                  \n                                >\n                                <label\n                                    htmlFor=\"subir\"\n                                    style={{padding:\"6px 36px\"}}\n                                    >\n                                        agregar imagen\n                                    </label>\n                                    </Button>     \n                            </div>\n\n                        </Typography>\n                    </Typography>\n                    <Typography align=\"center\" >\n                                <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"titulo\"\n                                    label=\"Titulo\"\n                                    name=\"titulo\"\n                                    autoComplete=\"titulo\"\n                                    onChange={actualizarState}\n                                    \n                                    value={paper.titulo}   \n\n\n\n                                   \n                                    />\n\n\n\n\n                       {errores.titulo?\n\n                        <Alert\n                        \n                        action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                               seterrores({\n                                   ...errores,titulo:null\n                               })\n                              }}\n                            >\n                           <CloseIcon></CloseIcon>\n\n                            </IconButton>\n                            }\n                        \n                        severity=\"error\">{errores.titulo}</Alert>\n\n                            :\n\n                        <div></div>\n\n                       }                 \n                      \n\n\n\n                    </Typography>\n                    <Typography align=\"center\" >\n                    <TextField\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required\n                                    fullWidth\n                                    id=\"resumen\"\n                                    label=\"Resumen\"\n                                    name=\"resumen\"\n                                    multiline\n                                     rowsMax={4}\n                                    autoComplete=\"resumenrafce\"\n                                    onChange={actualizarState}\n                                 \n                                    value={paper.resumen}\n                                 \n                                    />\n\n\n\n\n\n                    </Typography>\n                   \n                    <Typography align=\"center\" >\n\n\n                        {errores.resumen?\n\n                        <Alert\n                        action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                               seterrores({\n                                   ...errores,resumen:null\n                               })\n                              }}\n                            >\n                           <CloseIcon></CloseIcon>\n\n                            </IconButton>\n                          }\n                        \n                        severity=\"error\">{errores.resumen}</Alert>\n\n                            :\n\n                        <div></div>\n\n                        }               \n\n\n                    </Typography>\n                   \n\n\n                        \n\n\n\n                   \n\n             <Typography align=\"center\" >\n\n                <AutocompletarTres etiquetas={etiquetas} tag={tag} settag={settag}  removerEtiqueta={removerEtiqueta} llamarEtiquetasDos={llamarEtiquetas}\n\n\n\n                ></AutocompletarTres>\n\n                </Typography>\n\n\n\n\n                {id?\n                     <Typography align=\"center\" >\n                     <Button\n                     color=\"secondary\"\n                     variant=\"contained\"\n                     style={{}}\n                     endIcon={<AddIcon></AddIcon>}\n                     onClick={()=>ActualizarPaperDos()}\n                     >\n     \n                            Actualizar Paper\n                     </Button>\n                 \n                 </Typography>\n                :\n\n\n                <Typography align=\"center\" >\n                <Button\n                color=\"secondary\"\n                variant=\"contained\"\n                className={clases.margenButton}\n                endIcon={<AddIcon></AddIcon>}\n                onClick={()=>NuevoPaper()}\n                >\n\n                        Agregar Paper\n                </Button>\n            \n            </Typography>\n            \n            }\n                                    \n                    <Typography align=\"center\" >\n\n                            <div>\n                                    <input\n                                    type=\"file\"\n                                    id=\"pdf\"\n                                    accept=\".pdf\" \n                                    style={{display:\"none\"}}\n                                    onChange={(e)=>seleccionarPdf(e)}\n                                    >\n                                    </input>\n                                <Button variant=\"contained\"\n                                        color=\"primary\"\n                                      \n                                        className={clases.margenButtonDos}\n                             \n                                >\n                                <label\n                                  style={{padding:\"6px 36px\"}}\n                                  htmlFor=\"pdf\"\n                                    >\n                                        agregar PDF\n                                  \n                                    </label>\n                         </Button>     \n\n                         <IconButton color=\"primary\" aria-label=\"agregrar link\"\n                         onClick={()=>{\n\n                            AgregrarLink()\n                         }}\n                         >\n                            <LinkIcon />\n                        </IconButton>\n                            </div>\n\n\n                            {errores.pdf?\n\n                        <Alert\n                        \n                        \n                        action={\n                            <IconButton\n                              aria-label=\"close\"\n                              color=\"inherit\"\n                              size=\"small\"\n                              onClick={() => {\n                               seterrores({\n                                   ...errores,pdf:null\n                               })\n                              }}\n                            >\n                           <CloseIcon></CloseIcon>\n\n                            </IconButton>\n                        }\n                        \n                        severity=\"error\">{errores.pdf}</Alert>\n\n                            :\n\n                        <div></div>\n\n                            }                 \n\n\n\n\n                    </Typography>\n           \n\n\n\n\n\n\n           \n                    <Typography align=\"center\" >\n                        {\n                        \n                        pdf.file&&\n                        \n                        <div style={{ height: '750px' }}>\n                        <div\n                                style={{\n                                    border: '1px solid rgba(0, 0, 0, 0.3)',\n                                    height: '100%',\n                                    margin:\"50px auto\"\n                                }}\n                            >\n                       \n                                   <iframe style={{height:\"100%\",width:\"100%\",}} src={pdf.file}></iframe> \n                            </div>                   \n\n                        </div>\n                \n                    \n                       }\n                          \n                    </Typography>\n\n                    {link&&     \n                    <div>\n                        <a  target=\"_blank\" href={link}>\n                        <Typography variant=\"subtitle1\" align=\"center\" >\n                        \n                        {link}\n                        </Typography>\n                        </a>\n                     </div>\n                    }\n                   </div>\n                   }\n                </Grid>\n                <Grid xs={4} sm={2}  md={4}>\n\n            \n                    \n                </Grid>\n\n            </Grid>\n            \n   \n            \n                       \n     </div>\n    )\n}\n\nexport default CrearPaper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Etiquetascuatro.jsx",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"import React, { useEffect,useState ,useContext} from 'react'\nimport Firebase from '../firebase/firebase'\nimport { Typography,makeStyles,Grid,CircularProgress,Button } from '@material-ui/core'\nimport Paper from \"../Componetes/Paper\"\nimport EtiquetasIcon from '@material-ui/icons/LocalOffer';\nimport { useHistory } from 'react-router-dom';\nimport Paperdos from \"../Componetes/Papertres\"\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport {actualizarPaper,ActualizarPaperEnEtiquetas} from '../Funciones/PaperDoc'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\n\nconst estilos=makeStyles((theme)=>({\n    \n    root:{\n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n\n        \"& .botonEtiqueta\":{\n            background:\"#ffffff\",\n            color:\"#212121 !important\",\n            marginTop:\"10px\",\n            fontSize:\"27px\",\n            fontFamily:\"nunito\",\n            \"&:hover\": {\n                background:\"#36cbce\",\n                color:\"#ffffff!important\",\n             },\n        \n        },\n        \"& .botonEtiqueta .MuiSvgIcon-root\":{\n            color:\"#36cbce\"\n        },\n        \n        \"& .botonEtiqueta:hover .MuiSvgIcon-root\":{\n            color:\"#ffffff\"\n        },\n    },\n    \n    texto:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n    \n\n\n    },textoDos:{\n        fontFamily:\"nunito\",\n        fontWeight:\"300\",\n        textTransform:\"uppercase\"\n\n\n    },\n    divTag:{\n\n        padding:\"50px 0px\"\n    },\n    divEtiqueta:{\n\n        margin:\"29px auto\",\n        width:\"75vw\"\n\n    },\n    divReg:{\n\n        margin:\"45px auto\",\n        width:\"75vw\"\n\n    },\n    divCircular:{\n        marginTop:\"50px\",\n        marginBottom:\"129px\"\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        }\n\n        ,textNoDisponible:{\n\n\n            fontFamily:\"Nunito\",\n            color:\"#808080\"\n        } }\n))\n\n\n\nconst Etiquetas = (props) => {\n \nconst clases=estilos()    \nconst history=useHistory()\n\nconst usuario =useContext(UsuarioContext)\n//state etiquet \nconst [etiquet, setetiquet] = useState([])\n// guardar el valor \nconst [elvalor, setelvalor] = useState()\n// state etiquet para pedir mas \nconst [etiquetarray, setetiquetarray] = useState([])\nconst [etiquetas, setetiquetas] = useState([])\nconst [pedirmas, setpedirmas] = useState(false)\nconst [paper, setpaper] = useState([])\nconst [cargando, setcargando] = useState(false)\nconst [cargandodos, setcargandodos] = useState(false)\nconst [esconderboton, setesconderboton] = useState(false)\n\nconst [changeLike, setChangeLike] = useState({\n    cambio:false,\n    idEtiqueta:null,\n    paper:null\n\n\n})\nconst recientes=props.recientes\nconst valorados=props.valorados\n//  crear nuevo state para el  el nuevo arreglo \nconst [paperArray, setpaperArray] = useState([])\nconst [ultimo, setultimo] = useState(0)\nconst {id} =props.match.params\n\n\nconst limite=5\n// buscar etiquetas \nconst buscaretiquetas=async()=>{\n setcargando(true)   \n \n  const lista  =await Firebase.db.collection(\"etiquetas\").get()\n\n  const listados = await Promise.all(lista.docs.map(async(doc)=>{\n            //console.log(doc.data())\n            // etiqueta \n             let etiqueta= {id:doc.id,\n                 ...doc.data()}\n            console.log(etiqueta)  \n            //mapear etiqueta \n             let listatres=[] \n             \n                    if (valorados){\n                        listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"likes\",\"desc\").limit(2).get()\n                    }else{\n\n                                if(recientes){\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(2).get()\n\n\n                                }else{\n\n                                    listatres=await Firebase.db.collection(\"etiquetas\").doc(etiqueta.id).collection(\"paper\").limit(2).get()\n                                } \n                    }\n\n             \n             const listacuatro= listatres.docs.map(doc=>{\n                    return {\n                        id:doc.id,\n                        ...doc.data()\n                    }  \n             }\n             )       \n             console.log(listacuatro)\n             return{\n                etiquetas:etiqueta,\n                paper:listacuatro\n\n            }\n                // return {\n                //     id:doc.id,\n                //     ...doc.data()\n                // }\n            }))  \n                         \n  console.log(listados)        \n  setpaperArray(listados)  \n  setcargando(false)\n\n\n}\n\n\n\n\nconst megusta=(valor)=>{\n\n    \n        megustacuatro(valor)\n\n\n}\n\n\n\n// Éste va a ser el me gusta sin validar usuario\nconst megustaSinValidarUsuario=(paperNuevo)=>{\n\n    // recorrer arreglo en donde esta etiqueta y paper 'paperArray'\n    //crear nueva constante del paper\n    const nuevoPaperArray=paperArray.map(paperMap=>{\n\n                    //recorrer solo arreglo paper \n                    //paperMap = paper[]\n                    console.log(paperArray)\n                     let paper=paperMap.paper.map((paperNew)=>{\n                                //validar que los paper coincidan \n                                if(paperNew.id==paperNuevo.id){\n                                    console.log(paperMap.etiquetas.id)\n\n                                        //\n\n                                    return paperNuevo\n                                } else{\n                                    return paperNew\n                                }       \n                        })                \n                // crear nuevo objeto con  la etiqueta y el paper \n                let nuevoObjeto={\n                    etiquetas:paperMap.etiquetas,\n                    paper:paper   \n                }\n                //retornar objeto  \n                return nuevoObjeto\n    })\n// insertar  paperArray\n  setpaperArray(nuevoPaperArray)\n\n    \n}\n\n\n\n\nconst megustacuatro=async(valor)=>{ \n    setcargando(true)\n    if(usuario==null) {\n            return history.push(\"/login\")\n    }\n    // prueba de las funciones \n    //const valorRenovado=  await RetornarPaper(valor.id)\n    //valor=valorRenovado\n    if(valor.haVotado==undefined){                    \n            var antiguoHaVotado=[]\n    }else{\n            var antiguoHaVotado=valor.haVotado\n    }                      \n    // nuevo paper \n    let newPaper={}\n    let nuevaLista=[]\n    if(antiguoHaVotado.includes(usuario.uid)){ \n            antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                    return obj!==usuario.uid\n            })\n            let megusta=valor.likes-1 \n             newPaper={\n                    ...valor,\n                     likes:megusta,\n                    haVotado:antiguoHaVotado\n            }\n             //listaPaperdos(newPaper,megusta,antiguoHaVotado)\n            //await firebase.db.collection(\"paper\").doc(valor.id).update(nuevoPaper)\n            //RenovarPaperMapEtiqueta(nuevoPaper)\n            // \n            nuevaLista= megustacinco(newPaper,megusta,antiguoHaVotado)\n    console.log(newPaper)\n }else{ \n    \n const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n console.log(nuevoHaVotado)\n let megusta=valor.likes+1   \n newPaper={\n    ...valor,\n     likes:megusta,\n    haVotado:nuevoHaVotado\n}\nnuevaLista=megustacinco(newPaper,megusta,nuevoHaVotado)\nconsole.log(newPaper,megusta,nuevoHaVotado)\n\n}\n\nconsole.log(nuevaLista)\nsetetiquetarray(nuevaLista)\nsetcargando(false)\n actualizarPaper(newPaper)\n ActualizarPaperEnEtiquetas(newPaper)\n// buscaretiquetas()\n// props.setChangeLike({\n//         cambio:true,\n//         idEtiqueta:props.id,\n//         paper:newPaper\n//     })\n\n\n         \n\n\n\n\n}\n\n\n\nconst  megustacinco=(valor,megusta,nuevosvotos)=>{\n\n\n  const nuevaLista =etiquetarray.map(doc=>{\n                                if(valor.id==doc.id){  \n                                    return {\n                                        ...valor,\n                                        likes:megusta,\n                                        haVotado:nuevosvotos       \n                                    }\n                            }else{\n                                return{...doc}\n                            }\n                    })\n\n\n  return nuevaLista\n\n\n}\n\n\n\n\nconst listaconid=async(valor,ruta)=>{\n\n   \n    // guardar la etiqueta que se esta buscando \n    setetiquetas(valor)\n    // ¿sera necesario ?\n      setpedirmas(true)\n\n    //esconder el button \n    setesconderboton(false) \n          \n\n\n            if(recientes){\n                var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(limite).get()\n\n\n            }else{\n\n                if(valorados){\n\n                    var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"likes\",\"desc\").limit(limite).get()\n\n                }else{\n                    var consulta = await Firebase.db.collection(\"etiquetas\").doc(valor).collection(\"paper\").orderBy(\"id\",\"desc\").limit(limite).get()\n\n                }\n\n            }\n\n\n\n    var consult=consulta.docs.map(doc=>{\n \n         return {\n \n             id:doc.id,\n             ...doc.data(),\n             click:false\n         }\n \n    \n     })\n     // guardar en el state la etiqueta \n     setetiquetarray(consult)\n     if(consult.length){\n        let nuevoultimo=consult[consult.length-1].id\n                 console.log(nuevoultimo)\n                if(nuevoultimo!=undefined){\n                    setultimo(consult[consult.length-1].id)\n                    \n                }\n\n    }\n     \n\n// console.log(consult)\n\n\n\n\n// armar el objeto \n\nsetcargando(false)\n\n//  if(recientes){\n//          alert(\"prueba\")\n//         var consult =  armarconsultrecientes(consult)\n// }\n// if(valorados){\n\n     \n    //     var consult =  armarconsultvalorados(consult)\n    // }\n\n\n    //      var res={\n    //         tag:valor,\n    //         lista:consult,\n    //         cantidad:consult.length\n    //      }\n        \n    //      setpaper([res])\n        \n    //      setcargando(false)\n            \n\n    }\n\n\n\n\n const listardesdeelultimo=async()=>{\n  \n    setcargandodos(true)\n\n\n    if (recientes){\n        \n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"subida\",\"desc\").limit(limite).get()\n\n        var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").doc(ultimo).get().then(async doc=>{          \n            let nuevaLista=[]\n             let nuevaListados=await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"subida\",\"desc\").startAfter(doc).limit(1).get()\n             return nuevaListados\n    \n            })\n\n    }else{\n\n            if(valorados){\n               \n                //var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimo).limit(1).get()\n                \n                var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").doc(ultimo).get().then(async doc=>{\n                        \n                        let nuevaLista=[]\n                         let nuevaListados=await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(doc).limit(1).get()\n                         return nuevaListados\n                \n                        })\n\n               \n            }else{\n              \n                var consulta = await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").doc(ultimo).get().then(async doc=>{\n                        \n                    let nuevaLista=[]\n                     let nuevaListados=await Firebase.db.collection(\"etiquetas\").doc(etiquet.id).collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(doc).limit(1).get()\n                     return nuevaListados\n            \n                    })\n            }\n\n    }\n    var consult=consulta.docs.map(doc=>{\n \n        return {\n\n            id:doc.id,\n            ...doc.data()\n        }\n\n   \n    }) \n    console.log(consult)   \n    setetiquetarray((viejo)=>[...viejo,...consult])\n    if(consult.length){\n        let nuevoultimo=consult[consult.length-1].id\n        setultimo(nuevoultimo)\n\n\n    }\n    \n    if(etiquet.contar==etiquetarray.length+consult.length){\n    setesconderboton(true)\n    }else{\n        setesconderboton(false)\n    }\n\n\n    console.log(cargandodos)\n   setcargandodos(false)\n } \n\n\n    \n    useEffect(async() => {\n        \n        setcargando(true)\n        setcargandodos(false)\n       \n        const {valor}=props.match.params\n      \n         //  guardar en un state en una etiqueta \n\n            const etiquet = await Firebase.db.collection(\"etiquetas\").doc(valor).get().then((doc)=>{\n                // console.log(doc.id)\n                // console.log(doc.data())\n                        return{\n                            id:doc.id,\n                            ...doc.data(),\n                            click:false\n\n                        }\n\n                    })\n\n      \n            setetiquet(etiquet)\n            listaconid(valor,false)\n    \n\n    }, [props,id])\n\n\n        return (\n\n\n\n        \n            <div className={clases.root} style={{marginTop:\"88px\"}} >\n        \n                <div className={clases.divTag} >\n                        <Typography variant=\"h3\" align=\"center\"\n                                className={clases.texto}\n                        >\n                            \n                                Etiquetas \n                            </Typography> \n\n\n                </div>  \n\n                {\n                    !cargando?\n                  \n                        \n                                  \n                                        \n                                    <div>\n                                        <div id=\"etiqueta\" className={clases.divEtiqueta} >\n                            \n                                                    <Typography   className={clases.textoDos} variant=\"h4\" align=\"left\">\n                                                        <EtiquetasIcon color=\"primary\"/>\n                                                            {etiquet.descripcion}\n                        \n                                                    </Typography> \n                                                \n                                        </div>     \n                                        <div>\n                                                    <div>\n                                                        \n                                                        {\n                                                        etiquetarray.map(doc=>(\n                                                                <div>\n                                                                    <Paperdos   paper={doc}  buscaretiquetas={buscaretiquetas}   length={etiquetarray.length}   changeLike={changeLike} setChangeLike={setChangeLike}   megusta={megusta} cambiarLike={megustaSinValidarUsuario}  ></Paperdos>\n                                                                            \n                                                                \n                                                                \n                                                                </div>   \n                                                    \n                                                                ))}\n\n                                                \n                                        \n                                                    </div> \n\n\n                                                         {cargandodos?\n\n                                                                    <div>\n                                                                    <div className={clases.divCircular} >\n                                                                            <CircularProgress className={clases.circular}></CircularProgress>\n                                                                        </div>\n                                                                    </div>\n\n                                                                    :\n\n                                                                    <Typography align=\"center\">\n                                                                          { esconderboton==false&&      <Button \n                                                                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                                                                        variant =\"contained\"\n                                                                                        color=\"primary\"\n                                                                                \n                                                                                onClick={()=>{\n                                                                                    listardesdeelultimo()\n                                                                                }} >\n                                                                                ver mas\n                                                                            </Button> }\n                                                            </Typography>                 \n        \n                                                         }       \n\n                                                   \n                                        </div> \n                                    </div>                        \n                                                                \n                                      :  \n                                    <div>\n                                            <div className={clases.divCircular} >\n                                                    <CircularProgress className={clases.circular}></CircularProgress>\n                                                </div>\n                                    </div>\n\n                           \n                     \n                        }\n                   </div>\n\n\n                  \n            \n        \n    )\n}\n\n\nexport default Etiquetas\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/CrearCuenta.jsx",["293","294","295","296","297","298","299"],"import React,{useState} from 'react'\nimport { makeStyles,IconButton, Grid, TextField, Button, Typography,CircularProgress} from '@material-ui/core'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Firebase from \"../firebase/firebase\"\nimport Swal from \"sweetalert2\"\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nconst useStyles=makeStyles((theme)=>({\n\n\n    root:{\n\n        marginTop:\"60px\",\n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n    }            \n,\n    textField:{\n        margin:\"15px 0px\",\n        width:\"95%\"\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    },\n    \n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n\n    boton:{\n\n    /* margin: 5px; */\n    margin: \"25px 25px 80px auto\",\n    display: \"block\",\n    width:\"300px\",\n    [theme.breakpoints.down(\"xs\")]:{\n        margin: \"25px auto 80px auto\",\n        width:\"290px\"\n    }\n\n        },\n\n    alerta:{\n            margin:\"0px 0px\",\n            width:\"90%\"\n\n    },\n    titulo:{\n\n        marginBottom:\"60px\"\n    }\n    \n\n\n\n\n}))\n\n\n\n\nconst CrearCuenta = (props) => {\n    const clases=useStyles()\n\n    const [cuenta, setcuenta] = useState({\n        nombre:\"\",\n        correo:\"\",\n        password:\"\",\n        confirmar:\"\"\n    })\n\n  const [errores, seterrores] = useState({\n        nombre:null,\n        correo:null,\n        password:null,\n        confirmar:null\n\n\n  })\n  const [cargando,setcargando]=useState(false)\n\n\n const usuariosRef=Firebase.db.collection(\"usuarios\")\n\n\n\n\n\n\n    const actualizarState=(e)=>{\n        e.preventDefault()\n\n        setcuenta({...cuenta,\n        [e.target.name]:e.target.value\n        })\n\n\n    }\n\n\n    const validar=()=>{\n       \n            let err={}\n\n\n        if(cuenta.nombre==\"\"){\n\n\n            err.nombre=\"debes ingresar tu nombre\"\n\n\n        }\n        if(cuenta.correo==\"\"){\n\n            \n            err.correo=\"debes ingresar tu correo\"\n\n        }else{\n             if( !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(cuenta.correo) ) {\n                err.correo= \"Email no válido\"\n            }\n\n        }\n        if(cuenta.password==\"\"){\n\n           err.password=\"debes ingresar tu contraseña\"\n        }\n        if(cuenta.confirmar==\"\"){\n\n           \n            err.confirmar=\"debes  confirmar tu contraseña\"\n\n        }else{\n                if(cuenta.confirmar!=cuenta.password){\n\n                        err.confirmar=\"tu contraseña no coincide\"\n                      \n                }\n\n        }\n\n            return err\n\n    }\n\n\n    const guardar= ()=>{\n        setcargando(true)    \n        let err= validar()\n        seterrores(err)\n        if(Object.keys(err).length){\n          \n              setcargando(false)\n        }else{\n\n\n\n\n\n\n\n            Firebase.registrar(cuenta).then(async()=>{\n\n\n\n                let usuariosRegistrar={\n                    correo:cuenta.correo,\n                    nombre:cuenta.nombre,\n                    photoURL:null\n                }\n\n\n\n                await usuariosRef.doc(usuariosRegistrar.correo).set(usuariosRegistrar)\n\n\n                props.history.push(\"/login\")\n                Swal.fire({\n                       title:\"Cuenta creada correctamente\",\n                       icon:\"success\"\n                })\n\n            }).catch(error=>{\n                console.log(error)\n                let mensaje=\"\"\n                let titulo=\"\"\n                titulo=error.code\n                mensaje=error.message\n                \n                //desde aca se atrapan los errores\n                if(error.code==\"auth/weak-password\"){\n                    titulo=\"Contraseña Debil\"    \n                    mensaje=\"La contraseña debe tener al menos 6 caracteres\"\n                }\n\n\n                //desde aca se atrapan los errores\n                if(error.code==\"auth/email-already-in-use\"){\n                    titulo=\"correo electrónico ya en uso\"    \n                    mensaje=\"La dirección de correo electrónico ya está siendo utilizada por otra cuenta.\"\n                }\n\n                Swal.fire({\n                    title:titulo,\n                    text:mensaje,\n                    icon:\"info\"\n             })\n            })\n            setcargando(false)\n    }}\n\n\n    return (\n        <div className={clases.root}>\n\n\n            <Typography className={clases.titulo} align=\"center\" variant=\"h3\">\n\n                Crear Cuenta \n            </Typography>\n            \n\n              {\n                   cargando? \n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                            </div>\n                   \n                   \n                    :\n              \n\n            <Grid container>\n               <Grid xs={12} md={3}   ></Grid> \n               <Grid xs={12} md={6}  >\n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su nombre\"\n                      variant=\"outlined\"\n                      label=\"Nombre\"\n                      name=\"nombre\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.nombre?\n\n<Alert    className={clases.alerta}\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,nombre:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.nombre}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su correo\"\n                      variant=\"outlined\"\n                      label=\"Correo\"\n                      name=\"correo\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.correo?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,correo:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.correo}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Ingrese su contraseña\"\n                      label=\"Contraseña\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      name=\"password\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n{errores.password?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,password:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.password}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n                    <TextField \n                      fullWidth\n                      className={clases.textField}\n                      placeholder=\"Confirme su contraseña\"\n                      label=\"Confirme contraseña\"\n                      type=\"password\"\n                      variant=\"outlined\"\n                      name=\"confirmar\"\n                      onChange={actualizarState}\n                       ></TextField>\n\n\n{errores.confirmar?\n\n<Alert     className={clases.alerta}\n\naction={\n    <IconButton\n      aria-label=\"close\"\n      color=\"inherit\"\n      size=\"small\" \n   \n      onClick={() => {\n       seterrores({\n           ...errores,confirmar:null\n       })\n      }}\n    >\n   <CloseIcon></CloseIcon>\n\n    </IconButton>\n    }\n\nseverity=\"error\">{errores.confirmar}</Alert>\n\n    :\n\n<div></div>\n\n}        \n\n\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={clases.boton}     \n                        onClick={()=>guardar()}\n\n                    >\n\n                        Guardar\n                    </Button>\n\n\n               </Grid>\n               <Grid xs={12} md={3}></Grid>\n\n            </Grid>\n            }\n        </div>\n    )\n}\n\nexport default CrearCuenta\n  ","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/inicio.jsx",["300"],"import React,{useState}  from 'react'\nimport Caja from \"../Componetes/Caja\"\nimport BotonFlotante from \"../Componetes/BotonFlotante\"\nimport { useEffect } from 'react'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react'\n\n\nconst Inicio = (props) => {\n\n    // const [state, setstate] = useState(props.recientes)\n    const usuario = useContext(UsuarioContext)\n    const [papermatch, setpapermatch] = useState(null)\nuseEffect(() => {\n    try {\n        if(props.match.params!==undefined){\n            const {paper}=props.match.params\n            setpapermatch(paper)    \n        }\n      \n        \n    } catch (error) {\n        alert(error)\n    }\n \n\n}, [props])\n\n    return (\n       \n        <div>  \n            <Caja textoGeneral={props.textoGeneral} valorados={props.valorados} recientes={props.recientes} paperid={props.match.params} >\n                \n            </Caja>\n        \n        {usuario?\n           <div>\n               {usuario.administrador? <div>\n                <BotonFlotante>\n               \n               </BotonFlotante>\n               </div>:\n               <div></div>\n               }\n           \n            </div>:\n            <></>\n        }\n       \n        </div>\n\n    )\n}\n\nexport default Inicio\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Navegador/appbar.jsx",["301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Provedores/useAutenticado.jsx",["322"],"import {useState,useEffect} from 'react'\nimport firebase from \"../firebase/firebase\"\nconst useAutenticado = props => {   \n\n\n            const [usuarioAutenticado, setusuarioAutenticado] = useState(null)\n\n\n\n    const administrador = async(user)=> \n    \n    {\n    var result=false\n     await firebase.db.collection(\"administradores\")\n      .where(\"adminitrador\", \"==\", user.email).get().then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n            // doc.data() is never undefined for query doc snapshots     \n           result=true\n        });\n      \n    })\n    .catch((error) => {\n        console.log(\"Error getting documents: \", error);\n    });\n          \n       return result\n      \n  \n    }\n\n\n\n    const usuarioExistente=async(usuario)=>{\n\n                console.log(usuario )\n                //consultar en la base de datos\n                \n                // crear constantes  de referencias a usuarios \n\n                const usuarios=firebase.db.collection(\"usuarios\")\n                //firebase.db.collection(\"usuarios\")\n\n                const  consulta=await usuarios.where(\"correo\",\"==\",usuario.email).get().then(doc=>\n                    {\n                        return doc.docs\n                    }\n                    )\n\n\n                if(consulta.length){\n                    console.log(\"vacio\")\n                }else{\n                    console.log(\"lleno\")\n                \n                    let usuarioAgregar={\n                        correo:usuario.email,\n                        nombre:usuario.displayName,\n                        photoURL:usuario.photoURL\n\n                    }\n                    console.log(usuarioAgregar)\n                     await usuarios.doc(usuarioAgregar.correo).set(usuarioAgregar)\n                    \n\n                } \n\n\n\n\n\n\n\n\n    }\n\n\n    useEffect(async() => {\n\n       \n        const unsuscribe= firebase.auth.onAuthStateChanged(user=>{\n\n            if(user){\n\n                 //  consultar si el usuario  existe            \n\n                 \n\n\n                  administrador(user).then(function(result) {\n                            console.log(result) // \"Some User token\"\n                            setusuarioAutenticado({...user,administrador:result})\n                         })\n\n\n                  \n                usuarioExistente(user)\n              \n\n\n\n\n\n\n\n\n\n                \n            }else{\n\n                setusuarioAutenticado(null);\n              \n            }\n\n             return ()=>unsuscribe();   \n\n\n        })\n      \n    },[] )\n\n\n\n    return usuarioAutenticado\n}\n\nexport default useAutenticado\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/firebase.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/PaperDoc.js",["323","324","325","326"],"import Firebase from '../firebase/firebase'\n\n\n// variable a la base de datos \nconst PaperDb=Firebase.db.collection(\"paper\")\nconst Etiquetas=Firebase.db.collection(\"etiquetas\")\n// actualizar paper\n\n                const actualizarPaper=(paper)=>\n                {\n                // actualizando el paper etiquetas \n                // actulizando paper\n                    PaperDb.doc(paper.id).update(paper).then(()=>{\n                        console.log(\"paper actualizado\")\n                    }).catch(error=>console.log(\"error al actualizar\"))\n\n                }\n\n                // Actualizar paper\n\n\n                const ActualizarPaperEnEtiquetas=(paper)=>{\n                    console.log(paper)\n                    let tag=paper.etiquetas\n                    console.log(tag)\n                    tag.map(valor=>{\n                        Etiquetas.doc(valor.id).collection(\"paper\").doc(paper.id).update(paper).then(()=>{\n                            console.log(\"paper actualizado\")\n                        }).catch(error=>console.log(\"error al actualizar\"))\n                    })\n\n\n                }\n\n                const actualizarVariosPaper =(lista)=>{\n\n                    lista.map(doc=>{\n                         actualizarPaper(doc)\n\n                    })\n\n                }\n                const  ActualizarVariosEtiquetas=async(lista,valor)=>{\n\n                        \n\n\n\n                        \n                        console.log(lista)\n\n                        lista.map(doc=>{\n  \n                                \n                                doc.etiquetas.map(tag=>{\n\n                                    Etiquetas.doc(tag.id).collection(\"paper\").doc(doc.id).update(doc).then(()=>{\n                                        console.log(\"paper actualizado\")\n                                        }).catch(error=>console.log(\"error al actualizar\"))   \n                                })                                        \n                                    })\n                }\n\n\n            \n\n                \n\n\n\n\n\n\n\nexport  {actualizarPaper,ActualizarPaperEnEtiquetas,actualizarVariosPaper,ActualizarVariosEtiquetas}\n\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Papertres.jsx",["327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/AutoCompletarTres.jsx",["358","359","360","361","362","363","364","365","366","367","368"],"/* eslint-disable no-use-before-define */\nimport React,{useState} from 'react';\nimport Chip from '@material-ui/core/Chip';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useEffect } from 'react';\nimport { Grid ,IconButton} from '@material-ui/core';\nimport PostAddIcon from '@material-ui/icons/PostAdd';\nimport LabelIcon from '@material-ui/icons/Label';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Swal from \"sweetalert2\" \nimport Firebase from \"../firebase/firebase\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    margin:\"10px 0px\"\n  },\n}));\n\n\n\n\n\nconst crearEtiqueta=async(valor)=>{\n\n  const id=await Firebase.db.collection(\"etiquetas\").add({descripcion:valor,contar:0}).then((docRef) => {\n    //console.log(\"Document written with ID: \", docRef.id);\n\n    return docRef.id\n})\nreturn id\n}\n\nexport default function Tags(props) {\n  const classes = useStyles();\n  const etiquetas=props.etiquetas\n  const settag=props.settag\n  const tag=props.tag\n  const removerEtiqueta=props.removerEtiqueta\n //const [prueba1,setprueba1] =useState([\"hola\",\"chao\"])\n const [prueba2,setprueba2] =useState(props.tag)\n const [prueba1,setprueba1] =useState([])\n const [tagdos, settagdos] = useState(props.tag)\n\n\n \n   const recorrertag=()=>{\n    \n\n    \n      let resultado=etiquetas.filter(({id:id1})=>tag.some(({id:id2})=>id2===id1))\n      \n\n    console.log(resultado)\n    settagdos(resultado)\n   }\n\n\n   useEffect(() => {\n    recorrertag()\n   }, [props])\n\n  return (\n    <div className={classes.root}>\n     <Grid container>\n        <Grid xs={10}>\n\n        \n      <Autocomplete\n        multiple\n     \n        id=\"tags-filled\"\n        options={etiquetas}\n        value={tagdos}\n        \n        onChange={(event, newValue) => { \n                settag(newValue)\n        }}\n        getOptionLabel={option=>option.descripcion}\n        renderTags={(value, getTagProps) =>{\n          return value.map((option, index) => {\n               return <Chip variant=\"outlined\" label={option.descripcion } {...getTagProps({ index })} />\n          })\n        }}\n        renderInput={(params) => {\n         return  <TextField {...params}   variant=\"outlined\" label=\"Etiquetas\" placeholder=\"Etiquetas\" />\n        }}\n      />\n      </Grid>\n      <Grid xs={2}>\n\n      <IconButton color=\"primary\"  onClick={()=>{\n          Swal.fire({\n     \n            title: 'Ingrese nueva etiqueta',\n            input:\"text\",\n            showCancelButton:true,\n            confirmButtonColor: '#21cbce',\n            cancelButtonColor: '#d33',\n            confirmButtonText:\"Ingresar\",\n           preConfirm:(valor)=>{\n              var coincide=false \n              etiquetas.map((etiquet)=>{\n\n                if(etiquet.descripcion==valor){\n                  coincide=true\n                  \n                }\n              })\n\n             if(coincide){\n              Swal.fire({\n                icon:\"info\",\n                title:\"Ese registro ya esta disponible\"\n              })\n             }else{\n              const id = crearEtiqueta(valor)\n              Swal.fire({\n                icon:\"success\",\n                title:\"Nuevo Registro Creado\"    \n\n              })\n\n             }\n\n}             \n\n          })\n      }}>\n          {/* <PostAddIcon /> */}\n          {/* <LabelIcon></LabelIcon> */}\n          <AddCircleOutlineIcon></AddCircleOutlineIcon>\n        </IconButton>\n      </Grid>\n\n</Grid>\n    </div>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Etiquetas.jsx",["369","370","371","372","373"],"import React ,{useState,useEffect}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nexport default function Chips(props) {\n  const classes = useStyles();\n  const lista=props.etiquetas\n  const [valor, setvalor] = useState(props.etiquetas)\n\n\n  const removerE=props.removerEtiqueta()\n  const handleDelete = () => {\n    console.info('You clicked the delete icon.');\n  };\n\n  const handleClick = () => {\n    console.info('You clicked the Chip.');\n  };\n\nuseEffect(() => {\n  setvalor(props.etiquetas)\n}, [props])\n\n  return (\n    <div className={classes.root}>\n    {valor ?\n\nvalor.map((e) => (\n\n                        <Chip\n                      \n                        key={e.id}\n                        label={e.descripcion}\n                        onClick={handleClick}\n                        onDelete={()=>removerE(e)}\n                        color=\"primary\"\n                       \n                        />\n  \n        ))\n:<div></div>}\n   \n    \n     \n    </div>\n  );\n}\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Paper.jsx",["374","375","376","377","378","379"],"import React from 'react'\nimport {Paper as Papel,Grid,Typography,Chip,Button,IconButton,makeStyles,Link} from \"@material-ui/core\"\nimport Basurero from '@material-ui/icons/Delete';\nimport Lapiz from '@material-ui/icons/Create';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Corazon from '@material-ui/icons/FavoriteBorder';\nimport moment from 'moment' \nimport \"moment/locale/es\"\nimport { useState } from 'react';\nimport Swal from \"sweetalert2\"\nimport firebase from \"../firebase/firebase\"\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport { useContext } from 'react';\nimport { UsuarioContext } from '../Provedores/UsuarioContext';\nimport { useHistory } from 'react-router-dom';\n\n\nconst  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"250px auto \",\n\n\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"228px\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    },\n\n\n\n\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n     \n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    },\n    \"& .botoneditar\":{\n        background:\"#1ab37c\",\n        color:\"#ffffff\",\n        marginTop:\"10px\",\n\n        \"&:hover\": {\n           background:\"#ffffff\",\n           color:\"#1ab37c !important\",\n         },\n\n\n    }\n\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\n\ncontenedor:{\n        margin:\"18px auto\"\n\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n\n        position:\"absolute\",\n        top:\"0\",\n        right:\"0\",\n        width:\"90px\"\n},\ndivFoto:{\n\n    width:\"250px\",\n    height:\"160px\",\n    border:\"2px dashed #21cbce\",\n    display:\"block\",\n    margin:\"16px auto\",\n    position:\"relative\",\n    [theme.breakpoints.down(\"sm\")]:{\n        margin:\"30px auto\"\n}\n},\n\ndivImagen:{\n       \n        height:\"160px\",\n        width:\"260px\",\n        backgroundSize:\"260px auto\",\n        backgroundRepeat:\"no-repeat\",\n        backgroundPosition:\"50%\",\n        borderRadius:\"0\",\n        display:\"block\",\n        margin:\"auto\",\n        marginTop:\"15px\",\n        [theme.breakpoints.down(\"sm\")]:{\n                marginTop:\"30px\"\n        }\n}\n,\ndivTexto:{\n        [theme.breakpoints.down(\"md\")]:{\n\n                margin:\"0vw 5vw 0\"\n        },\n\n\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"5vw 5vw 0\"\n        }\n}\n,\n\n\nimgFoto:{\n    color:\"#21cbce\",\n    position:\"absolute\",\n    margin:\"auto\",\n    top:\"0\",\n    bottom:\"0\",\n    left:\"0\",\n    right:\"0\",\n    fontSize:\"3rem\"\n}\n\n,\n    margenChip:{\n\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n       \n    }\n\n\n\n }))\n\n\n\n\n\nconst Paper = (props) => {\n    const clases =estilos()\n    const history = useHistory();\nconst usuario =useContext(UsuarioContext)\n\nconst [valor, setvalor] = useState(props.Paper)\nconst [paper, setpaper] = useState({})\n\n\nconst buscarChips=(valor)=>{\n        history.push(`/tag/${valor}`)\n      \n    }      \n\n\n\nconst borrar=(e)=>{\n\n\n\n\n    Swal.fire({\n            title: 'Esta seguro que desea borrar el siguiente registro?',\n            text:`${e.titulo}`,\n            showDenyButton: true,\n          \n            confirmButtonText: `Borrar`,\n            denyButtonText: `Cancelar`,\n          }).then((result) => {\n            /* Read more about isConfirmed, isDenied below */\n            if (result.isConfirmed) {\n\n                                    \n                            firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                    console.log(\"Document successfully deleted!\");\n                            }).catch((error) => {\n                                    console.error(\"Error removing document: \", error);\n                            });\n              Swal.fire('Borrado!', '', 'success')\n            } else if (result.isDenied) {\n            \n            }\n          })\n\n        \n}\n\n\nconst megusta=async(valor)=>{\n\n               \n      console.log(valor)\n\n\n        if(usuario==null) {\n                return history.push(\"/login\")\n        }\n\n\n        \n          \n         \n\n        if(valor.haVotado==undefined){                    \n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n         console.log(antiguoHaVotado)\n         console.log(usuario.uid)\n         console.log(antiguoHaVotado.includes(usuario.uid))\n     if(antiguoHaVotado.includes(usuario.uid)){ \n\n                antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                        return obj!==usuario.uid\n                })\n\n\n                console.log(antiguoHaVotado)\n\n                valor.likes=valor.likes-1\n                await firebase.db.collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                        haVotado:antiguoHaVotado\n                })\n                \n                setpaper({...valor,likes:valor.likes})\n              \n\n     }else{ \n        \n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     console.log(nuevoHaVotado)\n     valor.likes=valor.likes+1   \nawait firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n})\n\n     setpaper({...valor,likes:valor.likes})\n      }\n}\n\n\n    return (\n        <div>\n            \n\n\n\n\n            <Papel className={clases.caja} elevation={3}>\n\n\n<Grid container  className={clases.contenedor}>\n\n        <Grid xs={12} sm={12} md={4}>\n                <div>\n\n                     {valor.imagen==null?\n\n\n                    <div className={clases.divFoto}>\n                    < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>  \n\n                    </div> \n                        \n                      \n                      \n                      \n                      :         \n                   <div  className={clases.divImagen} style={{\n                  backgroundImage:`url(${valor.imagen})`,\n                   \n                }} >\n\n                        \n                        </div>\n\n                     }   \n                </div>\n        </Grid>\n\n\n        <Grid xs={12} sm={12} md={5}>\n        <div className={clases.divTexto}>             \n\n\n        <Typography variant=\"h5\" className={clases.titulo} >\n                        {valor.titulo}             \n        </Typography>\n\n        <Typography className={clases.fecha} variant=\"subtitle2\">\n                        {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}    \n        </Typography>\n\n\n        <Typography variant=\"body2\" className={clases.resumen}>\n                {valor.resumen}\n        </Typography>\n\n        <Typography variant=\"subtitle1\">\n\n                {valor.etiquetas.map((valor)=>(\n                \n                <Chip variant=\"outlined\" className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor} />\n                     \n                                ))}\n\n\n        </Typography>\n\n\n        </div>        \n        </Grid>\n\n\n\n\n\n\n        <Grid xs={12} sm={12} md={3}>\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n\n                        <Button\n                         onClick={()=>megusta(valor)}\n                        style={{color:\"#ff0000\",\n                        marginTop:\"40px\"\n                }}\n                        startIcon={<Corazon></Corazon>}\n                        >\n\n                                {valor.likes}\n                        </Button>\n\n        </Typography>\n\n\n        <Typography variant=\"subtitle1\" align=\"center\">\n        <a href={valor.pdf}  style={{textDecoration:\"none\"}} target=\"_blank\">                                               \n        <Button  className=\"botoneditar\" variant=\"contained\"\n        \n        startIcon={<InsertDriveFileIcon />}\n        \n        >\n\n                pdf \n        </Button>\n\n        </a>     \n\n        </Typography>\n\n          \n        {usuario==null?\n\n\n                                                      \n<div></div>\n:\n\n\nusuario.administrador?\n\n<div className={clases.diveditarborrar}>          \n\n<Grid container>\n        \n         <Grid xs={6}>\n        \n                <Typography variant=\"subtitle1\" align=\"center\">\n                        <Link to={`/editarpaper/${valor.id}`}>\n                                <IconButton  variant=\"outlined\" color=\"primary\">\n                                <Lapiz></Lapiz>\n                                </IconButton>\n                        </Link>\n\n                </Typography>\n        </Grid>\n        <Grid  xs={6}>\n                <Typography variant=\"subtitle1\" align=\"center\">\n\n                <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                        <Basurero></Basurero>    \n                </IconButton>\n\n                </Typography>\n        </Grid>\n</Grid>\n</div>                              \n\n:\n<div></div>\n\n}  \n\n\n\n        </Grid>\n\n\n\n</Grid>\n\n\n\n\n\n\n</Papel>\n\n\n        </div>\n    )\n}\n\nexport default Paper\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Caja.jsx",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422"],"import React,{useEffect,useState} from 'react'\nimport {Grid,makeStyles, Typography, Button,IconButton,CircularProgress, setRef} from \"@material-ui/core\"\nimport Paper from '@material-ui/core/Paper';\nimport firebase from '../firebase/firebase'\nimport moment from 'moment'\nimport {Link} from 'react-router-dom'\nimport Swal from 'sweetalert2'\nimport {Chip} from '@material-ui/core'\nimport \"moment/locale/es\"\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\n//import Corazon from '@material-ui/icons/FavoriteBorder';\nimport Basurero from '@material-ui/icons/Delete';\n//import CorazonLleno from '@material-ui/icons/Favorite';\nimport Lapiz from '@material-ui/icons/Create';\nimport AddAPhotoIcon from '@material-ui/icons/AddAPhoto';\nimport {UsuarioContext} from \"../Provedores/UsuarioContext\"\nimport { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Alert from '@material-ui/lab/Alert';\nimport CorazonLleno from \"../imagen/iconos/arbolLleno.png\"\nimport Corazon from \"../imagen/iconos/arbolVacio.png\"\nimport FuncionesFirebase from \"../Funciones/FuncionesFirebase\"\nimport PublicIcon from '@material-ui/icons/Public';\n\n\n\n\n const  estilos = makeStyles((theme)=>({\n\n\n    margen:{\n\n            margin:\"45px auto \",\n\n\n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n            \"& .botonCollaborate\":{\n                background:\"#ffffff\",\n                color:\"#1ab37c !important\",\n                fontSize:'12px',\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            },\n\n            \" & .MuiButton-containedPrimary:hover\" :{\n                backgroundColor: \"#303f9f00\",\n                color:\"#5fcccf\",\n                border:\"1px solid\"\n            },\n\n            \"& .botoneditar\":{\n                background:\"#4a9341\",\n                color:\"#ffffff\",\n                marginTop:\"10px\",\n\n                \"&:hover\": {\n                   background:\"#ffffff\",\n                   color:\"#1ab37c !important\",\n                 },\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n    },\n    caja:{\n        position:\"relative\",\n        width:\"80vw\",\n        margin:\"20px auto\",\n        display:\"block\",\n        height:\"unset\",\n        borderRadius:\"10px\",\n    transition:\"background-color .25s,color .25s,box-shadow .25s\",\n    boxShadow:\"0 8px 42px -8px rgb(0 0 0 / 20%)\",\n    border:\"1px solid #f0f0f0\",\n    [theme.breakpoints.down(\"md\")]:{\n        height:\"unset\"\n    }\n\n    }\n\n,\n    titulo:{\n\n        fontWeight:\"500\",\n        fontFamily:\"nunito\"\n    }\n,\n        tituloGeneral:{\n\n        fontWeight:\"700\",\n        fontFamily:\"Lato\",\n        fontSize:\"27px\"\n        }\n,\ndivTituloGeneral:{\n        margin:\"0px auto\",\n        width:\"85vw\"\n},\nfecha:{\n        fontWeight:\"500\",\n        fontFamily:\"nunito\",\n        paddingTop:\"5px\",\n        color:\"#717171\"\n},\ncontenedor:{\n        margin:\"18px auto\"\n},\nresumen:{\n        fontFamily:\"nunito\",\n        margin:\"15px auto\"\n},\ndiveditarborrar:{\n        position:\"absolute\",\n        bottom:\"0\",\n        right:\"9px\",\n        width:\"90px\"\n},\ndivFoto:{\n\n        width:\"250px\",\n        height:\"160px\",\n        border:\"2px dashed #21cbce\",\n        display:\"block\",\n        margin:\"16px auto\",\n        position:\"relative\",\n        [theme.breakpoints.down(\"sm\")]:{\n                margin:\"30px auto\"\n        }\n    },\n    divImagen:{\n\n         height:\"160px\",\n         width:\"260px\",\n         backgroundSize:\"260px auto\",\n         backgroundRepeat:\"no-repeat\",\n         backgroundPosition:\"50%\",\n         borderRadius:\"16px\",\n         display:\"block\",\n         margin:\"auto\",\n         marginTop:\"15px\",\n         [theme.breakpoints.down(\"sm\")]:{\n                 marginTop:\"30px\"\n         }\n\n\n\n      },\n\n    imgFoto:{\n        color:\"#21cbce\",\n        position:\"absolute\",\n        margin:\"auto\",\n        top:\"0\",\n        bottom:\"0\",\n        left:\"0\",\n        right:\"0\",\n        fontSize:\"3rem\"\n    },\n    cajaMeGusta:{\n            position:'absolute',\n            top:'8px',\n            right:'12px',\n    [theme.breakpoints.down(\"sm\")]:{\n            position:'unset'\n    }\n\n\n    },\n    divCircular:{\n        marginTop:\"100px\"\n\n    }\n    ,botonLikes:{\n        color:\"#35b37c\",\n        margin:\"8px 0px 0x 0px\",\n        border:\"1px solid\"\n\n\n    },\n    margenChip:{\n\n        margin:\"0px 3px\",\n        [theme.breakpoints.down(\"sm\")]:{\n\n                margin:\"0px 4px\"\n        }\n\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n        divTexto:{\n                [theme.breakpoints.down(\"md\")]:{\n\n                        margin:\"0vw 5vw 0\"\n                },\n\n\n\n                [theme.breakpoints.down(\"sm\")]:{\n\n                        margin:\"5vw 5vw 0\"\n                }\n        },\n        textNoDisponible:{\n\n\n                fontFamily:\"Nunito\",\n                color:\"#808080\"\n\n\n\n\n        },\n        centrarComponente:{\n                textAlign:\"end\",\n                marginRight:\"10px\",\n                [theme.breakpoints.down(\"md\")]:{\n\n                        textAlign:\"center\",\n                }\n\n        },\n        botonPdf:{\n                position:\"absolute\",\n                bottom:\"55px\",\n                right:'0px',\n                [theme.breakpoints.down(\"sm\")]:{\n                        position:'unset'\n                }\n        }\n,\n        textUpVote:{\n           fontFamily:\"nunito\",\n           textAlign:\"center\",\n           color:\"#808080\"     \n        }\n\n\n\n\n\n }))\n\n\n\n\nconst Caja = (props) => {\n\n    const history = useHistory();\n    const clases =estilos()\n    const usuario =useContext(UsuarioContext)\n    const [listapaper,setlistapaper]=useState([])\n    const [cargando, setcargando] = useState(false)\n    const [cargandodos, setcargandodos] = useState(false)\n    const [paper, setpaper] = useState({})\n    const [ultimoDocumento, setultimoDocumento] = useState(0)\n   const [vacio, setvacio] = useState(false)\n  const [tituloGeneral,setTituloGeneral]=useState(\"The Lastest\")\n\n\n\n\n const listadepaper=async(recientes,valorados)=>{\n\n\n        try {\n\n        if(recientes){\n                setlistapaper([])\n                await firebase.db.collection(\"paper\").orderBy(\"subida\",\"desc\").limit\n                (5).get().then((coleccion)=>\n                {\n\n                            if(coleccion.size!=0){\n                                        console.log(\"paso por aca \")\n                                        const lista =coleccion.docs.map((paperObje)=>{return {...paperObje.data(),\n                                        click:false\n                                        }})\n                                        setultimoDocumento(lista[lista.length-1].id)\n                                        setlistapaper((listapaper)=>[...listapaper,...lista])\n                                        setcargando(false)\n\n                                }\n                                if(coleccion.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                }\n\n                )\n        }else{\n                if(valorados){\n                        setlistapaper([])\n                       await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n\n                         let nuevalista=[]\n                            await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                                nuevalista=valor.docs.map(doc=>{\n\n                                                          return{\n                                                                id:doc.id,\n                                                                ...doc.data()\n                                                            }\n\n                                })\n\n                                if(nuevalista.length==5){\n                                        setvacio(true)\n                                }else{\n                                        setvacio(false)\n                                }\n\n                                if(nuevalista.length==0){\n                                        setultimoDocumento(0)\n                                }else{\n                                setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                                 }\n\n\n                           })\n\n\n\n\n                           console.log(\"paso por aca \")\n                        setlistapaper(nuevalista)\n\n\n\n\n\n\n                }\n\n\n        }\n\n        } catch (error) {\n                console.log(error)\n        }\n        setcargando(false)\n }\n\n//  const  manejarSnapshot=(snapshot)=>{\n\n\n\n//         console.log(listapaper)\n//         const  lista =snapshot.docs.map(doc=>{\n//             return{\n//                 id:doc.id,\n//                 ...doc.data()\n//             }\n//         })\n//         console.log(lista)\n//         setcargando(false)\n\n//                 if(lista.length!=0){\n//                         setvacio(false)\n//                         setultimoDocumento(lista[lista.length-1].id)\n\n//                 }else{\n\n//                         setvacio(true)\n\n//                 }\n//         setlistapaper(lista)\n//     }\n\n\n\n\n\n//nueva funcion de busqueda\n\nconst buscarTexto=async(texto_busqueda,recientes,valorados)=>{\n\n\n        setcargando(true)\n\n        try {\n\n                if(recientes){\n                        console.log(texto_busqueda)\n                        setlistapaper([])\n                        await firebase.db.collection(\"paper\").orderBy(\"busqueda\")\n                        .startAt(texto_busqueda).endAt(texto_busqueda+'\\uf8ff')\n                       .limit(5).get().then((coleccion)=>\n                        {\n\n                                    if(coleccion.size!=0){\n\n                                                const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                                console.log(lista)\n                                                console.log(listapaper)\n\n\n                                                setultimoDocumento(lista[lista.length-1].id)\n                                                setlistapaper((listapaper)=>[...listapaper,...lista])\n                                                setcargando(false)\n\n                                        }\n                                        if(coleccion.length==5){\n                                                setvacio(true)\n                                        }else{\n                                                setvacio(false)\n                                        }\n\n                        }\n\n                        )\n                }else{\n                        // if(valorados){\n                        //         setlistapaper([])\n                        //        await  firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").limit(5).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1].id)\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                        //                                 setcargando(false)\n\n                        //                         }\n                        //                         if(coleccion.length==5){\n                        //                                 setvacio(true)\n                        //                         }else{\n                        //                                 setvacio(false)\n                        //                         }\n\n                        //         }\n\n                        //         )\n                        // }else{\n\n                        //          let nuevalista=[]\n                        //             await firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").limit(5).get().then(valor=>{\n\n\n                        //                 nuevalista=valor.docs.map(doc=>{\n\n                        //                                           return{\n                        //                                                 id:doc.id,\n                        //                                                 ...doc.data()\n                        //                                             }\n\n                        //                 })\n\n                        //                 if(nuevalista.length==5){\n                        //                         setvacio(true)\n                        //                 }else{\n                        //                         setvacio(false)\n                        //                 }\n\n                        //                 if(nuevalista.length==0){\n                        //                         setultimoDocumento(0)\n                        //                 }else{\n                        //                 setultimoDocumento(nuevalista[nuevalista.length-1].id)\n                        //                  }\n\n\n                        //            })\n\n\n\n\n                        //            console.log(\"paso por aca \")\n                        //         setlistapaper(nuevalista)\n\n\n\n\n\n\n                        // }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n                setcargando(false)\n\n\n\n}\n\n\nconst pedirpaper=()=>{\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\nconst {papermatch}=props.paperid\n\nif(papermatch){\n\n        buscarPorId(papermatch)\n\n}else{\n\n  // LLAMAR A LOS PAPER\n\n\n\n  listadepaper(props.recientes,props.valorados)\n\n}\n\n}\n\n\n\n\n\n\n\nconst borrar=(e)=>{\n\n\n\n\n        Swal.fire({\n                title: '¿Esta seguro que desea borrar el siguiente registro?',\n                text:`${e.titulo}`,\n                showDenyButton: true,\n                confirmButtonColor: '#21cbce',\n                confirmButtonText: `Borrar`,\n                denyButtonText: `Cancelar`,\n              }).then((result) => {\n                /* Read more about isConfirmed, isDenied below */\n\n                 if (result.isConfirmed) {\n                                console.log(\"paso por el borrado\")\n                                console.log(e.id)\n                                firebase.db.collection(\"paper\").doc(e.id).delete().then(() => {\n                                        let nuevaLista=[]\n                                        listapaper.map((valor)=>{\n                                                        if(valor.id!=e.id){\n                                                                console.log(valor)\n                                                                nuevaLista.push(valor)\n                                                        }\n\n                                        })\n\n\n                                        //pedirpaper()\n\n                                console.log(\"borrado\")\n\n                                }).catch((error) => {\n                                        console.error(\"Error removing document: \", error);\n                                });\n\n\n                                e.etiquetas.map( valor=>{\n\n                                        firebase.db.collection(\"etiquetas\").doc(valor.id).collection(\"paper\").doc(e.id).delete().then(async() => {\n                                             //  console.log(\"Document successfully deleted!\");\n\n\n\n                                              let soloTag=await firebase.db.collection(\"etiquetas\").doc(valor.id).get().then((doc)=>{\n\n\n                                                        return{...doc.data()}\n\n                                              })\n\n                                                console.log(soloTag)\n                                                let nuevoObjeto={  ...soloTag,\n                                                        contar:soloTag.contar-1}\n\n                                                  console.log(nuevoObjeto)\n\n                                                firebase.db.collection(\"etiquetas\").doc(valor.id).set(nuevoObjeto)\n\n\n                                        }).catch((error) => {\n                                            console.error(\"Error removing document: \", error);\n                                        });\n\n\n                                    })\n\n\n\n\n\n\n\n\n                                   try {\n                                        var  borrarArchivo= firebase.storage.ref().child(\"PDF\").child(e.id)\n                                        var  borrarImagen= firebase.storage.ref().child(\"IMAGEN\").child(e.id)\n\n\n                                   } catch (error) {\n                                    console.log(error)\n                                   }\n\n\n\n\n                              console.log(borrarArchivo)\n                              console.log(borrarImagen)\n\n\n                                   if(borrarArchivo!=undefined){\n                                                borrarArchivo.delete().then(function() {\n                                                        //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                }).catch(function(error) {\n\n                                                                console.log(error)\n                                                        //console.log(error)\n                                                        // Uh-oh, an error occurred!m\n                                                });\n\n                                        }\n                                if(borrarImagen!=undefined){\n\n\n                                                if(e.imagen!=null){ borrarImagen.delete().then(function() {\n                                                                //console.log(\"borrado\")\n                                                        // File deleted successfully\n                                                        }).catch(function(error) {\n                                                                console.log(error)\n                                                        // Uh-oh, an error occurred!\n                                                        }); }\n                                }\n\n\n                  Swal.fire({title:'Borrado!', confirmButtonColor:'#21cbce',icon: 'success'}).then(()=>{\n                          pedirpaper()\n                  })\n                } else if (result.isDenied) {\n\n                }\n              })\n\n\n}\n\n\n\n\n useEffect(() => {\n\n//buscar si  ahi un paper en especifico\n//\nsetcargando(true)\n\nconst {papermatch}=props.paperid\n\nif(papermatch){\n\n        buscarPorId(papermatch)\n\n}else{\n\n  // LLAMAR A LOS PAPER\n\n\n\n  listadepaper(props.recientes,props.valorados)\n\n}\n\n                // if(props.busqueda!=undefined){\n                //         const texto_busqueda=props.busqueda.buscado\n                //         buscarTexto(texto_busqueda,props.recientes,props.valorados)\n                // }\n                //else{\n                // pedirpaper()\n                // }\n\n                //    console.log(listapaper)\n                //    setlistapaper([])\n\n }, [props.recientes,props.paperid,props.busqueda])\n\n\n\n\n const funcionCorazon=(valor)=>{\n\n        let votos_usuarios=[]\n\n        if(valor.haVotado==undefined){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n        votos_usuarios=valor.haVotado\n        if(votos_usuarios.length==0){\n                console.log(\"paso por aca dodo\")\n                return false\n        }else{\n\n                if(usuario!=undefined){\n                if(votos_usuarios.includes(usuario.uid)){\n                        return true\n                }else{\n                        return false\n                }}\n\n        }\n}\n\n\n\n }\n\n\n\n\n const funcionCorazondos=(valor)=>{\n\n             if(valor.likes>0){\n                 return true       \n             }else{\n                return false\n             }\n\n\n\n }\n\n\n\n\n\n  const pedirMas=async()=>{\n                setcargandodos(true)\n                const recientes=props.recientes\n                const valorados=props.valorados\n                const paperRef=firebase.db.collection(\"paper\")\n\n\n        try {\n\n                if(recientes){\n\n\n\n\n                        return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                        {\n                           //     console.log(doc)\n                          var valoradosOrdenados = await paperRef.orderBy(\"subida\",\"desc\").startAfter(doc).limit(5).get()\n\n                                if(valoradosOrdenados.size!=0){\n\n                             //      console.log(valoradosOrdenados)\n                                 const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                 setultimoDocumento(lista[lista.length-1].id)\n                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n                                 setcargandodos(false)\n                        }else{\n\n                                setvacio(false)\n                                setcargandodos(false)\n                          }\n\n                        }\n                        )\n\n\n\n\n\n\n                }else{\n\n\n                        if(valorados){\n\n\n\n                                // const valoradosRef=firebase.db.collection(\"paper\")\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"likes\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                           console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n                                // firebase.db.collection(\"paper\").orderBy(\"likes\",\"desc\").startAfter(ultimoDocumento).limit(5).get().then((coleccion)=>\n                                // {\n\n\n                                //                 console.log(\"dentro de la coleccion \")\n\n                                //             if(coleccion.size!=0){\n\n                                //                         const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                                //                         setultimoDocumento(lista[lista.length-1].likes)\n                                //                         setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                                //                 }else{\n\n                                //                       setvacio(true)\n                                //                 }\n                                // }\n\n                                // )\n                        }else{\n\n\n                                return paperRef.doc(ultimoDocumento).get().then(async(doc)=>\n                                {\n                                        //console.log(doc)\n                                  var valoradosOrdenados = await paperRef.orderBy(\"id\",\"desc\").startAfter(doc).limit(5).get()\n\n                                        if(valoradosOrdenados.size!=0){\n\n                                          // console.log(valoradosOrdenados)\n                                         const lista =valoradosOrdenados.docs.map((paperObje)=>paperObje.data())\n                                         setultimoDocumento(lista[lista.length-1].id)\n                                         setlistapaper((listapaper)=>[...listapaper,...lista])\n                                         setcargandodos(false)\n\n                                }else{\n\n                                        setvacio(false)\n                                        setcargandodos(false)\n                                  }\n\n                                }\n                                )\n\n\n\n\n\n\n\n                                // comentar\n                        //       firebase.db.collection(\"paper\").orderBy(\"id\",\"desc\").startAfter(ultimoDocumento).limit(1).get().then((coleccion)=>\n                        //         {\n\n                        //                     if(coleccion.size!=0){\n\n                        //                                 const lista =coleccion.docs.map((paperObje)=>paperObje.data())\n                        //                                 setultimoDocumento(lista[lista.length-1])\n                        //                                 setlistapaper((listapaper)=>[...listapaper,...lista])\n\n                        //                         }else{\n\n                        //                               setvacio(true)\n                        //                         }\n                        //         }\n\n                        //         )\n                        }\n\n\n                }\n\n                } catch (error) {\n                        console.log(error)\n                }\n\n\n\n\n  }\n\n\n // buscar por id del paper\n\n  const buscarPorId=async(id)=>{\n//  alert(id)\n  var variable=await firebase.db.collection(\"paper\").doc(id)\n //console.log(variable)\n\n\n variable.get().then((doc) => {\n        // Document was found in the cache. If no cached document exists,\n        // an error will be returned to the 'catch' block below.\n       // console.log(\"Cached document data:\", doc.data());\n        setlistapaper([doc.data()])\n\n        setcargando(false)\n        setvacio(false)\n\n    }).catch((error) => {\n        console.log(\"Error getting cached document:\", error);\n    });\n\n\n\n  }\n\n\n  const buscarChips=(valor)=>{\n\n\n        history.push(`/tag/${valor.id}`)\n\n  }\n\n\n\nconst megusta=(valor)=>{\n\n\n        // if(usuario==null) {\n        //         return history.push(\"/login\")\n        // }\n\n\n\n\n          console.log(valor.haVotado)\n\n        if(valor.haVotado==undefined){\n                var antiguoHaVotado=[]\n         }else{\n                var antiguoHaVotado=valor.haVotado\n         }\n\n\n     if(antiguoHaVotado.includes(usuario.uid)){\n             console.log(antiguoHaVotado)\n\n        antiguoHaVotado=antiguoHaVotado.filter(function(obj){\n                return obj!==usuario.uid\n        })\n        valor.likes=valor.likes-1\n\n        let  nuevoValor={\n                ...valor,\n                 likes:valor.likes,\n                haVotado:antiguoHaVotado\n        }\n\n\n        firebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n\n        // armar de nuevo el arreglo con el valor\n\n         armararreglo(nuevoValor)\n\n       // mapear etiquetas\n\n        valor.etiquetas.map(valordos=>{\n                firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                        ...valor,\n                        likes:valor.likes,\n                       haVotado:antiguoHaVotado\n\n                })\n        })\n\n\n         //setpaper({...valor,likes:valor.likes})\n        // actualizar la etiquetas\n\n\n\n\n\n\n\n     }else{\n\n     const nuevoHaVotado = [...antiguoHaVotado, usuario.uid];\n     valor.likes=valor.likes+1\n\n\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\nfirebase.db.collection(\"paper\").doc(valor.id).update(nuevoValor)\n\n      // mapear etiquetas\n\n      valor.etiquetas.map(valordos=>{\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n      }\n      console.log(\"final\")\n}\n\n\nconst megustaSinValidarUsuario=(valor)=>{\n    \n\n   if(valor.click){    \n     valor.likes=valor.likes-1\n     valor.click=false\n}else{\n     valor.likes=valor.likes+1\n     valor.click=true\n}\n\n     const nuevoHaVotado = [];\n     let  nuevoValor={\n        ...valor,\n         likes:valor.likes,\n        haVotado:nuevoHaVotado\n        }\n\n\n\n       //guarda datos en el paper\n       firebase.db.collection(\"paper\").doc(valor.id).update({\n        ...valor,\n        likes:valor.likes,\n        haVotado:nuevoHaVotado\n\n})\n\n      // mapear etiquetas\n      valor.etiquetas.map(valordos=>{\n\n        //guarda datos  en las etiquetas\n        firebase.db.collection(\"etiquetas\").doc(valordos.id).collection(\"paper\").doc(valor.id).update({\n                ...valor,\n                likes:valor.likes,\n                haVotado:nuevoHaVotado\n\n        })\n})\n\narmararreglo(nuevoValor)\n     //setpaper({...valor,likes:valor.likes})\n\n     // }\n      console.log(\"final\")\n}\n\nconst armararreglo=(nuevoValor)=>{\n\n\n                 let   nuevalista=listapaper.map(valor=>{\n\n                                if (nuevoValor.id==valor.id){\n\n                                        return{\n                                                ...nuevoValor\n                                        }\n                                }else{\n\n                                        return{ ...valor}\n                                }\n\n\n\n                 })\n\n\n                 console.log(nuevalista)\n                 setlistapaper(nuevalista)\n\n\n}\n\n\nconst dejarUnaColaboracion=async()=>{\n\n        const { value: text } = await Swal.fire({\n          input: 'textarea',\n          title: 'Would you like to collaborate?',\n          inputPlaceholder: 'Please tell us about the environmental software or sources of environmental information that you know',\n          confirmButtonColor: '#21cbce',\n          denyButtonText: `Cancel`,\n          confirmButtonText: `Send`,\n          showDenyButton: true,\n        })\n    \n        if (text) {\n    \n    \n    \n    \n    \n          let user=\"anonimo\"\n          let anonimo=true\n    \n          if(usuario!=null){\n            user={\n              nombre:usuario.displayName,\n              email:usuario.email,\n              imagen:usuario.photoURL\n            }\n            anonimo=false\n    \n          }\n          //Swal.fire(text)\n    \n    \n          let Comentario={\n            fecha: new Date(),\n            usuario:user,\n            comentario:text,\n            anonimo\n          }\n    \n          console.log(Comentario)\n    \n           FuncionesFirebase.IngresarColaboracion(Comentario)\n        }\n    \n    \n    \n      }\n    \n    \n\n    return (\n\n\n\n// <Button onClick={()=>{pedirMas()}} >\n//                             ver mas\n// </Button>\n\n\n\n\n\n        <div  className={clases.margen}>\n\n\n                <div className={clases.divTituloGeneral}>\n\n                <Grid container>\n                <Grid xs={8} md={10}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                                {props.textoGeneral}\n                        </Typography>\n                </Grid>\n\n                <Grid xs={4} md={2}>\n\n                                 <Button  onClick={()=>dejarUnaColaboracion()} className=\"botonCollaborate\" variant=\"contained\"\n\n                                                startIcon={<PublicIcon />}\n\n                                                >\n\n                                                        Collaborate\n                                                </Button>\n\n\n                </Grid>\n                </Grid>\n                </div>\n\n                <Grid container>\n                    <Grid  xs={12}>\n                            {\n                            cargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                           { listapaper.length==0 ?\n                              <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>\n\n\n                           :\n\n                           <div>\n                                {\n\n                            listapaper.map((valor)=>(\n\n                                        <Paper key={valor.id} className={clases.caja} elevation={3}>\n                                        <Grid container  className={clases.contenedor}>\n                                                <Grid xs={12} sm={12} md={4} >\n                                                        <div  >\n\n                                                             {valor.imagen==null?\n\n                                                              <div className={clases.divFoto}>\n                                                                        < AddAPhotoIcon className={clases.imgFoto}></AddAPhotoIcon>\n\n                                                              </div> :\n                                                           <div   className={clases.divImagen} style={{\n                                                          backgroundImage:`url(${valor.imagen})`,\n\n                                                        }} >\n\n\n                                                                </div>\n\n                                                             }\n                                                        </div>\n                                                </Grid>\n\n\n                                                <Grid  xs={12} sm={12} md={6}>\n                                                   <div className={clases.divTexto}>\n\n                                                <Typography variant=\"h5\" className={clases.titulo} >\n                                                                {valor.titulo}\n                                                </Typography>\n\n                                                        <Typography className={clases.fecha} variant=\"subtitle2\">\n                                                                {moment(new Date(valor.subida.seconds*1000)).format(\"D MMM YYYY\")}\n                                                </Typography>\n\n\n\n\n\n                                                <Typography variant=\"body2\" className={clases.resumen}>\n                                                        {valor.resumen}\n                                                </Typography>\n\n                                                <Typography variant=\"subtitle1\">\n\n                                                        {valor.etiquetas.map((valor)=>(\n                                                //      <Link style={{textDecoration:\"none\"}} to={`/etiquetas/${valor}`}>\n                                                        <Chip variant=\"outlined\"  className={clases.margenChip} onClick={()=>buscarChips(valor)} color=\"primary\" size=\"small\" label={valor.descripcion} />\n                                                //    </Link>\n                                                                        ))}\n\n\n                                                </Typography>\n\n                                                </div>\n\n                                                </Grid>\n\n                                                <Grid xs={12} sm={12} md={2}>\n                                                <div className={clases.cajaMeGusta}>\n                                                                 <Typography className={clases.centrarComponente} variant=\"subtitle1\" >\n\n                                                                <Button onClick={()=>megustaSinValidarUsuario(valor)}\n                                                                className={clases.botonLikes}\n                                                                startIcon={\n\n                                                                funcionCorazondos(valor)?\n                                                                // <CorazonLleno></CorazonLleno>\n                                                                <>\n                                                                <img height=\"25\" src={CorazonLleno}></img>\n                                                                \n                                                                </>\n                                                                :\n\n                                                                //  <Corazon></Corazon>\n                                                                <>\n                                                                <img  height=\"25\"  src={Corazon}></img>\n                                                               \n                                                                </>\n\n                                                               }\n                                                                >\n\n                                                                        {valor.likes}\n                                                                </Button>\n\n                                                                <Typography className={clases.textUpVote} variant='subtitle2' >\n                                                                 upvote\n                                                                 </Typography>\n                                                                \n\n                                                </Typography>\n                                                </div>\n                                               \n                                               \n                                               \n                                               <div className={clases.botonPdf}>\n                                                <Typography  className={clases.centrarComponente} variant=\"subtitle1\"\n                                                          >\n\n\n\n\n                                                <a href={valor.pdf==null?\n                                                    valor.link:valor.pdf\n                                                }  style={{textDecoration:\"none\"}} target=\"_blank\">\n                                                <Button  className=\"botoneditar\" variant=\"contained\"\n\n                                              \n\n                                                >\n\n                                                        get it\n                                                </Button>\n\n                                                </a>\n\n                                                </Typography>\n                                                </div>        \n\n                                              {usuario==null?\n\n\n\n                                                        <div></div>\n                                                        :\n\n\n                                                        usuario.administrador?\n\n                                                        <div className={clases.diveditarborrar}>\n\n                                                        <Grid container>\n\n                                                                 <Grid xs={6}>\n\n                                                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                                                                <Link to={`/editarpaper/${valor.id}`}>\n                                                                                        <IconButton  variant=\"outlined\" color=\"primary\">\n                                                                                        <Lapiz></Lapiz>\n                                                                                        </IconButton>\n                                                                                </Link>\n\n                                                                        </Typography>\n                                                                </Grid>\n                                                                <Grid  xs={6}>\n                                                                        <Typography variant=\"subtitle1\" align=\"center\">\n\n                                                                        <IconButton  variant=\"contained\"  color=\"primary\"  onClick={()=>borrar(valor)}>\n                                                                                <Basurero></Basurero>\n                                                                        </IconButton>\n\n                                                                        </Typography>\n                                                                </Grid>\n                                                        </Grid>\n                                             </div>\n\n                                                 :\n                                                 <div></div>\n\n                                                        }\n       </Grid>\n\n\n\n                                        </Grid>\n\n\n\n\n\n\n                                        </Paper>\n                            ))\n                            }\n\n\n\n\n\n\n\n\n\n                            </div>\n                         }\n\n                            {cargandodos?\n\n<div className={clases.divCircular} >\n<CircularProgress className={clases.circular}></CircularProgress>\n</div>\n\n\n\n:\n\n// vacio==true &&\n\n        <Typography align=\"center\">\n        <Button\n\n                endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                variant =\"contained\"\n                className=\"botonVerMas\"\n\n        onClick={()=>{\n                pedirMas()\n        }} >\n        See More\n\n                </Button>\n</Typography>   }\n\n\n\n\n\n\n                            </div>\n                            }\n\n\n\n\n                     </Grid>\n\n\n                </Grid>\n\n\n        </div>\n\n )\n}\n\nexport default Caja\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/BotonFlotante.jsx",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/config.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/Funciones.js",["423"],"\nimport Firebase from '../firebase/firebase'\n\n\n// retorna el paper por id\nconst RetornarPaper=async(id)=>{\n\n   const consulta= await Firebase.db.collection(\"paper\").doc(id).get().then(docRef=>{return{id:docRef.id,...docRef.data()}})\n   console.log(consulta)\n   return consulta\n\n}\n\n// renovar papers  segun el mapeo de etiquetas \n\nconst RenovarPaperMapEtiqueta=(paper)=>{\n    console.log(\"hola mundo\")\n    console.log(paper)\n    const etiquetas=paper.etiquetas\n    const consulta=Firebase.db.collection(\"etiquetas\")\n\n    etiquetas.map(tag=>{\n\n         consulta.doc(tag.id).collection(\"paper\").doc(paper.id).update(paper)\n\n\n    })\n\n\n\n}\n\n\n\n\n\n\n\n\nexport {RetornarPaper,RenovarPaperMapEtiqueta}","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Search.jsx",["424"],"import React,{useState}  from 'react'\nimport Caja from \"../Componetes/CajaBusqueda\"\nimport BotonFlotante from \"../Componetes/BotonFlotante\"\nimport { useEffect } from 'react'\nimport {UsuarioContext} from '../Provedores/UsuarioContext'\nimport { useContext } from 'react'\nimport { withRouter } from \"react-router\";\nimport { useLocation } from \"react-router-dom\";\n\n\nconst Inicio = (props) => {\n\n    // const [state, setstate] = useState(props.recientes)\n    const usuario = useContext(UsuarioContext)\n  const [busqueda, setbusqueda] = useState()\n    const location = useLocation();\n\nuseEffect(() => {\n   \n\n        console.log(location.state)\n        console.log(\"paso por aca\")\n\n    try {\n        if(location.state!==undefined){\n\n\n            setbusqueda(location.state)\n            // const {paper}=props.match.params\n            //  const{buscado}=props.match.params\n            //  console.log(props.match.params)\n       \n            // setpapermatch(paper)    \n        }\n      \n        \n    } catch (error) {\n       \n    }\n \n\n}, [props])\n\n    return (\n       \n        <div>  \n            <Caja  busqueda={busqueda}  textoGeneral={props.textoGeneral} valorados={props.valorados} recientes={props.recientes} paperid={props.match.params} >\n                \n            </Caja>\n        \n        {usuario?\n           <div>\n               {usuario.administrador? <div>\n                <BotonFlotante>\n               \n               </BotonFlotante>\n               </div>:\n               <div></div>\n               }\n           \n            </div>:\n            <></>\n        }\n       \n        </div>\n\n    )\n}\n\nexport default withRouter(Inicio)\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/CajaBusqueda.jsx",["425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Usuarios.jsx",["463","464","465","466","467","468","469","470","471"],"import React,{useEffect,useState} from 'react'\nimport { Grid,Typography, Avatar, makeStyles,CircularProgress,Button } from '@material-ui/core'\nimport firebase from '../firebase/firebase'\nimport userImagen from \"../imagen/user.png\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nconst estilos=makeStyles((theme)=>({\n\n\n    root:{\n\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n    },\n\n\n\n    tituloGeneral:{\n\n        fontWeight:\"700\",\n        fontFamily:\"Lato\",\n        fontSize:\"27px\"\n        },                     \n        divTituloGeneral:{\n                margin:\"55px auto\",\n                width:\"85vw\"\n        },\n        textNoDisponible:{\n\n\n            fontFamily:\"Nunito\",\n            color:\"#808080\"\n\n    },\n\n    divCircular:{\n        marginTop:\"100px\",\n        width:\"inherit\"\n\n    },\n    circular:{\n        height:\"72px !important\",\n        width:\"72px !important\",\n        display:\"block\",\n        margin:\"auto\"\n        },\n\n\n}))\n\n\n\n\nconst Usuarios = () => {\n\n const clases=estilos()   \n\n // solicitud maxima de usarios \nconst usuariosSolicitados=3\n//usuarios mostrados\nconst usuariosMostrados=2\n\nconst [usuarios, setusuarios] = useState([])\nconst [ultimo, setultimo] = useState()\nconst [vacio, setvacio] = useState(false)\nconst usuariosRef=firebase.db.collection(\"usuarios\")\n\nconst [cargando, setcargando] = useState(false)\n\n\n    const listAllUsers =async()=> {\n    \n        \n    // crear nueva lista \n        let  nuevalista=[]\n        await usuariosRef.orderBy(\"nombre\",\"asc\").get().then(doc=>{\n            //console.log(doc.docs)\n            //   reducir a uno la lista \n \n            //    for(let i=0;i<)    \n                let tamaño=doc.docs.length\n               \n                for(let i=0;i<tamaño;i++){\n\n                    console.log(doc.docs[i].data())\n                    nuevalista.push(doc.docs[i].data())\n                }\n\n                //setultimo(doc.docs[usuariosMostrados-1].id)\n    \n                if(tamaño==usuariosSolicitados){\n                            setvacio(false)\n                    }else{\n                            setvacio(true)\n                    } \n        })\n         setusuarios(nuevalista)\n         setcargando(false)   \n\n    }\n    \n\n    const pedirMas =async()=> {\n    \n        try{\n                        // crear nueva lista \n                            let  nuevalista=[]\n\n\n                            await usuariosRef.doc(ultimo).get().then(async(doc)=>{\n                                  \n                            await usuariosRef.orderBy(\"nombre\",\"asc\").startAfter(doc).get().then(doc=>{\n                                //console.log(doc.docs)\n                                //   reducir a uno la lista \n                                console.log(\"paso por aca\")\n                                //    for(let i=0;i<)    \n                                    let tamaño=doc.docs.length\n\n                                console.log(tamaño)\n                               \n                                console.log(doc.docs[0].data())\n                                if(tamaño==usuariosSolicitados){\n                                    for(let i=0;i<tamaño-1;i++){\n                                        console.log(i)\n                                        console.log(doc.docs[i].data())\n                                        nuevalista.push(doc.docs[i].data())\n                                            \n                                    }\n                                }else{\n                                    for(let i=0;i<=tamaño-1;i++){\n                                        console.log(i)\n                                        console.log(doc.docs[i].data())\n                                        nuevalista.push(doc.docs[i].data())\n                                            \n                                    }\n                                }\n\n\n\n                                    // insertar el ultimos\n                                \n                                    setultimo(doc.docs[usuariosMostrados-1].id)\n                    \n                                    if(tamaño==usuariosSolicitados){\n                                                setvacio(false)\n                                        }else{\n                                                setvacio(true)\n                                        } \n                            })\n\n                             })\n                            setusuarios((usuarios)=>[...usuarios,...nuevalista])\n                            setcargando(false)   \n\n\n                        }catch(error){console.log(error)}\n                    \n        }\n        \n\n    useEffect(() => {\n           // Start listing users from the beginning, 1000 at a time.\n      setcargando(true)     \n      listAllUsers();\n\n    }, [])\n\n\n\n\n\n\n\n    return (\n       \n        <Grid className={clases.root} container>\n            <Grid xs={12} md={1}>\n\n            </Grid>\n            <Grid xs={12} md={10}>\n                        \n    \n\n\n                    <div className={clases.divTituloGeneral}>\n                         <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                                Lista de Usuarios\n                        </Typography>\n                </div>\n\n\n\n\n\n                    <div>\n\n                   \n                                {\n                                cargando?\n                                <div className={clases.divCircular} >\n                                <CircularProgress className={clases.circular}></CircularProgress>\n                                </div> \n                                :\n                                \n                                \n                                usuarios.length ?\n                                   \n                                   <>\n                                       {\n                                    usuarios.map(doc=>(\n                                        \n                                     \n                                        <Grid container>\n                                            \n                                                    <Grid xs={4}>\n                                                    <div >\n                                                        {doc.photoURL==null?\n                                                             \n                                                             <Avatar style={{margin:\"auto\"}} src={userImagen}></Avatar>\n                                                             :\n                                                   \n                                                             <Avatar  style={{margin:\"auto\"}} src={`${doc.photoURL}`}></Avatar>\n\n                                                        }                                        \n                                                    \n                                                    </div>\n                                            </Grid>\n                                            <Grid xs={4}>\n                                                    {doc.nombre}\n                                            </Grid>\n\n                                            <Grid xs={4}>\n                                                    {doc.correo}\n                                            </Grid>\n\n                                               <Grid xs={12}>\n                                                    <hr></hr>\n                                                </Grid>            \n                                          \n                                        </Grid>\n                                    )\n                                  )   \n                                  \n                                  }\n\n\n\n{/*                                                                     \n                                {vacio==false &&\n\n                                <Typography align=\"center\">\n                                <Button \n                                        endIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                                        variant =\"contained\"\n                                        color=\"primary\"\n\n                                onClick={()=>{\n                                    pedirMas()\n                                }} >\n                                ver mas\n\n                                        </Button> \n                                </Typography>   }                      */}\n\n\n\n\n                                  </> \n                                \n                                \n                                :\n\n                                <Grid xs={12}>\n                                        <Typography className={clases.\n                              textNoDisponible\n                               } align=\"center\" variant=\"h4\">\n                                        No hay registros\n                              </Typography>          \n                           \n\n                                 </Grid>\n                                \n                                \n                                }\n\n\n\n\n\n                    </div>\n\n\n            </Grid>\n\n            <Grid xs={12} md={1}>\n\n            </Grid>\n\n\n        </Grid>\n    )\n}\n\nexport default Usuarios\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Funciones/FuncionesFirebase.js",["472","473"],"\nimport Firebase from \"../firebase/firebase\"\nimport Swal from \"sweetalert2\"\nimport moment from \"moment\"\n\n\n\n\n\nexport default {\n        async IngresarComentario(Comentario){\n\n\n         await Firebase.db.collection(\"Comentarios\").add(Comentario).then(()=>\n         Swal.fire({     \n            icon: 'success',\n            title: '¡Muchas Gracias!',\n            showConfirmButton: false,\n            timer: 1500\n          })\n         )\n\n        }\n        ,\n        async IngresarColaboracion(Colaboracion){\n\n\n          await Firebase.db.collection(\"Colaboracion\").add(Colaboracion).then(()=>\n          Swal.fire({     \n             icon: 'success',\n             title: '¡Muchas Gracias!',\n             showConfirmButton: false,\n             timer: 1500\n           })\n          )\n \n         },\n\n        async ListarComentarios(){\n          \n          let listatres=[]\n         \n           await Firebase.db.collection(\"Comentarios\").get().then((collection)=>{\n              \n            listatres=collection.docs.map(doc=>{\n                      return doc.data()\n                  })\n            \n           })\n         \n           return listatres\n        }\n\n\n        \n\n}   ","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/index.js",[],["474","475"],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/firebase/context.js",[],"/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/ListarComentarios.jsx",["476","477","478","479","480","481","482","483","484","485","486","487","488","489"],"import React,{useEffect,useState} from 'react'\nimport { Grid,Typography,Button,Avatar, makeStyles,CircularProgress,Paper } from '@material-ui/core'\nimport Comentario from '../Componetes/Comentario'\nimport FuncionesGenerales from \"../Funciones/FuncionesFirebase\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Firebase from '../firebase/firebase'\n\nconst estilos=makeStyles((theme=>({\n    root:{\n      \n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n            \n\n    },\n\n    \n    tituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n    }\n,\ndivTituloGeneral:{\n    margin:\"55px auto\",\n    \n},\ndivCircular:{\n    marginTop:\"100px\"\n\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n\n    textNoDisponible:{\n\n\n        fontFamily:\"Nunito\",\n        color:\"#808080\"\n\n},\n})))\n\n\n\nconst ListarComentarios = () => {\n\n    const clases=estilos()\n\n    // solicitud maxima  de comentarios \n     const comentariosSolicitados = 3\n     // comentorios mostrados \n     const comentariosMostrados=2\n    // referencia base de datos \n    const  comentariosRef=Firebase.db.collection('Comentarios')\n\n    const [comentarios, setcomentarios] = useState([])\n    const [cargando, setcargando] = useState(false)\n    const [ultimo,setUltimo]=useState()\n    const [vacio,setVacio]=useState(false)\n\n\n    useEffect(async () => {\n\n        setcargando(true)\n        pedirComentarios()\n\n\n    }, [])\n\n\n    const pedirComentarios=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    const pedirMas=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').startAfter(ultimo).limit(comentariosSolicitados).get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    return (\n        <div className={clases.root} >\n\n<Grid  container>\n\n<Grid xs=\"1\"  md=\"2\"> \n\n</Grid>\n<Grid xs=\"10\" md=\"8\">\n        <div className={clases.divTituloGeneral}>\n                    <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                            Feedback\n                    </Typography>\n        </div>\n\n\n\n\n        {                            \n                cargando?\n                <div className={clases.divCircular} >\n                <CircularProgress className={clases.circular}></CircularProgress>\n            </div>\n            :<div>\n               { comentarios.length==0 ?\n                  <Typography className={clases.\n                  textNoDisponible\n                   } align=\"center\" variant=\"h4\">\n                            No hay registros\n                  </Typography>          \n               \n\n                    :\n\n                    <div>\n\n                                {\n                                    comentarios.map((doc)=>(\n                                        <Comentario Comentario={doc}> </Comentario>\n                                    ))\n                                }\n\n                            {/* {vacio==false&&\n\n                                    <Typography align=\"center\">        \n                                    <Button variant='contained'\n                                    color=\"primary\"\n                                    endIcon={<ExpandMoreIcon/>}       \n                                    onClick={()=>{pedirMas()}}\n                                    >\n                                    ver mas      \n                                    </Button>       \n                                    </Typography>        \n\n\n                            }\n                       */}\n                    </div>\n                 \n        \n            }\n            </div>\n        }\n\n</Grid>\n\n<Grid xs=\"1\" md=\"2\">\n    \n</Grid>\n</Grid>\n\n        </div>\n    )\n}\n\nexport default ListarComentarios\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/Comentario.jsx",["490","491","492"],"import React from 'react'\nimport { Grid,Typography, Avatar, makeStyles,CircularProgress,Paper } from '@material-ui/core'\nimport moment from \"moment\"\nconst estilos=makeStyles((theme=>({\n\n  \ntitulo:{\n\n    fontWeight:\"500\",\n    fontFamily:\"nunito\"\n},\nfecha:{\n    fontWeight:\"500\",\n    \n    fontFamily:\"nunito\",\n    paddingTop:\"5px\",\n    color:\"#717171\"\n},\ncomentario:{\n    fontWeight:\"500\",\n    fontFamily:\"nunito\",\n    paddingTop:\"5px\",\n    color:\"#717171\",\n    margin:\"11px\",\n    padding:\"11px\"\n},\n\n})))\n\nconst Comentario = (props) => {\n    const clases=estilos()\n    const Comentario=props.Comentario\n    return (\n        <div style={{marginBottom:\"50px\"}} >\n            \n\n            <Grid container>\n                        <Grid xs=\"2\">\n\n\n                        <Avatar    src={`${Comentario.usuario.imagen}`}  style={{top:\"25%\",left:\"36%\"\n                                       }} ></Avatar>\n\n\n                        </Grid>\n                        <Grid xs=\"10\">\n\n                            <Grid xs=\"12\">\n                                <Typography variant=\"subtitle2\" className={clases.fecha}>\n                                    {moment(new Date(Comentario.fecha.seconds*1000)).format(\"D MMM YYYY\")}    \n                                </Typography>\n                            </Grid>\n                            <Grid xs=\"12\">\n                            <Typography variant=\"h5\" className={clases.titulo}>\n                                    {Comentario.logueado!=true?\n                                    Comentario.usuario:\n                                    Comentario.usuario.nombre}\n                                </Typography>\n\n                            </Grid>\n                            <Grid xs=\"12\">\n                            <Typography variant=\"subtitle2\" className={clases.fecha}>\n                            {Comentario.logueado==true&&\n                                    \n                                    Comentario.usuario.email}\n                                </Typography>\n                            </Grid>\n\n                          \n                        </Grid>\n\n                        <Grid xs=\"12\">\n                                <Paper elevation={1}>\n                                <Typography variant=\"subtitle1\" className={clases.comentario}>\n                                {Comentario.comentario}\n                                \n                                </Typography>\n\n                                </Paper>\n\n                            </Grid>\n\n                    </Grid>\n\n\n        </div>\n    )\n}\n\nexport default Comentario\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/AdministrarNosotros.jsx",["493","494","495"],"import React,{useState,useEffect} from 'react'\nimport { Typography, makeStyles,Grid,TextField ,Button,CircularProgress} from '@material-ui/core'\nimport TextoEditor  from \"../Componetes/TextoEditor.jsx\"\nimport { EditorState } from 'draft-js';\nimport Firebase from \"../../src/firebase/firebase\"\nimport draftToHtml from 'draftjs-to-html';\nimport { convertToRaw } from 'draft-js';\nimport {  ContentState, convertFromHTML } from 'draft-js'\nimport Swal from \"sweetalert2\"\nimport htmlToDraft from 'html-to-draftjs';\n\n\nconst estilos=makeStyles((theme)=>({\n\n    divTituloGeneral:{\n        margin:\"55px auto\",\n        width:\"85vw\",\n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n\n},\ntituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n    },\n    divCircular:{\n        marginTop:\"200px\"\n\n    },\n\nmargenDiv:{\n    margin:\"100px 0px 0px 0px\"\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n\n    margenDivContenedor:{\n        margin:\"30px 0px\"\n    },\n    textoTitulo:{\n        margin:\"0px 0px 10px 5px\"\n    }\n\n}))\n\n\n\nconst AdministrarNosotros = (props) => {\n    const clases=estilos()\n    const [titulo, settitulo] = useState(\"\")\n    const [editorState, setEditorState] = useState(EditorState.createWithContent(\n        ContentState.createFromBlockArray(\n          convertFromHTML('<p></p>')\n        )\n      ))\n   //   const [editorState, setEditorState] = useState(EditorState.createEmpty())\n\n    const [cargando, setcargando] = useState(false)\n\n  \n\n\n\n\n\n\n\n    const onEditorStateChange = (editorState) => {\n        setEditorState(editorState)\n      }\n    \n\n    const onTitleStateChange=(e)=>{\n        e.preventDefault()\n        settitulo(e.target.value)\n    }\n\n\n\n\nconst remplazarTexto =(htmlText)=>{\n  console.log(htmlText)\n\n  //<div style=\"text-align:none;\">\n let textoprueba=htmlText.replace(`<div style=\"text-align:none;\">`,`<div style=\"text-align: center; width: 100%;\">`)\n\n \n return textoprueba\n}\n\n    const Guardar=()=>{\n\n        const rawContentState = convertToRaw(editorState.getCurrentContent());\n        let htmlText = draftToHtml(rawContentState);\n        let htmlConverted = remplazarTexto(htmlText) //here I call the function that converts the <img/> to <div><img/></div>. \n        \n\n        const configWeb={\n            title:titulo,\n            //contenido:draftToHtml(convertToRaw(editorState.getCurrentContent()))\n            contenido:htmlConverted\n        }\n\n\n\n        Firebase.db.collection(\"administrarnosotros\").doc(\"configuracion\").set(configWeb).then(()=>\n        \n         Swal.fire({\n             title:\"Su informacion ha sido guardada\",\n             icon:\"success\",\n             showConfirmButton: false,\n             timer:1500\n         }).then(()=>{\n             props.history.push(\"/nosotros\")\n         })\n        ).catch(error=>console.log(error))\n\n\n        //guardar en la base de datos\n\n\n    }\n  \n\n\n\n\n\n    useEffect(async () => {\n\n        setcargando(true)\n    \n        const retornarObjeto=await Firebase.db.collection(\"administrarnosotros\").doc(\"configuracion\").get().then((respuesta)=>{\n            console.log(respuesta.data())\n\n            return respuesta.data()\n        })\n\n        if(retornarObjeto!=undefined){\n            \n            settitulo(retornarObjeto.title)\n\n// funcion extraida \n           // const blocksFromHTML = convertFromHTML(retornarObjeto.contenido);\n           \n            const contentBlock = htmlToDraft(retornarObjeto.contenido);\n            const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            // const text = ContentState.createFromBlockArray(\n            //         blocksFromHTML.contentBlocks,\n            //         blocksFromHTML.entityMap\n            //         );\n                    \n                    const editorState = EditorState.createWithContent(contentState);\n                \n                setEditorState(\n                    editorState \n            )\n\n\n// fin de la funcion extraida \n            // setEditorState(EditorState.createWithContent(\n            //     ContentState.createFromBlockArray(\n            //       convertFromHTML(retornarObjeto.contenido)\n            //     )\n            //   ))\n\n        }\n\n        setcargando(false)\n\n\n    }, [])\n\n\n\n\n    return (\n        \n\n<div className={clases.divTituloGeneral}>\n<Typography variant=\"h4\" className={clases.tituloGeneral}>\nAdministrar Paginas Nosotros\n</Typography>\n\n<div className={clases.margenDiv}>\n\n{\ncargando?\n                            <div className={clases.divCircular} >\n                            <CircularProgress className={clases.circular}></CircularProgress>\n                        </div>\n                        :<div>\n                          \n <Grid container>\n\n<Grid xs={1} ></Grid>\n<Grid xs={10}>\n            <Grid xs={12} md={12}>\n\n            <div className={clases.margenDivContenedor}>\n                    <Typography className={clases.textoTitulo} variant=\"h6\" >\n                        Titulo\n                    </Typography>\n                    <TextField value={titulo} onChange={onTitleStateChange} id=\"outlined-basic\"  variant=\"outlined\" fullWidth />\n            </div>\n\n            <div className={clases.margenDivContenedor}>\n                    <Typography className={clases.textoTitulo} variant=\"h6\" >\n                        Contenido\n                    </Typography>\n            <TextoEditor editorState={editorState} onEditorStateChange={setEditorState} ></TextoEditor>\n            \n            </div>\n\n            <Button onClick={()=>Guardar()} variant=\"contained\" color=\"primary\">\n                Guardar\n            </Button>\n\n            </Grid>\n\n\n\n    \n\n</Grid>\n<Grid xs={1} ></Grid>\n\n\n</Grid>    \n</div>\n\n\n     \n}                          \n\n\n\n</div>\n</div>\n    )\n}\n\nexport default AdministrarNosotros\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Componetes/TextoEditor.jsx",["496","497","498","499","500","501"],"import React ,{useState,useEffect}from 'react'\nimport { convertToRaw } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport {makeStyles} from '@material-ui/core'\n\n\n\n\nconst estilo=makeStyles((theme)=>({\n\neditor:{\n  minHeight:'150px'\n}\n\n}))\n\n\n\nconst TextoEditor = (props) => {\n\n  const clases=estilo()\n\n\n\n    return (\n        <div>\n      <Editor\n         editorState={props.editorState}\n          wrapperClassName=\"demo-wrapper\"\n          editorClassName=\"demo-editor\"\n          onEditorStateChange={props.onEditorStateChange}\n          localization={{\n            locale: 'es',\n          }}\n          toolbar={{fontFamily:{\n            options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman','Verdana','Lato'],\n          }}}\n        />\n        {/* <textarea\n          disabled\n          value={draftToHtml(convertToRaw(props.editorState.getCurrentContent()))}\n        />\n          */}\n      \n         \n      \n      </div>\n    )\n}\n\nexport default TextoEditor\n","/Users/fernandomichea/Desktop/proyectojs/Cris paper/frontend/src/Paginas/Colaboraciones.jsx",["502","503","504","505","506","507","508","509","510","511","512","513","514","515"],"import React,{useEffect,useState} from 'react'\nimport { Grid,Typography,Button,Avatar, makeStyles,CircularProgress,Paper } from '@material-ui/core'\nimport Comentario from '../Componetes/Comentario'\nimport FuncionesGenerales from \"../Funciones/FuncionesFirebase\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport Firebase from '../firebase/firebase'\n\nconst estilos=makeStyles((theme=>({\n    root:{\n      \n        \" & .MuiButton-containedPrimary:hover\" :{\n            backgroundColor: \"#303f9f00\",\n            color:\"#5fcccf\",\n            border:\"1px solid\"\n        },\n            \n\n    },\n\n    \n    tituloGeneral:{\n\n    fontWeight:\"700\",\n    fontFamily:\"Lato\",\n    fontSize:\"27px\"\n    }\n,\ndivTituloGeneral:{\n    margin:\"55px auto\",\n    \n},\ndivCircular:{\n    marginTop:\"100px\"\n\n},\ncircular:{\n    height:\"72px !important\",\n    width:\"72px !important\",\n    display:\"block\",\n    margin:\"auto\"\n    },\n\n    textNoDisponible:{\n\n\n        fontFamily:\"Nunito\",\n        color:\"#808080\"\n\n},\n})))\n\n\n\nconst ListarComentarios = () => {\n\n    const clases=estilos()\n\n    // solicitud maxima  de comentarios \n     const comentariosSolicitados = 3\n     // comentorios mostrados \n     const comentariosMostrados=2\n    // referencia base de datos \n    const  comentariosRef=Firebase.db.collection('Colaboracion')\n\n    const [comentarios, setcomentarios] = useState([])\n    const [cargando, setcargando] = useState(false)\n    const [ultimo,setUltimo]=useState()\n    const [vacio,setVacio]=useState(false)\n\n\n    useEffect(async () => {\n\n        setcargando(true)\n        pedirComentarios()\n\n\n    }, [])\n\n\n    const pedirComentarios=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    const pedirMas=async()=>{\n\n        const nuevaLista=[]\n        await comentariosRef.orderBy('fecha','asc').startAfter(ultimo).limit(comentariosSolicitados).get().then((doc)=>{\n\n\n            let tamano=doc.docs.length\n            for(let i=0;i<tamano;i++){\n\n                nuevaLista.push(doc.docs[i].data())\n            }\n\n            setUltimo(doc.docs.length-1)\n\n\n                if(tamano==comentariosSolicitados){\n\n                    setVacio(false)\n                }\n                else{\n                    setVacio(true)\n                }\n                })\n       console.log(nuevaLista)\n        setcomentarios(nuevaLista)\n        setcargando(false)\n        \n    }\n\n    return (\n        <div className={clases.root} >\n\n<Grid  container>\n\n<Grid xs=\"1\"  md=\"2\"> \n\n</Grid>\n<Grid xs=\"10\" md=\"8\">\n        <div className={clases.divTituloGeneral}>\n                    <Typography variant=\"h4\" className={clases.tituloGeneral}>\n                            Colaboraciones\n                    </Typography>\n        </div>\n\n\n\n\n        {                            \n                cargando?\n                <div className={clases.divCircular} >\n                <CircularProgress className={clases.circular}></CircularProgress>\n            </div>\n            :<div>\n               { comentarios.length==0 ?\n                  <Typography className={clases.\n                  textNoDisponible\n                   } align=\"center\" variant=\"h4\">\n                            No hay registros\n                  </Typography>          \n               \n\n                    :\n\n                    <div>\n\n                                {\n                                    comentarios.map((doc)=>(\n                                        <Comentario Comentario={doc}> </Comentario>\n                                    ))\n                                }\n\n                            {/* {vacio==false&&\n\n                                    <Typography align=\"center\">        \n                                    <Button variant='contained'\n                                    color=\"primary\"\n                                    endIcon={<ExpandMoreIcon/>}       \n                                    onClick={()=>{pedirMas()}}\n                                    >\n                                    ver mas      \n                                    </Button>       \n                                    </Typography>        \n\n\n                            }\n                       */}\n                    </div>\n                 \n        \n            }\n            </div>\n        }\n\n</Grid>\n\n<Grid xs=\"1\" md=\"2\">\n    \n</Grid>\n</Grid>\n\n        </div>\n    )\n}\n\nexport default ListarComentarios\n",{"ruleId":"516","replacedBy":"517"},{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","severity":1,"message":"521","line":7,"column":24,"nodeType":"522","messageId":"523","endLine":7,"endColumn":39},{"ruleId":"520","severity":1,"message":"524","line":46,"column":9,"nodeType":"522","messageId":"523","endLine":46,"endColumn":16},{"ruleId":"520","severity":1,"message":"525","line":49,"column":8,"nodeType":"522","messageId":"523","endLine":49,"endColumn":13},{"ruleId":"520","severity":1,"message":"526","line":49,"column":15,"nodeType":"522","messageId":"523","endLine":49,"endColumn":23},{"ruleId":"520","severity":1,"message":"527","line":50,"column":7,"nodeType":"522","messageId":"523","endLine":50,"endColumn":14},{"ruleId":"528","severity":1,"message":"529","line":124,"column":28,"nodeType":"530","messageId":"531","endLine":124,"endColumn":30},{"ruleId":"528","severity":1,"message":"529","line":156,"column":20,"nodeType":"530","messageId":"531","endLine":156,"endColumn":22},{"ruleId":"528","severity":1,"message":"529","line":164,"column":23,"nodeType":"530","messageId":"531","endLine":164,"endColumn":25},{"ruleId":"528","severity":1,"message":"529","line":202,"column":22,"nodeType":"530","messageId":"531","endLine":202,"endColumn":24},{"ruleId":"528","severity":1,"message":"529","line":216,"column":22,"nodeType":"530","messageId":"531","endLine":216,"endColumn":24},{"ruleId":"528","severity":1,"message":"529","line":235,"column":31,"nodeType":"530","messageId":"531","endLine":235,"endColumn":33},{"ruleId":"528","severity":1,"message":"529","line":261,"column":17,"nodeType":"530","messageId":"531","endLine":261,"endColumn":19},{"ruleId":"528","severity":1,"message":"532","line":325,"column":30,"nodeType":"530","messageId":"531","endLine":325,"endColumn":32},{"ruleId":"528","severity":1,"message":"532","line":330,"column":34,"nodeType":"530","messageId":"531","endLine":330,"endColumn":36},{"ruleId":"528","severity":1,"message":"532","line":335,"column":37,"nodeType":"530","messageId":"531","endLine":335,"endColumn":39},{"ruleId":"533","severity":1,"message":"534","line":414,"column":1,"nodeType":"535","endLine":414,"endColumn":20},{"ruleId":"536","severity":1,"message":"537","line":465,"column":14,"nodeType":"538","endLine":465,"endColumn":80},{"ruleId":"520","severity":1,"message":"539","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":13},{"ruleId":"520","severity":1,"message":"540","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":21},{"ruleId":"541","severity":1,"message":"542","line":75,"column":5,"nodeType":"543","messageId":"531","endLine":75,"endColumn":16},{"ruleId":"520","severity":1,"message":"544","line":117,"column":8,"nodeType":"522","messageId":"523","endLine":117,"endColumn":20},{"ruleId":"520","severity":1,"message":"545","line":118,"column":8,"nodeType":"522","messageId":"523","endLine":118,"endColumn":17},{"ruleId":"520","severity":1,"message":"546","line":120,"column":8,"nodeType":"522","messageId":"523","endLine":120,"endColumn":13},{"ruleId":"520","severity":1,"message":"547","line":120,"column":15,"nodeType":"522","messageId":"523","endLine":120,"endColumn":23},{"ruleId":"520","severity":1,"message":"548","line":192,"column":10,"nodeType":"522","messageId":"523","endLine":192,"endColumn":25},{"ruleId":"520","severity":1,"message":"549","line":213,"column":7,"nodeType":"522","messageId":"523","endLine":213,"endColumn":28},{"ruleId":"520","severity":1,"message":"550","line":217,"column":7,"nodeType":"522","messageId":"523","endLine":217,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":239,"column":47,"nodeType":"530","messageId":"531","endLine":239,"endColumn":49},{"ruleId":"528","severity":1,"message":"529","line":278,"column":22,"nodeType":"530","messageId":"531","endLine":278,"endColumn":24},{"ruleId":"551","severity":1,"message":"552","line":281,"column":17,"nodeType":"522","messageId":"553","endLine":281,"endColumn":32},{"ruleId":"528","severity":1,"message":"529","line":378,"column":44,"nodeType":"530","messageId":"531","endLine":378,"endColumn":46},{"ruleId":"551","severity":1,"message":"554","line":424,"column":13,"nodeType":"522","messageId":"553","endLine":424,"endColumn":21},{"ruleId":"528","severity":1,"message":"532","line":448,"column":31,"nodeType":"530","messageId":"531","endLine":448,"endColumn":33},{"ruleId":"555","severity":1,"message":"556","line":513,"column":15,"nodeType":"557","endLine":532,"endColumn":6},{"ruleId":"555","severity":1,"message":"558","line":532,"column":8,"nodeType":"559","endLine":532,"endColumn":15,"suggestions":"560"},{"ruleId":"528","severity":1,"message":"532","line":559,"column":47,"nodeType":"530","messageId":"531","endLine":559,"endColumn":49},{"ruleId":"536","severity":1,"message":"537","line":574,"column":61,"nodeType":"538","endLine":574,"endColumn":92},{"ruleId":"528","severity":1,"message":"532","line":580,"column":78,"nodeType":"530","messageId":"531","endLine":580,"endColumn":80},{"ruleId":"528","severity":1,"message":"532","line":611,"column":70,"nodeType":"530","messageId":"531","endLine":611,"endColumn":72},{"ruleId":"528","severity":1,"message":"532","line":612,"column":71,"nodeType":"530","messageId":"531","endLine":612,"endColumn":73},{"ruleId":"561","severity":1,"message":"562","line":635,"column":78,"nodeType":"563","messageId":"564","endLine":635,"endColumn":79,"fix":"565"},{"ruleId":"561","severity":1,"message":"562","line":715,"column":50,"nodeType":"563","messageId":"564","endLine":715,"endColumn":51,"fix":"566"},{"ruleId":"555","severity":1,"message":"567","line":151,"column":4,"nodeType":"559","endLine":151,"endColumn":13,"suggestions":"568"},{"ruleId":"569","severity":1,"message":"570","line":168,"column":30,"nodeType":"557","messageId":"571","endLine":168,"endColumn":32},{"ruleId":"528","severity":1,"message":"529","line":170,"column":35,"nodeType":"530","messageId":"531","endLine":170,"endColumn":37},{"ruleId":"569","severity":1,"message":"570","line":280,"column":50,"nodeType":"557","messageId":"571","endLine":280,"endColumn":52},{"ruleId":"528","severity":1,"message":"532","line":285,"column":45,"nodeType":"530","messageId":"531","endLine":285,"endColumn":47},{"ruleId":"520","severity":1,"message":"572","line":347,"column":7,"nodeType":"522","messageId":"523","endLine":347,"endColumn":22},{"ruleId":"569","severity":1,"message":"570","line":361,"column":24,"nodeType":"557","messageId":"571","endLine":361,"endColumn":26},{"ruleId":"528","severity":1,"message":"532","line":363,"column":21,"nodeType":"530","messageId":"531","endLine":363,"endColumn":23},{"ruleId":"520","severity":1,"message":"573","line":403,"column":8,"nodeType":"522","messageId":"523","endLine":403,"endColumn":27},{"ruleId":"569","severity":1,"message":"570","line":410,"column":34,"nodeType":"557","messageId":"571","endLine":410,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":412,"column":31,"nodeType":"530","messageId":"531","endLine":412,"endColumn":33},{"ruleId":"520","severity":1,"message":"574","line":454,"column":8,"nodeType":"522","messageId":"523","endLine":454,"endColumn":23},{"ruleId":"528","severity":1,"message":"529","line":485,"column":25,"nodeType":"530","messageId":"531","endLine":485,"endColumn":27},{"ruleId":"520","severity":1,"message":"575","line":521,"column":7,"nodeType":"522","messageId":"523","endLine":521,"endColumn":17},{"ruleId":"520","severity":1,"message":"576","line":525,"column":8,"nodeType":"522","messageId":"523","endLine":525,"endColumn":18},{"ruleId":"569","severity":1,"message":"570","line":525,"column":38,"nodeType":"557","messageId":"571","endLine":525,"endColumn":40},{"ruleId":"520","severity":1,"message":"577","line":528,"column":15,"nodeType":"522","messageId":"523","endLine":528,"endColumn":30},{"ruleId":"569","severity":1,"message":"570","line":528,"column":55,"nodeType":"557","messageId":"571","endLine":528,"endColumn":57},{"ruleId":"528","severity":1,"message":"529","line":530,"column":33,"nodeType":"530","messageId":"531","endLine":530,"endColumn":35},{"ruleId":"569","severity":1,"message":"570","line":578,"column":39,"nodeType":"557","messageId":"571","endLine":578,"endColumn":41},{"ruleId":"528","severity":1,"message":"529","line":580,"column":44,"nodeType":"530","messageId":"531","endLine":580,"endColumn":46},{"ruleId":"528","severity":1,"message":"529","line":702,"column":30,"nodeType":"530","messageId":"531","endLine":702,"endColumn":32},{"ruleId":"528","severity":1,"message":"532","line":705,"column":37,"nodeType":"530","messageId":"531","endLine":705,"endColumn":39},{"ruleId":"561","severity":1,"message":"562","line":741,"column":54,"nodeType":"563","messageId":"564","endLine":741,"endColumn":55,"fix":"578"},{"ruleId":"520","severity":1,"message":"579","line":3,"column":10,"nodeType":"522","messageId":"523","endLine":3,"endColumn":22},{"ruleId":"520","severity":1,"message":"580","line":4,"column":11,"nodeType":"522","messageId":"523","endLine":4,"endColumn":23},{"ruleId":"520","severity":1,"message":"581","line":4,"column":25,"nodeType":"522","messageId":"523","endLine":4,"endColumn":40},{"ruleId":"520","severity":1,"message":"582","line":6,"column":10,"nodeType":"522","messageId":"523","endLine":6,"endColumn":21},{"ruleId":"555","severity":1,"message":"556","line":55,"column":16,"nodeType":"557","endLine":77,"endColumn":7},{"ruleId":"528","severity":1,"message":"532","line":64,"column":26,"nodeType":"530","messageId":"531","endLine":64,"endColumn":28},{"ruleId":"555","severity":1,"message":"583","line":77,"column":9,"nodeType":"559","endLine":77,"endColumn":11,"suggestions":"584"},{"ruleId":"520","severity":1,"message":"585","line":8,"column":8,"nodeType":"522","messageId":"523","endLine":8,"endColumn":17},{"ruleId":"520","severity":1,"message":"586","line":13,"column":8,"nodeType":"522","messageId":"523","endLine":13,"endColumn":22},{"ruleId":"520","severity":1,"message":"587","line":21,"column":10,"nodeType":"522","messageId":"523","endLine":21,"endColumn":16},{"ruleId":"520","severity":1,"message":"588","line":22,"column":10,"nodeType":"522","messageId":"523","endLine":22,"endColumn":14},{"ruleId":"528","severity":1,"message":"532","line":180,"column":26,"nodeType":"530","messageId":"531","endLine":180,"endColumn":28},{"ruleId":"528","severity":1,"message":"532","line":198,"column":27,"nodeType":"530","messageId":"531","endLine":198,"endColumn":29},{"ruleId":"528","severity":1,"message":"529","line":249,"column":20,"nodeType":"530","messageId":"531","endLine":249,"endColumn":22},{"ruleId":"528","severity":1,"message":"529","line":254,"column":21,"nodeType":"530","messageId":"531","endLine":254,"endColumn":23},{"ruleId":"528","severity":1,"message":"529","line":259,"column":31,"nodeType":"530","messageId":"531","endLine":259,"endColumn":33},{"ruleId":"520","severity":1,"message":"589","line":440,"column":21,"nodeType":"522","messageId":"523","endLine":440,"endColumn":35},{"ruleId":"569","severity":1,"message":"570","line":442,"column":30,"nodeType":"557","messageId":"571","endLine":442,"endColumn":32},{"ruleId":"520","severity":1,"message":"590","line":504,"column":9,"nodeType":"522","messageId":"523","endLine":504,"endColumn":24},{"ruleId":"528","severity":1,"message":"532","line":515,"column":26,"nodeType":"530","messageId":"531","endLine":515,"endColumn":28},{"ruleId":"528","severity":1,"message":"532","line":551,"column":39,"nodeType":"530","messageId":"531","endLine":551,"endColumn":41},{"ruleId":"569","severity":1,"message":"570","line":674,"column":30,"nodeType":"557","messageId":"571","endLine":674,"endColumn":32},{"ruleId":"569","severity":1,"message":"570","line":675,"column":31,"nodeType":"557","messageId":"571","endLine":675,"endColumn":33},{"ruleId":"528","severity":1,"message":"529","line":678,"column":39,"nodeType":"530","messageId":"531","endLine":678,"endColumn":41},{"ruleId":"569","severity":1,"message":"570","line":739,"column":20,"nodeType":"557","messageId":"571","endLine":739,"endColumn":22},{"ruleId":"569","severity":1,"message":"570","line":746,"column":17,"nodeType":"557","messageId":"571","endLine":746,"endColumn":19},{"ruleId":"555","severity":1,"message":"591","line":978,"column":4,"nodeType":"559","endLine":978,"endColumn":21,"suggestions":"592"},{"ruleId":"536","severity":1,"message":"537","line":1085,"column":37,"nodeType":"538","endLine":1085,"endColumn":98},{"ruleId":"593","severity":1,"message":"594","line":1391,"column":36,"nodeType":"538","endLine":1391,"endColumn":97},{"ruleId":"595","severity":1,"message":"596","line":1403,"column":25,"nodeType":"538","endLine":1403,"endColumn":57},{"ruleId":"520","severity":1,"message":"597","line":3,"column":32,"nodeType":"522","messageId":"523","endLine":3,"endColumn":36},{"ruleId":"520","severity":1,"message":"539","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":13},{"ruleId":"520","severity":1,"message":"598","line":107,"column":8,"nodeType":"522","messageId":"523","endLine":107,"endColumn":15},{"ruleId":"520","severity":1,"message":"599","line":107,"column":17,"nodeType":"522","messageId":"523","endLine":107,"endColumn":27},{"ruleId":"520","severity":1,"message":"545","line":110,"column":8,"nodeType":"522","messageId":"523","endLine":110,"endColumn":17},{"ruleId":"520","severity":1,"message":"600","line":111,"column":8,"nodeType":"522","messageId":"523","endLine":111,"endColumn":16},{"ruleId":"520","severity":1,"message":"546","line":112,"column":8,"nodeType":"522","messageId":"523","endLine":112,"endColumn":13},{"ruleId":"520","severity":1,"message":"547","line":112,"column":15,"nodeType":"522","messageId":"523","endLine":112,"endColumn":23},{"ruleId":"528","severity":1,"message":"529","line":214,"column":47,"nodeType":"530","messageId":"531","endLine":214,"endColumn":49},{"ruleId":"528","severity":1,"message":"529","line":249,"column":22,"nodeType":"530","messageId":"531","endLine":249,"endColumn":24},{"ruleId":"551","severity":1,"message":"552","line":252,"column":17,"nodeType":"522","messageId":"553","endLine":252,"endColumn":32},{"ruleId":"528","severity":1,"message":"529","line":314,"column":44,"nodeType":"530","messageId":"531","endLine":314,"endColumn":46},{"ruleId":"551","severity":1,"message":"554","line":355,"column":25,"nodeType":"522","messageId":"553","endLine":355,"endColumn":33},{"ruleId":"551","severity":1,"message":"554","line":358,"column":25,"nodeType":"522","messageId":"553","endLine":358,"endColumn":33},{"ruleId":"528","severity":1,"message":"532","line":382,"column":31,"nodeType":"530","messageId":"531","endLine":382,"endColumn":33},{"ruleId":"551","severity":1,"message":"554","line":435,"column":13,"nodeType":"522","messageId":"553","endLine":435,"endColumn":21},{"ruleId":"520","severity":1,"message":"576","line":436,"column":17,"nodeType":"522","messageId":"523","endLine":436,"endColumn":27},{"ruleId":"551","severity":1,"message":"554","line":448,"column":21,"nodeType":"522","messageId":"553","endLine":448,"endColumn":29},{"ruleId":"520","severity":1,"message":"576","line":450,"column":29,"nodeType":"522","messageId":"523","endLine":450,"endColumn":39},{"ruleId":"551","severity":1,"message":"554","line":459,"column":21,"nodeType":"522","messageId":"553","endLine":459,"endColumn":29},{"ruleId":"520","severity":1,"message":"576","line":461,"column":25,"nodeType":"522","messageId":"523","endLine":461,"endColumn":35},{"ruleId":"528","severity":1,"message":"529","line":488,"column":22,"nodeType":"530","messageId":"531","endLine":488,"endColumn":24},{"ruleId":"555","severity":1,"message":"556","line":501,"column":15,"nodeType":"557","endLine":527,"endColumn":6},{"ruleId":"555","severity":1,"message":"601","line":527,"column":8,"nodeType":"559","endLine":527,"endColumn":18,"suggestions":"602"},{"ruleId":"528","severity":1,"message":"529","line":594,"column":90,"nodeType":"530","messageId":"531","endLine":594,"endColumn":92},{"ruleId":"528","severity":1,"message":"529","line":118,"column":25,"nodeType":"530","messageId":"531","endLine":118,"endColumn":27},{"ruleId":"528","severity":1,"message":"529","line":125,"column":25,"nodeType":"530","messageId":"531","endLine":125,"endColumn":27},{"ruleId":"528","severity":1,"message":"529","line":136,"column":27,"nodeType":"530","messageId":"531","endLine":136,"endColumn":29},{"ruleId":"528","severity":1,"message":"529","line":140,"column":28,"nodeType":"530","messageId":"531","endLine":140,"endColumn":30},{"ruleId":"528","severity":1,"message":"532","line":146,"column":36,"nodeType":"530","messageId":"531","endLine":146,"endColumn":38},{"ruleId":"528","severity":1,"message":"529","line":203,"column":30,"nodeType":"530","messageId":"531","endLine":203,"endColumn":32},{"ruleId":"528","severity":1,"message":"529","line":210,"column":30,"nodeType":"530","messageId":"531","endLine":210,"endColumn":32},{"ruleId":"520","severity":1,"message":"603","line":13,"column":12,"nodeType":"522","messageId":"523","endLine":13,"endColumn":22},{"ruleId":"520","severity":1,"message":"604","line":2,"column":21,"nodeType":"522","messageId":"523","endLine":2,"endColumn":25},{"ruleId":"520","severity":1,"message":"605","line":5,"column":15,"nodeType":"522","messageId":"523","endLine":5,"endColumn":19},{"ruleId":"520","severity":1,"message":"597","line":5,"column":21,"nodeType":"522","messageId":"523","endLine":5,"endColumn":25},{"ruleId":"520","severity":1,"message":"606","line":296,"column":17,"nodeType":"522","messageId":"523","endLine":296,"endColumn":23},{"ruleId":"520","severity":1,"message":"607","line":307,"column":12,"nodeType":"522","messageId":"523","endLine":307,"endColumn":18},{"ruleId":"520","severity":1,"message":"608","line":307,"column":19,"nodeType":"522","messageId":"523","endLine":307,"endColumn":28},{"ruleId":"551","severity":1,"message":"609","line":361,"column":17,"nodeType":"522","messageId":"553","endLine":361,"endColumn":33},{"ruleId":"551","severity":1,"message":"609","line":378,"column":13,"nodeType":"522","messageId":"553","endLine":378,"endColumn":29},{"ruleId":"520","severity":1,"message":"610","line":399,"column":14,"nodeType":"522","messageId":"523","endLine":399,"endColumn":20},{"ruleId":"561","severity":1,"message":"562","line":399,"column":58,"nodeType":"563","messageId":"564","endLine":399,"endColumn":59,"fix":"611"},{"ruleId":"528","severity":1,"message":"529","line":422,"column":22,"nodeType":"530","messageId":"531","endLine":422,"endColumn":24},{"ruleId":"528","severity":1,"message":"529","line":500,"column":29,"nodeType":"530","messageId":"531","endLine":500,"endColumn":31},{"ruleId":"528","severity":1,"message":"529","line":516,"column":31,"nodeType":"530","messageId":"531","endLine":516,"endColumn":33},{"ruleId":"528","severity":1,"message":"529","line":516,"column":77,"nodeType":"530","messageId":"531","endLine":516,"endColumn":79},{"ruleId":"555","severity":1,"message":"612","line":529,"column":4,"nodeType":"559","endLine":529,"endColumn":43,"suggestions":"613"},{"ruleId":"533","severity":1,"message":"534","line":841,"column":23,"nodeType":"535","endLine":841,"endColumn":42},{"ruleId":"533","severity":1,"message":"534","line":842,"column":23,"nodeType":"535","endLine":842,"endColumn":38},{"ruleId":"533","severity":1,"message":"534","line":966,"column":17,"nodeType":"535","endLine":966,"endColumn":28},{"ruleId":"614","severity":1,"message":"615","line":1127,"column":21,"nodeType":"616","messageId":"617","endLine":1129,"endColumn":53},{"ruleId":"533","severity":1,"message":"534","line":1157,"column":37,"nodeType":"535","endLine":1157,"endColumn":56},{"ruleId":"533","severity":1,"message":"534","line":1158,"column":37,"nodeType":"535","endLine":1158,"endColumn":52},{"ruleId":"555","severity":1,"message":"556","line":77,"column":15,"nodeType":"557","endLine":119,"endColumn":6},{"ruleId":"569","severity":1,"message":"570","line":26,"column":34,"nodeType":"557","messageId":"571","endLine":26,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":37,"column":34,"nodeType":"557","messageId":"571","endLine":37,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":52,"column":38,"nodeType":"557","messageId":"571","endLine":52,"endColumn":40},{"ruleId":"569","severity":1,"message":"570","line":55,"column":54,"nodeType":"557","messageId":"571","endLine":55,"endColumn":56},{"ruleId":"520","severity":1,"message":"618","line":2,"column":53,"nodeType":"522","messageId":"523","endLine":2,"endColumn":69},{"ruleId":"520","severity":1,"message":"619","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":27},{"ruleId":"520","severity":1,"message":"620","line":18,"column":8,"nodeType":"522","messageId":"523","endLine":18,"endColumn":22},{"ruleId":"520","severity":1,"message":"621","line":20,"column":9,"nodeType":"522","messageId":"523","endLine":20,"endColumn":22},{"ruleId":"520","severity":1,"message":"622","line":20,"column":23,"nodeType":"522","messageId":"523","endLine":20,"endColumn":46},{"ruleId":"541","severity":1,"message":"623","line":73,"column":5,"nodeType":"543","messageId":"531","endLine":73,"endColumn":21},{"ruleId":"520","severity":1,"message":"624","line":250,"column":16,"nodeType":"522","messageId":"523","endLine":250,"endColumn":24},{"ruleId":"520","severity":1,"message":"625","line":250,"column":26,"nodeType":"522","messageId":"523","endLine":250,"endColumn":37},{"ruleId":"520","severity":1,"message":"626","line":251,"column":16,"nodeType":"522","messageId":"523","endLine":251,"endColumn":31},{"ruleId":"520","severity":1,"message":"627","line":251,"column":33,"nodeType":"522","messageId":"523","endLine":251,"endColumn":51},{"ruleId":"520","severity":1,"message":"628","line":253,"column":15,"nodeType":"522","messageId":"523","endLine":253,"endColumn":22},{"ruleId":"520","severity":1,"message":"629","line":254,"column":15,"nodeType":"522","messageId":"523","endLine":254,"endColumn":21},{"ruleId":"520","severity":1,"message":"630","line":255,"column":16,"nodeType":"522","messageId":"523","endLine":255,"endColumn":31},{"ruleId":"520","severity":1,"message":"631","line":255,"column":33,"nodeType":"522","messageId":"523","endLine":255,"endColumn":51},{"ruleId":"569","severity":1,"message":"570","line":300,"column":61,"nodeType":"557","messageId":"571","endLine":300,"endColumn":63},{"ruleId":"569","severity":1,"message":"570","line":356,"column":50,"nodeType":"557","messageId":"571","endLine":356,"endColumn":52},{"ruleId":"520","severity":1,"message":"632","line":424,"column":7,"nodeType":"522","messageId":"523","endLine":424,"endColumn":18},{"ruleId":"528","severity":1,"message":"529","line":436,"column":26,"nodeType":"530","messageId":"531","endLine":436,"endColumn":28},{"ruleId":"551","severity":1,"message":"552","line":439,"column":21,"nodeType":"522","messageId":"553","endLine":439,"endColumn":36},{"ruleId":"520","severity":1,"message":"633","line":529,"column":7,"nodeType":"522","messageId":"523","endLine":529,"endColumn":20},{"ruleId":"528","severity":1,"message":"529","line":537,"column":26,"nodeType":"530","messageId":"531","endLine":537,"endColumn":28},{"ruleId":"551","severity":1,"message":"552","line":540,"column":21,"nodeType":"522","messageId":"553","endLine":540,"endColumn":36},{"ruleId":"528","severity":1,"message":"529","line":629,"column":28,"nodeType":"530","messageId":"531","endLine":629,"endColumn":30},{"ruleId":"520","severity":1,"message":"634","line":656,"column":7,"nodeType":"522","messageId":"523","endLine":656,"endColumn":21},{"ruleId":"528","severity":1,"message":"529","line":660,"column":26,"nodeType":"530","messageId":"531","endLine":660,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":666,"column":33,"nodeType":"530","messageId":"531","endLine":666,"endColumn":35},{"ruleId":"528","severity":1,"message":"532","line":671,"column":27,"nodeType":"530","messageId":"531","endLine":671,"endColumn":29},{"ruleId":"555","severity":1,"message":"556","line":688,"column":11,"nodeType":"557","endLine":743,"endColumn":2},{"ruleId":"536","severity":1,"message":"537","line":826,"column":65,"nodeType":"538","endLine":826,"endColumn":101},{"ruleId":"536","severity":1,"message":"537","line":832,"column":65,"nodeType":"538","endLine":832,"endColumn":98},{"ruleId":"595","severity":1,"message":"596","line":851,"column":49,"nodeType":"538","endLine":853,"endColumn":100},{"ruleId":"520","severity":1,"message":"635","line":9,"column":8,"nodeType":"522","messageId":"523","endLine":9,"endColumn":19},{"ruleId":"520","severity":1,"message":"636","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":17},{"ruleId":"520","severity":1,"message":"572","line":40,"column":9,"nodeType":"522","messageId":"523","endLine":40,"endColumn":24},{"ruleId":"520","severity":1,"message":"637","line":42,"column":9,"nodeType":"522","messageId":"523","endLine":42,"endColumn":16},{"ruleId":"520","severity":1,"message":"638","line":42,"column":17,"nodeType":"522","messageId":"523","endLine":42,"endColumn":27},{"ruleId":"520","severity":1,"message":"639","line":43,"column":9,"nodeType":"522","messageId":"523","endLine":43,"endColumn":16},{"ruleId":"520","severity":1,"message":"640","line":43,"column":17,"nodeType":"522","messageId":"523","endLine":43,"endColumn":27},{"ruleId":"555","severity":1,"message":"641","line":62,"column":7,"nodeType":"559","endLine":62,"endColumn":14,"suggestions":"642"},{"ruleId":"569","severity":1,"message":"570","line":104,"column":38,"nodeType":"557","messageId":"571","endLine":104,"endColumn":40},{"ruleId":"528","severity":1,"message":"529","line":106,"column":39,"nodeType":"530","messageId":"531","endLine":106,"endColumn":41},{"ruleId":"520","severity":1,"message":"643","line":118,"column":21,"nodeType":"522","messageId":"523","endLine":118,"endColumn":23},{"ruleId":"520","severity":1,"message":"644","line":3,"column":8,"nodeType":"522","messageId":"523","endLine":3,"endColumn":14},{"ruleId":"520","severity":1,"message":"645","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":16},{"ruleId":"520","severity":1,"message":"646","line":6,"column":8,"nodeType":"522","messageId":"523","endLine":6,"endColumn":16},{"ruleId":"520","severity":1,"message":"647","line":21,"column":9,"nodeType":"522","messageId":"523","endLine":21,"endColumn":14},{"ruleId":"520","severity":1,"message":"648","line":26,"column":9,"nodeType":"522","messageId":"523","endLine":26,"endColumn":21},{"ruleId":"541","severity":1,"message":"623","line":65,"column":5,"nodeType":"543","messageId":"531","endLine":65,"endColumn":21},{"ruleId":"520","severity":1,"message":"649","line":190,"column":15,"nodeType":"522","messageId":"523","endLine":190,"endColumn":23},{"ruleId":"520","severity":1,"message":"546","line":191,"column":8,"nodeType":"522","messageId":"523","endLine":191,"endColumn":13},{"ruleId":"528","severity":1,"message":"529","line":248,"column":26,"nodeType":"530","messageId":"531","endLine":248,"endColumn":28},{"ruleId":"551","severity":1,"message":"552","line":251,"column":21,"nodeType":"522","messageId":"553","endLine":251,"endColumn":36},{"ruleId":"595","severity":1,"message":"596","line":388,"column":9,"nodeType":"538","endLine":388,"endColumn":78},{"ruleId":"520","severity":1,"message":"650","line":2,"column":74,"nodeType":"522","messageId":"523","endLine":2,"endColumn":80},{"ruleId":"520","severity":1,"message":"619","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":27},{"ruleId":"520","severity":1,"message":"651","line":20,"column":8,"nodeType":"522","messageId":"523","endLine":20,"endColumn":13},{"ruleId":"541","severity":1,"message":"623","line":68,"column":13,"nodeType":"543","messageId":"531","endLine":68,"endColumn":29},{"ruleId":"520","severity":1,"message":"546","line":286,"column":12,"nodeType":"522","messageId":"523","endLine":286,"endColumn":17},{"ruleId":"520","severity":1,"message":"547","line":286,"column":19,"nodeType":"522","messageId":"523","endLine":286,"endColumn":27},{"ruleId":"520","severity":1,"message":"652","line":288,"column":11,"nodeType":"522","messageId":"523","endLine":288,"endColumn":16},{"ruleId":"520","severity":1,"message":"653","line":289,"column":10,"nodeType":"522","messageId":"523","endLine":289,"endColumn":23},{"ruleId":"520","severity":1,"message":"654","line":289,"column":24,"nodeType":"522","messageId":"523","endLine":289,"endColumn":40},{"ruleId":"528","severity":1,"message":"532","line":305,"column":46,"nodeType":"530","messageId":"531","endLine":305,"endColumn":48},{"ruleId":"528","severity":1,"message":"529","line":315,"column":52,"nodeType":"530","messageId":"531","endLine":315,"endColumn":54},{"ruleId":"528","severity":1,"message":"532","line":330,"column":54,"nodeType":"530","messageId":"531","endLine":330,"endColumn":56},{"ruleId":"528","severity":1,"message":"529","line":338,"column":60,"nodeType":"530","messageId":"531","endLine":338,"endColumn":62},{"ruleId":"528","severity":1,"message":"529","line":362,"column":53,"nodeType":"530","messageId":"531","endLine":362,"endColumn":55},{"ruleId":"528","severity":1,"message":"529","line":368,"column":53,"nodeType":"530","messageId":"531","endLine":368,"endColumn":55},{"ruleId":"520","severity":1,"message":"655","line":431,"column":7,"nodeType":"522","messageId":"523","endLine":431,"endColumn":18},{"ruleId":"528","severity":1,"message":"532","line":446,"column":54,"nodeType":"530","messageId":"531","endLine":446,"endColumn":56},{"ruleId":"528","severity":1,"message":"529","line":458,"column":60,"nodeType":"530","messageId":"531","endLine":458,"endColumn":62},{"ruleId":"569","severity":1,"message":"570","line":599,"column":63,"nodeType":"557","messageId":"571","endLine":599,"endColumn":65},{"ruleId":"528","severity":1,"message":"532","line":600,"column":68,"nodeType":"530","messageId":"531","endLine":600,"endColumn":70},{"ruleId":"569","severity":1,"message":"570","line":617,"column":55,"nodeType":"557","messageId":"571","endLine":617,"endColumn":57},{"ruleId":"528","severity":1,"message":"532","line":670,"column":52,"nodeType":"530","messageId":"531","endLine":670,"endColumn":54},{"ruleId":"528","severity":1,"message":"532","line":682,"column":48,"nodeType":"530","messageId":"531","endLine":682,"endColumn":50},{"ruleId":"555","severity":1,"message":"656","line":742,"column":5,"nodeType":"559","endLine":742,"endColumn":51,"suggestions":"657"},{"ruleId":"520","severity":1,"message":"634","line":747,"column":8,"nodeType":"522","messageId":"523","endLine":747,"endColumn":22},{"ruleId":"528","severity":1,"message":"529","line":751,"column":26,"nodeType":"530","messageId":"531","endLine":751,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":757,"column":33,"nodeType":"530","messageId":"531","endLine":757,"endColumn":35},{"ruleId":"528","severity":1,"message":"532","line":762,"column":27,"nodeType":"530","messageId":"531","endLine":762,"endColumn":29},{"ruleId":"528","severity":1,"message":"532","line":814,"column":59,"nodeType":"530","messageId":"531","endLine":814,"endColumn":61},{"ruleId":"528","severity":1,"message":"532","line":849,"column":67,"nodeType":"530","messageId":"531","endLine":849,"endColumn":69},{"ruleId":"528","severity":1,"message":"532","line":894,"column":67,"nodeType":"530","messageId":"531","endLine":894,"endColumn":69},{"ruleId":"520","severity":1,"message":"628","line":984,"column":7,"nodeType":"522","messageId":"523","endLine":984,"endColumn":14},{"ruleId":"528","severity":1,"message":"529","line":996,"column":26,"nodeType":"530","messageId":"531","endLine":996,"endColumn":28},{"ruleId":"551","severity":1,"message":"552","line":999,"column":21,"nodeType":"522","messageId":"553","endLine":999,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":1027,"column":37,"nodeType":"557","messageId":"571","endLine":1027,"endColumn":39},{"ruleId":"569","severity":1,"message":"570","line":1061,"column":35,"nodeType":"557","messageId":"571","endLine":1061,"endColumn":37},{"ruleId":"569","severity":1,"message":"570","line":1107,"column":35,"nodeType":"557","messageId":"571","endLine":1107,"endColumn":37},{"ruleId":"528","severity":1,"message":"529","line":1130,"column":50,"nodeType":"530","messageId":"531","endLine":1130,"endColumn":52},{"ruleId":"528","severity":1,"message":"529","line":1251,"column":47,"nodeType":"530","messageId":"531","endLine":1251,"endColumn":49},{"ruleId":"561","severity":1,"message":"562","line":1252,"column":60,"nodeType":"563","messageId":"564","endLine":1252,"endColumn":61,"fix":"658"},{"ruleId":"536","severity":1,"message":"537","line":1335,"column":65,"nodeType":"538","endLine":1335,"endColumn":101},{"ruleId":"536","severity":1,"message":"537","line":1342,"column":65,"nodeType":"538","endLine":1342,"endColumn":98},{"ruleId":"595","severity":1,"message":"596","line":1369,"column":49,"nodeType":"538","endLine":1371,"endColumn":100},{"ruleId":"569","severity":1,"message":"570","line":22,"column":22,"nodeType":"557","messageId":"571","endLine":22,"endColumn":24},{"ruleId":"555","severity":1,"message":"659","line":42,"column":4,"nodeType":"559","endLine":42,"endColumn":11,"suggestions":"660"},{"ruleId":"520","severity":1,"message":"650","line":2,"column":74,"nodeType":"522","messageId":"523","endLine":2,"endColumn":80},{"ruleId":"520","severity":1,"message":"619","line":10,"column":8,"nodeType":"522","messageId":"523","endLine":10,"endColumn":27},{"ruleId":"520","severity":1,"message":"651","line":20,"column":8,"nodeType":"522","messageId":"523","endLine":20,"endColumn":13},{"ruleId":"541","severity":1,"message":"623","line":51,"column":13,"nodeType":"543","messageId":"531","endLine":51,"endColumn":29},{"ruleId":"520","severity":1,"message":"546","line":282,"column":12,"nodeType":"522","messageId":"523","endLine":282,"endColumn":17},{"ruleId":"520","severity":1,"message":"547","line":282,"column":19,"nodeType":"522","messageId":"523","endLine":282,"endColumn":27},{"ruleId":"528","severity":1,"message":"532","line":301,"column":46,"nodeType":"530","messageId":"531","endLine":301,"endColumn":48},{"ruleId":"528","severity":1,"message":"529","line":309,"column":52,"nodeType":"530","messageId":"531","endLine":309,"endColumn":54},{"ruleId":"528","severity":1,"message":"532","line":324,"column":54,"nodeType":"530","messageId":"531","endLine":324,"endColumn":56},{"ruleId":"528","severity":1,"message":"529","line":332,"column":60,"nodeType":"530","messageId":"531","endLine":332,"endColumn":62},{"ruleId":"528","severity":1,"message":"529","line":356,"column":53,"nodeType":"530","messageId":"531","endLine":356,"endColumn":55},{"ruleId":"528","severity":1,"message":"529","line":362,"column":53,"nodeType":"530","messageId":"531","endLine":362,"endColumn":55},{"ruleId":"569","severity":1,"message":"570","line":630,"column":63,"nodeType":"557","messageId":"571","endLine":630,"endColumn":65},{"ruleId":"528","severity":1,"message":"532","line":633,"column":68,"nodeType":"530","messageId":"531","endLine":633,"endColumn":70},{"ruleId":"569","severity":1,"message":"570","line":650,"column":55,"nodeType":"557","messageId":"571","endLine":650,"endColumn":57},{"ruleId":"528","severity":1,"message":"532","line":738,"column":34,"nodeType":"530","messageId":"531","endLine":738,"endColumn":36},{"ruleId":"555","severity":1,"message":"656","line":749,"column":5,"nodeType":"559","endLine":749,"endColumn":51,"suggestions":"661"},{"ruleId":"520","severity":1,"message":"634","line":754,"column":8,"nodeType":"522","messageId":"523","endLine":754,"endColumn":22},{"ruleId":"528","severity":1,"message":"529","line":758,"column":26,"nodeType":"530","messageId":"531","endLine":758,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":764,"column":33,"nodeType":"530","messageId":"531","endLine":764,"endColumn":35},{"ruleId":"528","severity":1,"message":"532","line":769,"column":27,"nodeType":"530","messageId":"531","endLine":769,"endColumn":29},{"ruleId":"528","severity":1,"message":"532","line":804,"column":59,"nodeType":"530","messageId":"531","endLine":804,"endColumn":61},{"ruleId":"528","severity":1,"message":"532","line":839,"column":67,"nodeType":"530","messageId":"531","endLine":839,"endColumn":69},{"ruleId":"528","severity":1,"message":"532","line":884,"column":67,"nodeType":"530","messageId":"531","endLine":884,"endColumn":69},{"ruleId":"520","severity":1,"message":"662","line":941,"column":8,"nodeType":"522","messageId":"523","endLine":941,"endColumn":17},{"ruleId":"520","severity":1,"message":"628","line":983,"column":7,"nodeType":"522","messageId":"523","endLine":983,"endColumn":14},{"ruleId":"528","severity":1,"message":"529","line":995,"column":26,"nodeType":"530","messageId":"531","endLine":995,"endColumn":28},{"ruleId":"551","severity":1,"message":"552","line":998,"column":21,"nodeType":"522","messageId":"553","endLine":998,"endColumn":36},{"ruleId":"569","severity":1,"message":"570","line":1026,"column":37,"nodeType":"557","messageId":"571","endLine":1026,"endColumn":39},{"ruleId":"569","severity":1,"message":"570","line":1060,"column":35,"nodeType":"557","messageId":"571","endLine":1060,"endColumn":37},{"ruleId":"528","severity":1,"message":"529","line":1081,"column":50,"nodeType":"530","messageId":"531","endLine":1081,"endColumn":52},{"ruleId":"569","severity":1,"message":"570","line":1132,"column":40,"nodeType":"557","messageId":"571","endLine":1132,"endColumn":42},{"ruleId":"528","severity":1,"message":"529","line":1183,"column":47,"nodeType":"530","messageId":"531","endLine":1183,"endColumn":49},{"ruleId":"561","severity":1,"message":"562","line":1184,"column":60,"nodeType":"563","messageId":"564","endLine":1184,"endColumn":61,"fix":"663"},{"ruleId":"536","severity":1,"message":"537","line":1264,"column":65,"nodeType":"538","endLine":1264,"endColumn":101},{"ruleId":"536","severity":1,"message":"537","line":1271,"column":65,"nodeType":"538","endLine":1271,"endColumn":98},{"ruleId":"595","severity":1,"message":"596","line":1298,"column":49,"nodeType":"538","endLine":1300,"endColumn":100},{"ruleId":"528","severity":1,"message":"529","line":1382,"column":6,"nodeType":"530","messageId":"531","endLine":1382,"endColumn":8},{"ruleId":"520","severity":1,"message":"664","line":2,"column":63,"nodeType":"522","messageId":"523","endLine":2,"endColumn":69},{"ruleId":"520","severity":1,"message":"620","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":22},{"ruleId":"520","severity":1,"message":"652","line":71,"column":8,"nodeType":"522","messageId":"523","endLine":71,"endColumn":13},{"ruleId":"528","severity":1,"message":"529","line":97,"column":26,"nodeType":"530","messageId":"531","endLine":97,"endColumn":28},{"ruleId":"520","severity":1,"message":"665","line":109,"column":11,"nodeType":"522","messageId":"523","endLine":109,"endColumn":19},{"ruleId":"528","severity":1,"message":"529","line":128,"column":42,"nodeType":"530","messageId":"531","endLine":128,"endColumn":44},{"ruleId":"528","severity":1,"message":"529","line":150,"column":46,"nodeType":"530","messageId":"531","endLine":150,"endColumn":48},{"ruleId":"555","severity":1,"message":"666","line":172,"column":8,"nodeType":"559","endLine":172,"endColumn":10,"suggestions":"667"},{"ruleId":"561","severity":1,"message":"562","line":280,"column":70,"nodeType":"563","messageId":"564","endLine":280,"endColumn":71,"fix":"668"},{"ruleId":"520","severity":1,"message":"669","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":14},{"ruleId":"670","severity":1,"message":"671","line":10,"column":1,"nodeType":"672","endLine":57,"endColumn":2},{"ruleId":"516","replacedBy":"673"},{"ruleId":"518","replacedBy":"674"},{"ruleId":"520","severity":1,"message":"664","line":2,"column":26,"nodeType":"522","messageId":"523","endLine":2,"endColumn":32},{"ruleId":"520","severity":1,"message":"644","line":2,"column":33,"nodeType":"522","messageId":"523","endLine":2,"endColumn":39},{"ruleId":"520","severity":1,"message":"539","line":2,"column":69,"nodeType":"522","messageId":"523","endLine":2,"endColumn":74},{"ruleId":"520","severity":1,"message":"675","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":26},{"ruleId":"520","severity":1,"message":"620","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":22},{"ruleId":"520","severity":1,"message":"676","line":61,"column":12,"nodeType":"522","messageId":"523","endLine":61,"endColumn":32},{"ruleId":"520","severity":1,"message":"652","line":68,"column":12,"nodeType":"522","messageId":"523","endLine":68,"endColumn":17},{"ruleId":"555","severity":1,"message":"556","line":71,"column":15,"nodeType":"557","endLine":77,"endColumn":6},{"ruleId":"555","severity":1,"message":"677","line":77,"column":8,"nodeType":"559","endLine":77,"endColumn":10,"suggestions":"678"},{"ruleId":"528","severity":1,"message":"529","line":95,"column":26,"nodeType":"530","messageId":"531","endLine":95,"endColumn":28},{"ruleId":"520","severity":1,"message":"665","line":109,"column":11,"nodeType":"522","messageId":"523","endLine":109,"endColumn":19},{"ruleId":"528","severity":1,"message":"529","line":124,"column":26,"nodeType":"530","messageId":"531","endLine":124,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":162,"column":36,"nodeType":"530","messageId":"531","endLine":162,"endColumn":38},{"ruleId":"561","severity":1,"message":"562","line":163,"column":48,"nodeType":"563","messageId":"564","endLine":163,"endColumn":49,"fix":"679"},{"ruleId":"520","severity":1,"message":"618","line":2,"column":46,"nodeType":"522","messageId":"523","endLine":2,"endColumn":62},{"ruleId":"528","severity":1,"message":"532","line":55,"column":57,"nodeType":"530","messageId":"531","endLine":55,"endColumn":59},{"ruleId":"528","severity":1,"message":"529","line":63,"column":49,"nodeType":"530","messageId":"531","endLine":63,"endColumn":51},{"ruleId":"520","severity":1,"message":"680","line":77,"column":11,"nodeType":"522","messageId":"523","endLine":77,"endColumn":30},{"ruleId":"555","severity":1,"message":"556","line":138,"column":15,"nodeType":"557","endLine":181,"endColumn":6},{"ruleId":"528","severity":1,"message":"532","line":148,"column":26,"nodeType":"530","messageId":"531","endLine":148,"endColumn":28},{"ruleId":"520","severity":1,"message":"681","line":1,"column":16,"nodeType":"522","messageId":"523","endLine":1,"endColumn":24},{"ruleId":"520","severity":1,"message":"682","line":1,"column":25,"nodeType":"522","messageId":"523","endLine":1,"endColumn":34},{"ruleId":"520","severity":1,"message":"579","line":2,"column":10,"nodeType":"522","messageId":"523","endLine":2,"endColumn":22},{"ruleId":"520","severity":1,"message":"683","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":19},{"ruleId":"520","severity":1,"message":"684","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":19},{"ruleId":"520","severity":1,"message":"685","line":24,"column":9,"nodeType":"522","messageId":"523","endLine":24,"endColumn":15},{"ruleId":"520","severity":1,"message":"664","line":2,"column":26,"nodeType":"522","messageId":"523","endLine":2,"endColumn":32},{"ruleId":"520","severity":1,"message":"644","line":2,"column":33,"nodeType":"522","messageId":"523","endLine":2,"endColumn":39},{"ruleId":"520","severity":1,"message":"539","line":2,"column":69,"nodeType":"522","messageId":"523","endLine":2,"endColumn":74},{"ruleId":"520","severity":1,"message":"675","line":4,"column":8,"nodeType":"522","messageId":"523","endLine":4,"endColumn":26},{"ruleId":"520","severity":1,"message":"620","line":5,"column":8,"nodeType":"522","messageId":"523","endLine":5,"endColumn":22},{"ruleId":"520","severity":1,"message":"676","line":61,"column":12,"nodeType":"522","messageId":"523","endLine":61,"endColumn":32},{"ruleId":"520","severity":1,"message":"652","line":68,"column":12,"nodeType":"522","messageId":"523","endLine":68,"endColumn":17},{"ruleId":"555","severity":1,"message":"556","line":71,"column":15,"nodeType":"557","endLine":77,"endColumn":6},{"ruleId":"555","severity":1,"message":"677","line":77,"column":8,"nodeType":"559","endLine":77,"endColumn":10,"suggestions":"686"},{"ruleId":"528","severity":1,"message":"529","line":95,"column":26,"nodeType":"530","messageId":"531","endLine":95,"endColumn":28},{"ruleId":"520","severity":1,"message":"665","line":109,"column":11,"nodeType":"522","messageId":"523","endLine":109,"endColumn":19},{"ruleId":"528","severity":1,"message":"529","line":124,"column":26,"nodeType":"530","messageId":"531","endLine":124,"endColumn":28},{"ruleId":"528","severity":1,"message":"529","line":162,"column":36,"nodeType":"530","messageId":"531","endLine":162,"endColumn":38},{"ruleId":"561","severity":1,"message":"562","line":163,"column":48,"nodeType":"563","messageId":"564","endLine":163,"endColumn":49,"fix":"687"},"no-native-reassign",["688"],"no-negated-in-lhs",["689"],"no-unused-vars","'UsuarioProvider' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'match' is assigned a value but never used.","'setmatch' is assigned a value but never used.","'usuario' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Paper' is defined but never used.","'EtiquetasIcon' is defined but never used.","no-dupe-keys","Duplicate key 'divEtiqueta'.","ObjectExpression","'etiquetarray' is assigned a value but never used.","'etiquetas' is assigned a value but never used.","'paper' is assigned a value but never used.","'setpaper' is assigned a value but never used.","'manejarSnapshot' is defined but never used.","'armarconsultrecientes' is assigned a value but never used.","'armarconsultvalorados' is assigned a value but never used.","no-redeclare","'antiguoHaVotado' is already defined.","redeclared","'consulta' is already defined.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'buscaretiquetas' and 'listaconid'. Either include them or remove the dependency array.","ArrayExpression",["690"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"691","text":"692"},{"range":"693","text":"694"},"React Hook useEffect has missing dependencies: 'agregarEtiquetas' and 'props.history'. Either include them or remove the dependency array.",["695"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'removerEtiqueta' is assigned a value but never used.","'editarTodolosPapers' is assigned a value but never used.","'buscarPaperEdit' is assigned a value but never used.","'editaPaper' is assigned a value but never used.","'nuevaLista' is assigned a value but never used.","'nuevasEtiquetas' is assigned a value but never used.",{"range":"696","text":"697"},"'convertToRaw' is defined but never used.","'ContentState' is defined but never used.","'convertFromHTML' is defined but never used.","'EditorState' is defined but never used.","React Hook useEffect has a missing dependency: 'editorState'. Either include it or remove the dependency array.",["698"],"'Etiquetas' is defined but never used.","'LinearProgress' is defined but never used.","'purple' is defined but never used.","'Link' is defined but never used.","'agregarEtiquet' is assigned a value but never used.","'ActualizarPaper' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'llamarEtiquetas', 'props.history', and 'props.match.params'. Either include them or remove the dependency array.",["699"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Grid' is defined but never used.","'elvalor' is assigned a value but never used.","'setelvalor' is assigned a value but never used.","'pedirmas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listaconid'. Either include it or remove the dependency array.",["700"],"'papermatch' is assigned a value but never used.","'fade' is defined but never used.","'Icon' is defined but never used.","'seturl' is assigned a value but never used.","'titulo' is assigned a value but never used.","'settitulo' is assigned a value but never used.","'trimmedStringdos' is already defined.","'prueba' is assigned a value but never used.",{"range":"701","text":"702"},"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["703"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'CircularProgress' is defined but never used.","'InsertDriveFileIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'RetornarPaper' is defined but never used.","'RenovarPaperMapEtiqueta' is defined but never used.","Duplicate key '& .botoneditar'.","'cargando' is assigned a value but never used.","'setcargando' is assigned a value but never used.","'cargandoCorazon' is assigned a value but never used.","'setcargandoCorazon' is assigned a value but never used.","'megusta' is assigned a value but never used.","'tamaño' is assigned a value but never used.","'ultimoDocumento' is assigned a value but never used.","'setultimoDocumento' is assigned a value but never used.","'megustatres' is assigned a value but never used.","'megustacuatro' is assigned a value but never used.","'funcionCorazon' is assigned a value but never used.","'PostAddIcon' is defined but never used.","'LabelIcon' is defined but never used.","'prueba2' is assigned a value but never used.","'setprueba2' is assigned a value but never used.","'prueba1' is assigned a value but never used.","'setprueba1' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'recorrertag'. Either include it or remove the dependency array.",["704"],"'id' is assigned a value but never used.","'Avatar' is defined but never used.","'FaceIcon' is defined but never used.","'DoneIcon' is defined but never used.","'lista' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'setvalor' is assigned a value but never used.","'setRef' is defined but never used.","'Alert' is defined but never used.","'vacio' is assigned a value but never used.","'tituloGeneral' is assigned a value but never used.","'setTituloGeneral' is assigned a value but never used.","'buscarTexto' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.valorados'. Either include it or remove the dependency array.",["705"],{"range":"706","text":"707"},"React Hook useEffect has a missing dependency: 'location.state'. Either include it or remove the dependency array.",["708"],["709"],"'updateTag' is assigned a value but never used.",{"range":"710","text":"707"},"'Button' is defined but never used.","'pedirMas' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listAllUsers'. Either include it or remove the dependency array.",["711"],{"range":"712","text":"707"},"'moment' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["688"],["689"],"'FuncionesGenerales' is defined but never used.","'comentariosMostrados' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pedirComentarios'. Either include it or remove the dependency array.",["713"],{"range":"714","text":"715"},"'onEditorStateChange' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'draftToHtml' is defined but never used.","'htmlToDraft' is defined but never used.","'clases' is assigned a value but never used.",["716"],{"range":"717","text":"715"},"no-global-assign","no-unsafe-negation",{"desc":"718","fix":"719"},[16464,16518],"\n                                                    .",[20204,20230],"\n                        .",{"desc":"720","fix":"721"},[18385,18415],"\n                            .",{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},[7176,7185],"\n       .",{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},[33869,33901],"\n                              .",{"desc":"734","fix":"735"},{"desc":"732","fix":"736"},[34816,34848],{"desc":"737","fix":"738"},[8872,8904],{"desc":"739","fix":"740"},[3588,3608],"\n                  .",{"desc":"739","fix":"741"},[3595,3615],"Update the dependencies array to be: [buscaretiquetas, listaconid, props]",{"range":"742","text":"743"},"Update the dependencies array to be: [agregarEtiquetas, props.history, usuario]",{"range":"744","text":"745"},"Update the dependencies array to be: [editorState]",{"range":"746","text":"747"},"Update the dependencies array to be: [errores, llamarEtiquetas, props.history, props.match.params, usuario]",{"range":"748","text":"749"},"Update the dependencies array to be: [props, id, listaconid]",{"range":"750","text":"751"},"Update the dependencies array to be: [usuario, url, history.location.pathname, history]",{"range":"752","text":"753"},"Update the dependencies array to be: [props, recorrertag]",{"range":"754","text":"755"},"Update the dependencies array to be: [props.recientes, props.paperid, props.busqueda, props.valorados]",{"range":"756","text":"757"},"Update the dependencies array to be: [location.state, props]",{"range":"758","text":"759"},{"range":"760","text":"757"},"Update the dependencies array to be: [listAllUsers]",{"range":"761","text":"762"},"Update the dependencies array to be: [pedirComentarios]",{"range":"763","text":"764"},{"range":"765","text":"764"},[12021,12028],"[buscaretiquetas, listaconid, props]",[3047,3056],"[agregarEtiquetas, props.history, usuario]",[1690,1692],"[editorState]",[22652,22669],"[errores, llamarEtiquetas, props.history, props.match.params, usuario]",[13435,13445],"[props, id, listaconid]",[9265,9304],"[usuario, url, history.location.pathname, history]",[1611,1618],"[props, recorrertag]",[20701,20747],"[props.recientes, props.paperid, props.busqueda, props.valorados]",[1029,1036],"[location.state, props]",[21974,22020],[4914,4916],"[listAllUsers]",[1590,1592],"[pedirComentarios]",[1591,1593]]